export type Param = number | string | Array<any>;
export type Sheet = { [propertyName: string]: string };

export const concatWithSpaces = (values: Param[]): string => values.join(" ");

export const concatWithCommas = (values: Param[]): string => values.join(", ");

export function addParams(...params: Param[]): string {
    return params
        .map(value => {
            if (Array.isArray(value)) {
                return "(" + mulParams(...value) + ")";
            }
            return value;
        })
        .join(" + ");
}

export function mulParams(...params: Param[]): string {
    return params
        .map(value => {
            if (Array.isArray(value)) {
                return "(" + addParams(...value) + ")";
            }
            return value;
        })
        .join(" * ");
}

const buildDatatype = (unit: string, nums: number[]): string => nums.map(num => num + (num ? unit : "")).join(" ");

const buildMethod = (name: string, params: Param[]): string => {
    return (
        "(" +
        concatWithCommas(
            params.map(param => {
                if (Array.isArray(param)) {
                    return concatWithSpaces(
                        param.filter(subParam => {
                            return !Array.isArray(subParam);
                        })
                    );
                }
                return param;
            })
        ) +
        ")"
    );
};

const buildProperty = (values: Param[]): string => {
    return concatWithSpaces(
        values.map(value => {
            if (Array.isArray(value)) {
                return concatWithCommas(
                    value.map(subValue => {
                        if (Array.isArray(subValue)) {
                            return concatWithSpaces(
                                subValue.filter(subSubValue => {
                                    return !Array.isArray(subSubValue);
                                })
                            );
                        }
                        return subValue;
                    })
                );
            }
            return value;
        })
    );
};
export class Keyword {
    static MOZ_MAC_UNIFIED_TOOLBAR: string = "-moz-mac-unified-toolbar";
    static MOZ_WIN_BORDERLESS_GLASS: string = "-moz-win-borderless-glass";
    static MOZ_WIN_BROWSERTABBAR_TOOLBOX: string = "-moz-win-browsertabbar-toolbox";
    static MOZ_WIN_COMMUNICATIONS_TOOLBOX: string = "-moz-win-communications-toolbox";
    static MOZ_WIN_COMMUNICATIONSTEXT: string = "-moz-win-communicationstext";
    static MOZ_WIN_EXCLUDE_GLASS: string = "-moz-win-exclude-glass";
    static MOZ_WIN_GLASS: string = "-moz-win-glass";
    static MOZ_WIN_MEDIA_TOOLBOX: string = "-moz-win-media-toolbox";
    static MOZ_WIN_MEDIATEXT: string = "-moz-win-mediatext";
    static MOZ_WINDOW_BUTTON_BOX: string = "-moz-window-button-box";
    static MOZ_WINDOW_BUTTON_BOX_MAXIMIZED: string = "-moz-window-button-box-maximized";
    static MOZ_WINDOW_BUTTON_CLOSE: string = "-moz-window-button-close";
    static MOZ_WINDOW_BUTTON_MAXIMIZE: string = "-moz-window-button-maximize";
    static MOZ_WINDOW_BUTTON_MINIMIZE: string = "-moz-window-button-minimize";
    static MOZ_WINDOW_BUTTON_RESTORE: string = "-moz-window-button-restore";
    static MOZ_WINDOW_FRAME_BOTTOM: string = "-moz-window-frame-bottom";
    static MOZ_WINDOW_FRAME_LEFT: string = "-moz-window-frame-left";
    static MOZ_WINDOW_FRAME_RIGHT: string = "-moz-window-frame-right";
    static MOZ_WINDOW_TITLEBAR: string = "-moz-window-titlebar";
    static MOZ_WINDOW_TITLEBAR_MAXIMIZED: string = "-moz-window-titlebar-maximized";
    static MS_AUTOHIDING_SCROLLBAR: string = "-ms-autohiding-scrollbar";
    static _ACTIVEBORDER: string = "ActiveBorder";
    static _ACTIVECAPTION: string = "ActiveCaption";
    static _APPWORKSPACE: string = "AppWorkspace";
    static _BACKGROUND: string = "Background";
    static _BUTTONFACE: string = "ButtonFace";
    static _BUTTONHIGHLIGHT: string = "ButtonHighlight";
    static _BUTTONSHADOW: string = "ButtonShadow";
    static _BUTTONTEXT: string = "ButtonText";
    static _CAPTIONTEXT: string = "CaptionText";
    static _GRAYTEXT: string = "GrayText";
    static _HIGHLIGHT: string = "Highlight";
    static _HIGHLIGHTTEXT: string = "HighlightText";
    static _INACTIVEBORDER: string = "InactiveBorder";
    static _INACTIVECAPTION: string = "InactiveCaption";
    static _INACTIVECAPTIONTEXT: string = "InactiveCaptionText";
    static _INFOBACKGROUND: string = "InfoBackground";
    static _INFOTEXT: string = "InfoText";
    static _MENU: string = "Menu";
    static _MENUTEXT: string = "MenuText";
    static _SCROLLBAR: string = "Scrollbar";
    static _THREEDDARKSHADOW: string = "ThreeDDarkShadow";
    static _THREEDFACE: string = "ThreeDFace";
    static _THREEDHIGHLIGHT: string = "ThreeDHighlight";
    static _THREEDLIGHTSHADOW: string = "ThreeDLightShadow";
    static _THREEDSHADOW: string = "ThreeDShadow";
    static _WINDOW: string = "Window";
    static _WINDOWFRAME: string = "WindowFrame";
    static _WINDOWTEXT: string = "WindowText";
    static ABOVE: string = "above";
    static ABSOLUTE: string = "absolute";
    static ACTIVE: string = "active";
    static ADD: string = "add";
    static AFTER: string = "after";
    static ALIAS: string = "alias";
    static ALICEBLUE: string = "aliceblue";
    static ALL: string = "all";
    static ALL_PETITE_CAPS: string = "all-petite-caps";
    static ALL_SCROLL: string = "all-scroll";
    static ALL_SMALL_CAPS: string = "all-small-caps";
    static ALLOW_END: string = "allow-end";
    static ALPHA: string = "alpha";
    static ALPHABETIC: string = "alphabetic";
    static ALTERNATE: string = "alternate";
    static ALTERNATE_REVERSE: string = "alternate-reverse";
    static ALWAYS: string = "always";
    static AMP: string = "amp;";
    static ANTIQUEWHITE: string = "antiquewhite";
    static AQUA: string = "aqua";
    static AQUAMARINE: string = "aquamarine";
    static AT: string = "at";
    static AUTO: string = "auto";
    static AUTO_FILL: string = "auto-fill";
    static AUTO_FIT: string = "auto-fit";
    static AUTO_FLOW: string = "auto-flow";
    static AVAILABLE: string = "available";
    static AVOID: string = "avoid";
    static AVOID_COLUMN: string = "avoid-column";
    static AVOID_PAGE: string = "avoid-page";
    static AVOID_REGION: string = "avoid-region";
    static AZURE: string = "azure";
    static BACKWARDS: string = "backwards";
    static BALANCE: string = "balance";
    static BALANCE_ALL: string = "balance-all";
    static BASELINE: string = "baseline";
    static BEFORE: string = "before";
    static BEHIND: string = "behind";
    static BEIGE: string = "beige";
    static BELOW: string = "below";
    static BIDI_OVERRIDE: string = "bidi-override";
    static BISQUE: string = "bisque";
    static BLACK: string = "black";
    static BLANCHEDALMOND: string = "blanchedalmond";
    static BLINK: string = "blink";
    static BLOCK: string = "block";
    static BLOCK_AXIS: string = "block-axis";
    static BLOCK_END: string = "block-end";
    static BLOCK_START: string = "block-start";
    static BLUE: string = "blue";
    static BLUEVIOLET: string = "blueviolet";
    static BOLD: string = "bold";
    static BOLDER: string = "bolder";
    static BORDER: string = "border";
    static BORDER_BOX: string = "border-box";
    static BOTH: string = "both";
    static BOTTOM: string = "bottom";
    static BOX_DECORATION: string = "box-decoration";
    static BREAK_ALL: string = "break-all";
    static BREAK_WORD: string = "break-word";
    static BROWN: string = "brown";
    static BT: string = "bt";
    static BURLYWOOD: string = "burlywood";
    static BUTTON: string = "button";
    static BUTTON_ARROW_DOWN: string = "button-arrow-down";
    static BUTTON_ARROW_NEXT: string = "button-arrow-next";
    static BUTTON_ARROW_PREVIOUS: string = "button-arrow-previous";
    static BUTTON_ARROW_UP: string = "button-arrow-up";
    static BUTTON_BEVEL: string = "button-bevel";
    static BUTTON_FOCUS: string = "button-focus";
    static CADETBLUE: string = "cadetblue";
    static CAPITALIZE: string = "capitalize";
    static CAPTION: string = "caption";
    static CARET: string = "caret";
    static CELL: string = "cell";
    static CENTER: string = "center";
    static CENTER_LEFT: string = "center-left";
    static CENTER_RIGHT: string = "center-right";
    static CHAINED: string = "chained";
    static CHARTREUSE: string = "chartreuse";
    static CHECKBOX: string = "checkbox";
    static CHECKBOX_CONTAINER: string = "checkbox-container";
    static CHECKBOX_LABEL: string = "checkbox-label";
    static CHECKMENUITEM: string = "checkmenuitem";
    static CHOCOLATE: string = "chocolate";
    static CIRCLE: string = "circle";
    static CLEAR: string = "clear";
    static CLIP: string = "clip";
    static CLONE: string = "clone";
    static CLOSE_QUOTE: string = "close-quote";
    static CLOSEST_CORNER: string = "closest-corner";
    static CLOSEST_SIDE: string = "closest-side";
    static COL_RESIZE: string = "col-resize";
    static COLLAPSE: string = "collapse";
    static COLOR: string = "color";
    static COLOR_BURN: string = "color-burn";
    static COLOR_DODGE: string = "color-dodge";
    static COLUMN: string = "column";
    static COLUMN_REVERSE: string = "column-reverse";
    static COMMON_LIGATURES: string = "common-ligatures";
    static CONDENSED: string = "condensed";
    static CONTAIN: string = "contain";
    static CONTENT: string = "content";
    static CONTENT_BOX: string = "content-box";
    static CONTENTS: string = "contents";
    static CONTEXT_MENU: string = "context-menu";
    static CONTEXTUAL: string = "contextual";
    static COPY: string = "copy";
    static CORAL: string = "coral";
    static CORNFLOWERBLUE: string = "cornflowerblue";
    static CORNSILK: string = "cornsilk";
    static COVER: string = "cover";
    static CRIMSON: string = "crimson";
    static CRISP_EDGES: string = "crisp-edges";
    static CROSSHAIR: string = "crosshair";
    static CURRENTCOLOR: string = "currentcolor";
    static CURSIVE: string = "cursive";
    static CYAN: string = "cyan";
    static DARKBLUE: string = "darkblue";
    static DARKCYAN: string = "darkcyan";
    static DARKEN: string = "darken";
    static DARKGOLDENROD: string = "darkgoldenrod";
    static DARKGRAY: string = "darkgray";
    static DARKGREEN: string = "darkgreen";
    static DARKGREY: string = "darkgrey";
    static DARKKHAKI: string = "darkkhaki";
    static DARKMAGENTA: string = "darkmagenta";
    static DARKOLIVEGREEN: string = "darkolivegreen";
    static DARKORANGE: string = "darkorange";
    static DARKORCHID: string = "darkorchid";
    static DARKRED: string = "darkred";
    static DARKSALMON: string = "darksalmon";
    static DARKSEAGREEN: string = "darkseagreen";
    static DARKSLATEBLUE: string = "darkslateblue";
    static DARKSLATEGRAY: string = "darkslategray";
    static DARKSLATEGREY: string = "darkslategrey";
    static DARKTURQUOISE: string = "darkturquoise";
    static DARKVIOLET: string = "darkviolet";
    static DASHED: string = "dashed";
    static DEEPPINK: string = "deeppink";
    static DEEPSKYBLUE: string = "deepskyblue";
    static DEFAULT: string = "default";
    static DEFAULT_BUTTON: string = "default-button";
    static DENSE: string = "dense";
    static DESTINATION_ATOP: string = "destination-atop";
    static DESTINATION_IN: string = "destination-in";
    static DESTINATION_OUT: string = "destination-out";
    static DESTINATION_OVER: string = "destination-over";
    static DIAGONAL_FRACTIONS: string = "diagonal-fractions";
    static DIFFERENCE: string = "difference";
    static DIGITS: string = "digits";
    static DIMGRAY: string = "dimgray";
    static DIMGREY: string = "dimgrey";
    static DISABLED: string = "disabled";
    static DISCRETIONARY_LIGATURES: string = "discretionary-ligatures";
    static DODGERBLUE: string = "dodgerblue";
    static DOT: string = "dot";
    static DOTTED: string = "dotted";
    static DOUBLE: string = "double";
    static DOUBLE_CIRCLE: string = "double-circle";
    static DRAG: string = "drag";
    static DUALBUTTON: string = "dualbutton";
    static E_RESIZE: string = "e-resize";
    static EACH_LINE: string = "each-line";
    static EASE: string = "ease";
    static EASE_IN: string = "ease-in";
    static EASE_IN_OUT: string = "ease-in-out";
    static EASE_OUT: string = "ease-out";
    static ECONOMY: string = "economy";
    static EDGES: string = "edges";
    static ELEMENT: string = "element";
    static ELLIPSE: string = "ellipse";
    static ELLIPSIS: string = "ellipsis";
    static EMBED: string = "embed";
    static ENABLED: string = "enabled";
    static END: string = "end";
    static EVENODD: string = "evenodd";
    static EW_RESIZE: string = "ew-resize";
    static EXACT: string = "exact";
    static EXCLUDE: string = "exclude";
    static EXCLUSION: string = "exclusion";
    static EXPANDED: string = "expanded";
    static EXTRA_CONDENSED: string = "extra-condensed";
    static EXTRA_EXPANDED: string = "extra-expanded";
    static FALSE: string = "false";
    static FANTASY: string = "fantasy";
    static FAR_LEFT: string = "far-left";
    static FAR_RIGHT: string = "far-right";
    static FARTHEST_CORNER: string = "farthest-corner";
    static FARTHEST_SIDE: string = "farthest-side";
    static FILL: string = "fill";
    static FILL_AVAILABLE: string = "fill-available";
    static FILL_BOX: string = "fill-box";
    static FILL_OPACITY: string = "fill-opacity";
    static FILLED: string = "filled";
    static FIREBRICK: string = "firebrick";
    static FIRST: string = "first";
    static FIRST_LETTER: string = "first-letter";
    static FIT_CONTENT: string = "fit-content";
    static FIXED: string = "fixed";
    static FLAT: string = "flat";
    static FLEX: string = "flex";
    static FLEX_END: string = "flex-end";
    static FLEX_START: string = "flex-start";
    static FLIP: string = "flip";
    static FLORALWHITE: string = "floralwhite";
    static FLOW: string = "flow";
    static FLOW_ROOT: string = "flow-root";
    static FORCE_END: string = "force-end";
    static FORESTGREEN: string = "forestgreen";
    static FORWARDS: string = "forwards";
    static FROM_IMAGE: string = "from-image";
    static FUCHSIA: string = "fuchsia";
    static FULL_WIDTH: string = "full-width";
    static GAINSBORO: string = "gainsboro";
    static GEOMETRICPRECISION: string = "geometricPrecision";
    static GHOSTWHITE: string = "ghostwhite";
    static GOLD: string = "gold";
    static GOLDENROD: string = "goldenrod";
    static GRAB: string = "grab";
    static GRABBING: string = "grabbing";
    static GRAY: string = "gray";
    static GREEN: string = "green";
    static GREENYELLOW: string = "greenyellow";
    static GREY: string = "grey";
    static GRID: string = "grid";
    static GRIPPERS: string = "grippers";
    static GROOVE: string = "groove";
    static GROUPBOX: string = "groupbox";
    static HANGING: string = "hanging";
    static HARD_LIGHT: string = "hard-light";
    static HELP: string = "help";
    static HIDDEN: string = "hidden";
    static HIDE: string = "hide";
    static HISTORICAL_FORMS: string = "historical-forms";
    static HISTORICAL_LIGATURES: string = "historical-ligatures";
    static HONEYDEW: string = "honeydew";
    static HORIZONTAL: string = "horizontal";
    static HORIZONTAL_TB: string = "horizontal-tb";
    static HOTPINK: string = "hotpink";
    static HUE: string = "hue";
    static ICON: string = "icon";
    static IDEOGRAPH_ALPHA: string = "ideograph-alpha";
    static IDEOGRAPH_NUMERIC: string = "ideograph-numeric";
    static IDEOGRAPH_PARENTHESIS: string = "ideograph-parenthesis";
    static IDEOGRAPH_SPACE: string = "ideograph-space";
    static IDEOGRAPHIC: string = "ideographic";
    static IGNORE: string = "ignore";
    static INACTIVE: string = "inactive";
    static INDIANRED: string = "indianred";
    static INDIGO: string = "indigo";
    static INFINITE: string = "infinite";
    static INHERIT: string = "inherit";
    static INITIAL: string = "initial";
    static INLINE: string = "inline";
    static INLINE_AXIS: string = "inline-axis";
    static INLINE_BLOCK: string = "inline-block";
    static INLINE_END: string = "inline-end";
    static INLINE_FLEX: string = "inline-flex";
    static INLINE_GRID: string = "inline-grid";
    static INLINE_LIST_ITEM: string = "inline-list-item";
    static INLINE_START: string = "inline-start";
    static INLINE_TABLE: string = "inline-table";
    static INNER_SPIN_BUTTON: string = "inner-spin-button";
    static INSET: string = "inset";
    static INSIDE: string = "inside";
    static INTER_CHARACTER: string = "inter-character";
    static INTER_WORD: string = "inter-word";
    static INTERSECT: string = "intersect";
    static INVERT: string = "invert";
    static ISOLATE: string = "isolate";
    static ISOLATE_OVERRIDE: string = "isolate-override";
    static ITALIC: string = "italic";
    static IVORY: string = "ivory";
    static JIS04: string = "jis04";
    static JIS78: string = "jis78";
    static JIS83: string = "jis83";
    static JIS90: string = "jis90";
    static JUSTIFY: string = "justify";
    static KEEP_ALL: string = "keep-all";
    static KHAKI: string = "khaki";
    static LARGE: string = "large";
    static LARGER: string = "larger";
    static LAST: string = "last";
    static LAVENDER: string = "lavender";
    static LAVENDERBLUSH: string = "lavenderblush";
    static LAWNGREEN: string = "lawngreen";
    static LAYOUT: string = "layout";
    static LEADING_SPACES: string = "leading-spaces";
    static LEFT: string = "left";
    static LEFT_SIDE: string = "left-side";
    static LEFTWARDS: string = "leftwards";
    static LEGACY: string = "legacy";
    static LEMONCHIFFON: string = "lemonchiffon";
    static LIGHTBLUE: string = "lightblue";
    static LIGHTCORAL: string = "lightcoral";
    static LIGHTCYAN: string = "lightcyan";
    static LIGHTEN: string = "lighten";
    static LIGHTER: string = "lighter";
    static LIGHTGOLDENRODYELLOW: string = "lightgoldenrodyellow";
    static LIGHTGRAY: string = "lightgray";
    static LIGHTGREEN: string = "lightgreen";
    static LIGHTGREY: string = "lightgrey";
    static LIGHTPINK: string = "lightpink";
    static LIGHTSALMON: string = "lightsalmon";
    static LIGHTSEAGREEN: string = "lightseagreen";
    static LIGHTSKYBLUE: string = "lightskyblue";
    static LIGHTSLATEGRAY: string = "lightslategray";
    static LIGHTSLATEGREY: string = "lightslategrey";
    static LIGHTSTEELBLUE: string = "lightsteelblue";
    static LIGHTYELLOW: string = "lightyellow";
    static LIME: string = "lime";
    static LIMEGREEN: string = "limegreen";
    static LINE_THROUGH: string = "line-through";
    static LINEAR: string = "linear";
    static LINEN: string = "linen";
    static LINING_NUMS: string = "lining-nums";
    static LIST_ITEM: string = "list-item";
    static LISTBOX: string = "listbox";
    static LISTITEM: string = "listitem";
    static LOCAL: string = "local";
    static LOOSE: string = "loose";
    static LOWERCASE: string = "lowercase";
    static LR: string = "lr";
    static LTR: string = "ltr";
    static LUMINANCE: string = "luminance";
    static LUMINOSITY: string = "luminosity";
    static MAGENTA: string = "magenta";
    static MANDATORY: string = "mandatory";
    static MANIPULATION: string = "manipulation";
    static MANUAL: string = "manual";
    static MARGIN_BOX: string = "margin-box";
    static MARKERS: string = "markers";
    static MAROON: string = "maroon";
    static MATCH_PARENT: string = "match-parent";
    static MATCH_SOURCE: string = "match-source";
    static MAX_CONTENT: string = "max-content";
    static MAXIMUM: string = "maximum";
    static MEDIA_CONTROLS_BACKGROUND: string = "media-controls-background";
    static MEDIA_CONTROLS_FULLSCREEN_BACKGROUND: string = "media-controls-fullscreen-background";
    static MEDIA_CURRENT_TIME_DISPLAY: string = "media-current-time-display";
    static MEDIA_ENTER_FULLSCREEN_BUTTON: string = "media-enter-fullscreen-button";
    static MEDIA_EXIT_FULLSCREEN_BUTTON: string = "media-exit-fullscreen-button";
    static MEDIA_FULLSCREEN_BUTTON: string = "media-fullscreen-button";
    static MEDIA_MUTE_BUTTON: string = "media-mute-button";
    static MEDIA_OVERLAY_PLAY_BUTTON: string = "media-overlay-play-button";
    static MEDIA_PLAY_BUTTON: string = "media-play-button";
    static MEDIA_SEEK_BACK_BUTTON: string = "media-seek-back-button";
    static MEDIA_SEEK_FORWARD_BUTTON: string = "media-seek-forward-button";
    static MEDIA_SLIDER: string = "media-slider";
    static MEDIA_SLIDERTHUMB: string = "media-sliderthumb";
    static MEDIA_TIME_REMAINING_DISPLAY: string = "media-time-remaining-display";
    static MEDIA_TOGGLE_CLOSED_CAPTIONS_BUTTON: string = "media-toggle-closed-captions-button";
    static MEDIA_VOLUME_SLIDER: string = "media-volume-slider";
    static MEDIA_VOLUME_SLIDER_CONTAINER: string = "media-volume-slider-container";
    static MEDIA_VOLUME_SLIDERTHUMB: string = "media-volume-sliderthumb";
    static MEDIUM: string = "medium";
    static MEDIUMAQUAMARINE: string = "mediumaquamarine";
    static MEDIUMBLUE: string = "mediumblue";
    static MEDIUMORCHID: string = "mediumorchid";
    static MEDIUMPURPLE: string = "mediumpurple";
    static MEDIUMSEAGREEN: string = "mediumseagreen";
    static MEDIUMSLATEBLUE: string = "mediumslateblue";
    static MEDIUMSPRINGGREEN: string = "mediumspringgreen";
    static MEDIUMTURQUOISE: string = "mediumturquoise";
    static MEDIUMVIOLETRED: string = "mediumvioletred";
    static MENU: string = "menu";
    static MENUARROW: string = "menuarrow";
    static MENUBAR: string = "menubar";
    static MENUCHECKBOX: string = "menucheckbox";
    static MENUIMAGE: string = "menuimage";
    static MENUITEM: string = "menuitem";
    static MENUITEMTEXT: string = "menuitemtext";
    static MENULIST: string = "menulist";
    static MENULIST_BUTTON: string = "menulist-button";
    static MENULIST_TEXT: string = "menulist-text";
    static MENULIST_TEXTFIELD: string = "menulist-textfield";
    static MENUPOPUP: string = "menupopup";
    static MENURADIO: string = "menuradio";
    static MENUSEPARATOR: string = "menuseparator";
    static MESSAGE_BOX: string = "message-box";
    static METER: string = "meter";
    static METERBAR: string = "meterbar";
    static METERCHUNK: string = "meterchunk";
    static MIDDLE: string = "middle";
    static MIDNIGHTBLUE: string = "midnightblue";
    static MIN_CONTENT: string = "min-content";
    static MINTCREAM: string = "mintcream";
    static MISTYROSE: string = "mistyrose";
    static MIXED: string = "mixed";
    static MOCCASIN: string = "moccasin";
    static MONOSPACE: string = "monospace";
    static MOVE: string = "move";
    static MULTIPLE: string = "multiple";
    static MULTIPLY: string = "multiply";
    static N_RESIZE: string = "n-resize";
    static NAVAJOWHITE: string = "navajowhite";
    static NAVY: string = "navy";
    static NE_RESIZE: string = "ne-resize";
    static NESW_RESIZE: string = "nesw-resize";
    static NO_CLIP: string = "no-clip";
    static NO_CLOSE_QUOTE: string = "no-close-quote";
    static NO_COMMON_LIGATURES: string = "no-common-ligatures";
    static NO_CONTEXTUAL: string = "no-contextual";
    static NO_DISCRETIONARY_LIGATURES: string = "no-discretionary-ligatures";
    static NO_DRAG: string = "no-drag";
    static NO_DROP: string = "no-drop";
    static NO_HISTORICAL_LIGATURES: string = "no-historical-ligatures";
    static NO_LIMIT: string = "no-limit";
    static NO_OPEN_QUOTE: string = "no-open-quote";
    static NO_REPEAT: string = "no-repeat";
    static NONE: string = "none";
    static NONZERO: string = "nonzero";
    static NORMAL: string = "normal";
    static NOT_ALLOWED: string = "not-allowed";
    static NOWRAP: string = "nowrap";
    static NS_RESIZE: string = "ns-resize";
    static NW_RESIZE: string = "nw-resize";
    static NWSE_RESIZE: string = "nwse-resize";
    static OBJECTS: string = "objects";
    static OBLIQUE: string = "oblique";
    static OFF: string = "off";
    static OLDLACE: string = "oldlace";
    static OLDSTYLE_NUMS: string = "oldstyle-nums";
    static OLIVE: string = "olive";
    static OLIVEDRAB: string = "olivedrab";
    static ON: string = "on";
    static OPEN: string = "open";
    static OPEN_QUOTE: string = "open-quote";
    static OPTIMIZELEGIBILITY: string = "optimizeLegibility";
    static OPTIMIZESPEED: string = "optimizeSpeed";
    static ORANGE: string = "orange";
    static ORANGERED: string = "orangered";
    static ORCHID: string = "orchid";
    static ORDINAL: string = "ordinal";
    static OUTSET: string = "outset";
    static OUTSIDE: string = "outside";
    static OVER: string = "over";
    static OVERLAY: string = "overlay";
    static OVERLINE: string = "overline";
    static PADDING: string = "padding";
    static PADDING_BOX: string = "padding-box";
    static PAGE: string = "page";
    static PAINT: string = "paint";
    static PAINTED: string = "painted";
    static PALEGOLDENROD: string = "palegoldenrod";
    static PALEGREEN: string = "palegreen";
    static PALETURQUOISE: string = "paleturquoise";
    static PALEVIOLETRED: string = "palevioletred";
    static PAN_DOWN: string = "pan-down";
    static PAN_LEFT: string = "pan-left";
    static PAN_RIGHT: string = "pan-right";
    static PAN_UP: string = "pan-up";
    static PAN_X: string = "pan-x";
    static PAN_Y: string = "pan-y";
    static PAPAYAWHIP: string = "papayawhip";
    static PAUSED: string = "paused";
    static PEACHPUFF: string = "peachpuff";
    static PERU: string = "peru";
    static PETITE_CAPS: string = "petite-caps";
    static PINCH_ZOOM: string = "pinch-zoom";
    static PINK: string = "pink";
    static PIXELATED: string = "pixelated";
    static PLAINTEXT: string = "plaintext";
    static PLUM: string = "plum";
    static POINTER: string = "pointer";
    static POWDERBLUE: string = "powderblue";
    static PRE: string = "pre";
    static PRE_LINE: string = "pre-line";
    static PRE_WRAP: string = "pre-wrap";
    static PRESERVE_3D: string = "preserve-3d";
    static PROGRESS: string = "progress";
    static PROGRESS_BAR: string = "progress-bar";
    static PROGRESS_BAR_VALUE: string = "progress-bar-value";
    static PROGRESSBAR: string = "progressbar";
    static PROGRESSBAR_VERTICAL: string = "progressbar-vertical";
    static PROGRESSCHUNK: string = "progresschunk";
    static PROGRESSCHUNK_VERTICAL: string = "progresschunk-vertical";
    static PROPORTIONAL_NUMS: string = "proportional-nums";
    static PROPORTIONAL_WIDTH: string = "proportional-width";
    static PROXIMITY: string = "proximity";
    static PURPLE: string = "purple";
    static PUSH_BUTTON: string = "push-button";
    static RADIO: string = "radio";
    static RADIO_CONTAINER: string = "radio-container";
    static RADIO_LABEL: string = "radio-label";
    static RADIOMENUITEM: string = "radiomenuitem";
    static RAILED: string = "railed";
    static RANGE: string = "range";
    static RANGE_THUMB: string = "range-thumb";
    static READ_ONLY: string = "read-only";
    static READ_WRITE: string = "read-write";
    static READ_WRITE_PLAINTEXT_ONLY: string = "read-write-plaintext-only";
    static REBECCAPURPLE: string = "rebeccapurple";
    static RECTO: string = "recto";
    static RED: string = "red";
    static REGION: string = "region";
    static RELATIVE: string = "relative";
    static REPEAT: string = "repeat";
    static REPEAT_X: string = "repeat-x";
    static REPEAT_Y: string = "repeat-y";
    static RESET: string = "reset";
    static RESIZER: string = "resizer";
    static RESIZERPANEL: string = "resizerpanel";
    static REVERSE: string = "reverse";
    static REVERT: string = "revert";
    static RIDGE: string = "ridge";
    static RIGHT: string = "right";
    static RIGHT_SIDE: string = "right-side";
    static RIGHTWARDS: string = "rightwards";
    static RL: string = "rl";
    static ROSYBROWN: string = "rosybrown";
    static ROUND: string = "round";
    static ROW: string = "row";
    static ROW_RESIZE: string = "row-resize";
    static ROW_REVERSE: string = "row-reverse";
    static ROYALBLUE: string = "royalblue";
    static RTL: string = "rtl";
    static RUBY: string = "ruby";
    static RUBY_BASE: string = "ruby-base";
    static RUBY_BASE_CONTAINER: string = "ruby-base-container";
    static RUBY_TEXT: string = "ruby-text";
    static RUBY_TEXT_CONTAINER: string = "ruby-text-container";
    static RUN_IN: string = "run-in";
    static RUNNING: string = "running";
    static S_RESIZE: string = "s-resize";
    static SADDLEBROWN: string = "saddlebrown";
    static SAFE: string = "safe";
    static SALMON: string = "salmon";
    static SANDYBROWN: string = "sandybrown";
    static SANS_SERIF: string = "sans-serif";
    static SATURATION: string = "saturation";
    static SCALE_DOWN: string = "scale-down";
    static SCALE_HORIZONTAL: string = "scale-horizontal";
    static SCALE_VERTICAL: string = "scale-vertical";
    static SCALETHUMB_HORIZONTAL: string = "scalethumb-horizontal";
    static SCALETHUMB_VERTICAL: string = "scalethumb-vertical";
    static SCALETHUMBEND: string = "scalethumbend";
    static SCALETHUMBSTART: string = "scalethumbstart";
    static SCALETHUMBTICK: string = "scalethumbtick";
    static SCREEN: string = "screen";
    static SCROLL: string = "scroll";
    static SCROLL_POSITION: string = "scroll-position";
    static SCROLLBAR: string = "scrollbar";
    static SCROLLBARBUTTON_DOWN: string = "scrollbarbutton-down";
    static SCROLLBARBUTTON_LEFT: string = "scrollbarbutton-left";
    static SCROLLBARBUTTON_RIGHT: string = "scrollbarbutton-right";
    static SCROLLBARBUTTON_UP: string = "scrollbarbutton-up";
    static SCROLLBARTHUMB_HORIZONTAL: string = "scrollbarthumb-horizontal";
    static SCROLLBARTHUMB_VERTICAL: string = "scrollbarthumb-vertical";
    static SCROLLBARTRACK_HORIZONTAL: string = "scrollbartrack-horizontal";
    static SCROLLBARTRACK_VERTICAL: string = "scrollbartrack-vertical";
    static SE_RESIZE: string = "se-resize";
    static SEAGREEN: string = "seagreen";
    static SEARCHFIELD: string = "searchfield";
    static SEARCHFIELD_CANCEL_BUTTON: string = "searchfield-cancel-button";
    static SEARCHFIELD_DECORATION: string = "searchfield-decoration";
    static SEARCHFIELD_RESULTS_BUTTON: string = "searchfield-results-button";
    static SEARCHFIELD_RESULTS_DECORATION: string = "searchfield-results-decoration";
    static SEASHELL: string = "seashell";
    static SELECT_AFTER: string = "select-after";
    static SELECT_ALL: string = "select-all";
    static SELECT_BEFORE: string = "select-before";
    static SELECT_MENU: string = "select-menu";
    static SELECT_SAME: string = "select-same";
    static SELF_END: string = "self-end";
    static SELF_START: string = "self-start";
    static SEMI_CONDENSED: string = "semi-condensed";
    static SEMI_EXPANDED: string = "semi-expanded";
    static SEPARATE: string = "separate";
    static SEPARATOR: string = "separator";
    static SERIF: string = "serif";
    static SESAME: string = "sesame";
    static SHEET: string = "sheet";
    static SHOW: string = "show";
    static SIDEWAYS: string = "sideways";
    static SIDEWAYS_LR: string = "sideways-lr";
    static SIDEWAYS_RL: string = "sideways-rl";
    static SIENNA: string = "sienna";
    static SILVER: string = "silver";
    static SIMPLIFIED: string = "simplified";
    static SINGLE: string = "single";
    static SIZE: string = "size";
    static SKYBLUE: string = "skyblue";
    static SLASHED_ZERO: string = "slashed-zero";
    static SLATEBLUE: string = "slateblue";
    static SLATEGRAY: string = "slategray";
    static SLATEGREY: string = "slategrey";
    static SLICE: string = "slice";
    static SLIDER_HORIZONTAL: string = "slider-horizontal";
    static SLIDER_VERTICAL: string = "slider-vertical";
    static SLIDERTHUMB_HORIZONTAL: string = "sliderthumb-horizontal";
    static SLIDERTHUMB_VERTICAL: string = "sliderthumb-vertical";
    static SMALL: string = "small";
    static SMALL_CAPS: string = "small-caps";
    static SMALL_CAPTION: string = "small-caption";
    static SMALLER: string = "smaller";
    static SMOOTH: string = "smooth";
    static SNAP: string = "snap";
    static SNOW: string = "snow";
    static SOFT_LIGHT: string = "soft-light";
    static SOLID: string = "solid";
    static SOURCE_ATOP: string = "source-atop";
    static SOURCE_IN: string = "source-in";
    static SOURCE_OUT: string = "source-out";
    static SOURCE_OVER: string = "source-over";
    static SPACE: string = "space";
    static SPACE_AROUND: string = "space-around";
    static SPACE_BETWEEN: string = "space-between";
    static SPACE_EVENLY: string = "space-evenly";
    static SPACES: string = "spaces";
    static SPAN: string = "span";
    static SPINNER: string = "spinner";
    static SPINNER_DOWNBUTTON: string = "spinner-downbutton";
    static SPINNER_TEXTFIELD: string = "spinner-textfield";
    static SPINNER_UPBUTTON: string = "spinner-upbutton";
    static SPLITTER: string = "splitter";
    static SPRINGGREEN: string = "springgreen";
    static SQUARE_BUTTON: string = "square-button";
    static STACKED_FRACTIONS: string = "stacked-fractions";
    static START: string = "start";
    static STATIC: string = "static";
    static STATUS_BAR: string = "status-bar";
    static STATUSBAR: string = "statusbar";
    static STATUSBARPANEL: string = "statusbarpanel";
    static STEELBLUE: string = "steelblue";
    static STEP_END: string = "step-end";
    static STEP_START: string = "step-start";
    static STICKY: string = "sticky";
    static STRETCH: string = "stretch";
    static STRETCH_TO_FIT: string = "stretch-to-fit";
    static STRICT: string = "strict";
    static STROKE: string = "stroke";
    static STROKE_BOX: string = "stroke-box";
    static STROKE_OPACITY: string = "stroke-opacity";
    static STYLE: string = "style";
    static SUB: string = "sub";
    static SUBTRACT: string = "subtract";
    static SUPER: string = "super";
    static SW_RESIZE: string = "sw-resize";
    static TAB: string = "tab";
    static TAB_SCROLL_ARROW_BACK: string = "tab-scroll-arrow-back";
    static TAB_SCROLL_ARROW_FORWARD: string = "tab-scroll-arrow-forward";
    static TABLE: string = "table";
    static TABLE_CAPTION: string = "table-caption";
    static TABLE_CELL: string = "table-cell";
    static TABLE_COLUMN: string = "table-column";
    static TABLE_COLUMN_GROUP: string = "table-column-group";
    static TABLE_FOOTER_GROUP: string = "table-footer-group";
    static TABLE_HEADER_GROUP: string = "table-header-group";
    static TABLE_ROW: string = "table-row";
    static TABLE_ROW_GROUP: string = "table-row-group";
    static TABPANEL: string = "tabpanel";
    static TABPANELS: string = "tabpanels";
    static TABULAR_NUMS: string = "tabular-nums";
    static TAN: string = "tan";
    static TB: string = "tb";
    static TEAL: string = "teal";
    static TEXT: string = "text";
    static TEXT_BOTTOM: string = "text-bottom";
    static TEXT_TOP: string = "text-top";
    static TEXTAREA: string = "textarea";
    static TEXTFIELD: string = "textfield";
    static TEXTFIELD_MULTILINE: string = "textfield-multiline";
    static THICK: string = "thick";
    static THIN: string = "thin";
    static THISTLE: string = "thistle";
    static TITLING_CAPS: string = "titling-caps";
    static TO: string = "to";
    static TOMATO: string = "tomato";
    static TOOLBAR: string = "toolbar";
    static TOOLBARBUTTON: string = "toolbarbutton";
    static TOOLBARBUTTON_DROPDOWN: string = "toolbarbutton-dropdown";
    static TOOLBARGRIPPER: string = "toolbargripper";
    static TOOLBOX: string = "toolbox";
    static TOOLTIP: string = "tooltip";
    static TOP: string = "top";
    static TOUCH: string = "touch";
    static TRADITIONAL: string = "traditional";
    static TRAILING_SPACES: string = "trailing-spaces";
    static TRANSPARENT: string = "transparent";
    static TREEHEADER: string = "treeheader";
    static TREEHEADERCELL: string = "treeheadercell";
    static TREEHEADERSORTARROW: string = "treeheadersortarrow";
    static TREEITEM: string = "treeitem";
    static TREELINE: string = "treeline";
    static TREETWISTY: string = "treetwisty";
    static TREETWISTYOPEN: string = "treetwistyopen";
    static TREEVIEW: string = "treeview";
    static TRIANGLE: string = "triangle";
    static TRUE: string = "true";
    static TURQUOISE: string = "turquoise";
    static ULTRA_CONDENSED: string = "ultra-condensed";
    static ULTRA_EXPANDED: string = "ultra-expanded";
    static UNDER: string = "under";
    static UNDERLINE: string = "underline";
    static UNICASE: string = "unicase";
    static UNSAFE: string = "unsafe";
    static UNSET: string = "unset";
    static UPPERCASE: string = "uppercase";
    static UPRIGHT: string = "upright";
    static VERSO: string = "verso";
    static VERTICAL: string = "vertical";
    static VERTICAL_LR: string = "vertical-lr";
    static VERTICAL_RL: string = "vertical-rl";
    static VERTICAL_TEXT: string = "vertical-text";
    static VERTICAL_TO_HORIZONTAL: string = "vertical-to-horizontal";
    static VIEW_BOX: string = "view-box";
    static VIOLET: string = "violet";
    static VISIBLE: string = "visible";
    static VISIBLEFILL: string = "visibleFill";
    static VISIBLEPAINTED: string = "visiblePainted";
    static VISIBLESTROKE: string = "visibleStroke";
    static W_RESIZE: string = "w-resize";
    static WAIT: string = "wait";
    static WAVY: string = "wavy";
    static WEIGHT: string = "weight";
    static WHEAT: string = "wheat";
    static WHITE: string = "white";
    static WHITESMOKE: string = "whitesmoke";
    static WRAP: string = "wrap";
    static WRAP_REVERSE: string = "wrap-reverse";
    static WRITE_ONLY: string = "write-only";
    static X: string = "x";
    static X_END: string = "x-end";
    static X_LARGE: string = "x-large";
    static X_SMALL: string = "x-small";
    static X_START: string = "x-start";
    static XOR: string = "xor";
    static XX_LARGE: string = "xx-large";
    static XX_SMALL: string = "xx-small";
    static Y: string = "y";
    static Y_END: string = "y-end";
    static Y_START: string = "y-start";
    static YELLOW: string = "yellow";
    static YELLOWGREEN: string = "yellowgreen";
    static Z: string = "z";
    static ZOOM: string = "zoom";
    static ZOOM_IN: string = "zoom-in";
    static ZOOM_OUT: string = "zoom-out";
}
export class Color {
    static TRANSPARENT: string = "transparent";
    static ALICEBLUE: string = "aliceblue";
    static ANTIQUEWHITE: string = "antiquewhite";
    static AQUA: string = "aqua";
    static AQUAMARINE: string = "aquamarine";
    static AZURE: string = "azure";
    static BEIGE: string = "beige";
    static BISQUE: string = "bisque";
    static BLACK: string = "black";
    static BLANCHEDALMOND: string = "blanchedalmond";
    static BLUE: string = "blue";
    static BLUEVIOLET: string = "blueviolet";
    static BROWN: string = "brown";
    static BURLYWOOD: string = "burlywood";
    static CADETBLUE: string = "cadetblue";
    static CHARTREUSE: string = "chartreuse";
    static CHOCOLATE: string = "chocolate";
    static CORAL: string = "coral";
    static CORNFLOWERBLUE: string = "cornflowerblue";
    static CORNSILK: string = "cornsilk";
    static CRIMSON: string = "crimson";
    static CYAN: string = "cyan";
    static DARKBLUE: string = "darkblue";
    static DARKCYAN: string = "darkcyan";
    static DARKGOLDENROD: string = "darkgoldenrod";
    static DARKGRAY: string = "darkgray";
    static DARKGREEN: string = "darkgreen";
    static DARKGREY: string = "darkgrey";
    static DARKKHAKI: string = "darkkhaki";
    static DARKMAGENTA: string = "darkmagenta";
    static DARKOLIVEGREEN: string = "darkolivegreen";
    static DARKORANGE: string = "darkorange";
    static DARKORCHID: string = "darkorchid";
    static DARKRED: string = "darkred";
    static DARKSALMON: string = "darksalmon";
    static DARKSEAGREEN: string = "darkseagreen";
    static DARKSLATEBLUE: string = "darkslateblue";
    static DARKSLATEGRAY: string = "darkslategray";
    static DARKSLATEGREY: string = "darkslategrey";
    static DARKTURQUOISE: string = "darkturquoise";
    static DARKVIOLET: string = "darkviolet";
    static DEEPPINK: string = "deeppink";
    static DEEPSKYBLUE: string = "deepskyblue";
    static DIMGRAY: string = "dimgray";
    static DIMGREY: string = "dimgrey";
    static DODGERBLUE: string = "dodgerblue";
    static FIREBRICK: string = "firebrick";
    static FLORALWHITE: string = "floralwhite";
    static FORESTGREEN: string = "forestgreen";
    static FUCHSIA: string = "fuchsia";
    static GAINSBORO: string = "gainsboro";
    static GHOSTWHITE: string = "ghostwhite";
    static GOLD: string = "gold";
    static GOLDENROD: string = "goldenrod";
    static GRAY: string = "gray";
    static GREEN: string = "green";
    static GREENYELLOW: string = "greenyellow";
    static GREY: string = "grey";
    static HONEYDEW: string = "honeydew";
    static HOTPINK: string = "hotpink";
    static INDIANRED: string = "indianred";
    static INDIGO: string = "indigo";
    static IVORY: string = "ivory";
    static KHAKI: string = "khaki";
    static LAVENDER: string = "lavender";
    static LAVENDERBLUSH: string = "lavenderblush";
    static LAWNGREEN: string = "lawngreen";
    static LEMONCHIFFON: string = "lemonchiffon";
    static LIGHTBLUE: string = "lightblue";
    static LIGHTCORAL: string = "lightcoral";
    static LIGHTCYAN: string = "lightcyan";
    static LIGHTGOLDENRODYELLOW: string = "lightgoldenrodyellow";
    static LIGHTGRAY: string = "lightgray";
    static LIGHTGREEN: string = "lightgreen";
    static LIGHTGREY: string = "lightgrey";
    static LIGHTPINK: string = "lightpink";
    static LIGHTSALMON: string = "lightsalmon";
    static LIGHTSEAGREEN: string = "lightseagreen";
    static LIGHTSKYBLUE: string = "lightskyblue";
    static LIGHTSLATEGRAY: string = "lightslategray";
    static LIGHTSLATEGREY: string = "lightslategrey";
    static LIGHTSTEELBLUE: string = "lightsteelblue";
    static LIGHTYELLOW: string = "lightyellow";
    static LIME: string = "lime";
    static LIMEGREEN: string = "limegreen";
    static LINEN: string = "linen";
    static MAGENTA: string = "magenta";
    static MAROON: string = "maroon";
    static MEDIUMAQUAMARINE: string = "mediumaquamarine";
    static MEDIUMBLUE: string = "mediumblue";
    static MEDIUMORCHID: string = "mediumorchid";
    static MEDIUMPURPLE: string = "mediumpurple";
    static MEDIUMSEAGREEN: string = "mediumseagreen";
    static MEDIUMSLATEBLUE: string = "mediumslateblue";
    static MEDIUMSPRINGGREEN: string = "mediumspringgreen";
    static MEDIUMTURQUOISE: string = "mediumturquoise";
    static MEDIUMVIOLETRED: string = "mediumvioletred";
    static MIDNIGHTBLUE: string = "midnightblue";
    static MINTCREAM: string = "mintcream";
    static MISTYROSE: string = "mistyrose";
    static MOCCASIN: string = "moccasin";
    static NAVAJOWHITE: string = "navajowhite";
    static NAVY: string = "navy";
    static OLDLACE: string = "oldlace";
    static OLIVE: string = "olive";
    static OLIVEDRAB: string = "olivedrab";
    static ORANGE: string = "orange";
    static ORANGERED: string = "orangered";
    static ORCHID: string = "orchid";
    static PALEGOLDENROD: string = "palegoldenrod";
    static PALEGREEN: string = "palegreen";
    static PALETURQUOISE: string = "paleturquoise";
    static PALEVIOLETRED: string = "palevioletred";
    static PAPAYAWHIP: string = "papayawhip";
    static PEACHPUFF: string = "peachpuff";
    static PERU: string = "peru";
    static PINK: string = "pink";
    static PLUM: string = "plum";
    static POWDERBLUE: string = "powderblue";
    static PURPLE: string = "purple";
    static REBECCAPURPLE: string = "rebeccapurple";
    static RED: string = "red";
    static ROSYBROWN: string = "rosybrown";
    static ROYALBLUE: string = "royalblue";
    static SADDLEBROWN: string = "saddlebrown";
    static SALMON: string = "salmon";
    static SANDYBROWN: string = "sandybrown";
    static SEAGREEN: string = "seagreen";
    static SEASHELL: string = "seashell";
    static SIENNA: string = "sienna";
    static SILVER: string = "silver";
    static SKYBLUE: string = "skyblue";
    static SLATEBLUE: string = "slateblue";
    static SLATEGRAY: string = "slategray";
    static SLATEGREY: string = "slategrey";
    static SNOW: string = "snow";
    static SPRINGGREEN: string = "springgreen";
    static STEELBLUE: string = "steelblue";
    static TAN: string = "tan";
    static TEAL: string = "teal";
    static THISTLE: string = "thistle";
    static TOMATO: string = "tomato";
    static TURQUOISE: string = "turquoise";
    static VIOLET: string = "violet";
    static WHEAT: string = "wheat";
    static WHITE: string = "white";
    static WHITESMOKE: string = "whitesmoke";
    static YELLOW: string = "yellow";
    static YELLOWGREEN: string = "yellowgreen";
}
export class Unit {
    static DEG: string = "deg";
    static RAD: string = "rad";
    static GRAD: string = "grad";
    static TURN: string = "turn";
    static HZ: string = "Hz";
    static KHZ: string = "kHz";
    static CAP: string = "cap";
    static CH: string = "ch";
    static EM: string = "em";
    static EX: string = "ex";
    static IC: string = "ic";
    static LH: string = "lh";
    static REM: string = "rem";
    static RLH: string = "rlh";
    static VH: string = "vh";
    static VW: string = "vw";
    static VI: string = "vi";
    static VB: string = "vb";
    static VMIN: string = "vmin";
    static VMAX: string = "vmax";
    static PX: string = "px";
    static CM: string = "cm";
    static MM: string = "mm";
    static Q: string = "Q";
    static IN: string = "in";
    static PC: string = "pc";
    static PT: string = "pt";
    static FR: string = "fr";
    static DPI: string = "dpi";
    static DPCM: string = "dpcm";
    static DPPX: string = "dppx";
    static X: string = "x";
    static S: string = "s";
    static MS: string = "ms";
    static PERCENTAGE: string = "%";
}
export class Angle {
    static deg = (...params: number[]): string => {
        return buildDatatype("deg", params);
    };
    static rad = (...params: number[]): string => {
        return buildDatatype("rad", params);
    };
    static grad = (...params: number[]): string => {
        return buildDatatype("grad", params);
    };
    static turn = (...params: number[]): string => {
        return buildDatatype("turn", params);
    };
}
export class Frequency {
    static Hz = (...params: number[]): string => {
        return buildDatatype("Hz", params);
    };
    static kHz = (...params: number[]): string => {
        return buildDatatype("kHz", params);
    };
}
export class Length {
    static X = (...params: number[]): string => {
        return buildDatatype("%", params);
    };
    static cap = (...params: number[]): string => {
        return buildDatatype("cap", params);
    };
    static ch = (...params: number[]): string => {
        return buildDatatype("ch", params);
    };
    static em = (...params: number[]): string => {
        return buildDatatype("em", params);
    };
    static ex = (...params: number[]): string => {
        return buildDatatype("ex", params);
    };
    static ic = (...params: number[]): string => {
        return buildDatatype("ic", params);
    };
    static lh = (...params: number[]): string => {
        return buildDatatype("lh", params);
    };
    static rem = (...params: number[]): string => {
        return buildDatatype("rem", params);
    };
    static rlh = (...params: number[]): string => {
        return buildDatatype("rlh", params);
    };
    static vh = (...params: number[]): string => {
        return buildDatatype("vh", params);
    };
    static vw = (...params: number[]): string => {
        return buildDatatype("vw", params);
    };
    static vi = (...params: number[]): string => {
        return buildDatatype("vi", params);
    };
    static vb = (...params: number[]): string => {
        return buildDatatype("vb", params);
    };
    static vmin = (...params: number[]): string => {
        return buildDatatype("vmin", params);
    };
    static vmax = (...params: number[]): string => {
        return buildDatatype("vmax", params);
    };
    static px = (...params: number[]): string => {
        return buildDatatype("px", params);
    };
    static cm = (...params: number[]): string => {
        return buildDatatype("cm", params);
    };
    static mm = (...params: number[]): string => {
        return buildDatatype("mm", params);
    };
    static Q = (...params: number[]): string => {
        return buildDatatype("Q", params);
    };
    static in = (...params: number[]): string => {
        return buildDatatype("in", params);
    };
    static pc = (...params: number[]): string => {
        return buildDatatype("pc", params);
    };
    static pt = (...params: number[]): string => {
        return buildDatatype("pt", params);
    };
    static fr = (...params: number[]): string => {
        return buildDatatype("fr", params);
    };
}
export class Resolution {
    static dpi = (...params: number[]): string => {
        return buildDatatype("dpi", params);
    };
    static dpcm = (...params: number[]): string => {
        return buildDatatype("dpcm", params);
    };
    static dppx = (...params: number[]): string => {
        return buildDatatype("dppx", params);
    };
    static x = (...params: number[]): string => {
        return buildDatatype("x", params);
    };
}
export class Time {
    static s = (...params: number[]): string => {
        return buildDatatype("s", params);
    };
    static ms = (...params: number[]): string => {
        return buildDatatype("ms", params);
    };
}
export class Method {
    static annotation = (...params: Param[]): string => {
        return buildMethod("annotation", params);
    };
    static blur = (...params: Param[]): string => {
        return buildMethod("blur", params);
    };
    static brightness = (...params: Param[]): string => {
        return buildMethod("brightness", params);
    };
    static characterVariant = (...params: Param[]): string => {
        return buildMethod("character-variant", params);
    };
    static circle = (...params: Param[]): string => {
        return buildMethod("circle", params);
    };
    static contrast = (...params: Param[]): string => {
        return buildMethod("contrast", params);
    };
    static crossFade = (...params: Param[]): string => {
        return buildMethod("cross-fade", params);
    };
    static cubicBezier = (...params: Param[]): string => {
        return buildMethod("cubic-bezier", params);
    };
    static dropShadow = (...params: Param[]): string => {
        return buildMethod("drop-shadow", params);
    };
    static element = (...params: Param[]): string => {
        return buildMethod("element", params);
    };
    static ellipse = (...params: Param[]): string => {
        return buildMethod("ellipse", params);
    };
    static fitContent = (...params: Param[]): string => {
        return buildMethod("fit-content", params);
    };
    static frames = (...params: Param[]): string => {
        return buildMethod("frames", params);
    };
    static grayscale = (...params: Param[]): string => {
        return buildMethod("grayscale", params);
    };
    static hsl = (...params: Param[]): string => {
        return buildMethod("hsl", params);
    };
    static hsla = (...params: Param[]): string => {
        return buildMethod("hsla", params);
    };
    static hueRotate = (...params: Param[]): string => {
        return buildMethod("hue-rotate", params);
    };
    static image = (...params: Param[]): string => {
        return buildMethod("image", params);
    };
    static imageSet = (...params: Param[]): string => {
        return buildMethod("image-set", params);
    };
    static inset = (...params: Param[]): string => {
        return buildMethod("inset", params);
    };
    static invert = (...params: Param[]): string => {
        return buildMethod("invert", params);
    };
    static leader = (...params: Param[]): string => {
        return buildMethod("leader", params);
    };
    static linearGradient = (...params: Param[]): string => {
        return buildMethod("linear-gradient", params);
    };
    static matrix = (...params: Param[]): string => {
        return buildMethod("matrix", params);
    };
    static matrix3d = (...params: Param[]): string => {
        return buildMethod("matrix3d", params);
    };
    static minmax = (...params: Param[]): string => {
        return buildMethod("minmax", params);
    };
    static opacity = (...params: Param[]): string => {
        return buildMethod("opacity", params);
    };
    static ornaments = (...params: Param[]): string => {
        return buildMethod("ornaments", params);
    };
    static perspective = (...params: Param[]): string => {
        return buildMethod("perspective", params);
    };
    static polygon = (...params: Param[]): string => {
        return buildMethod("polygon", params);
    };
    static radialGradient = (...params: Param[]): string => {
        return buildMethod("radial-gradient", params);
    };
    static rect = (...params: Param[]): string => {
        return buildMethod("rect", params);
    };
    static repeat = (...params: Param[]): string => {
        return buildMethod("repeat", params);
    };
    static repeatingLinearGradient = (...params: Param[]): string => {
        return buildMethod("repeating-linear-gradient", params);
    };
    static repeatingRadialGradient = (...params: Param[]): string => {
        return buildMethod("repeating-radial-gradient", params);
    };
    static rgb = (...params: Param[]): string => {
        return buildMethod("rgb", params);
    };
    static rgba = (...params: Param[]): string => {
        return buildMethod("rgba", params);
    };
    static rotate = (...params: Param[]): string => {
        return buildMethod("rotate", params);
    };
    static rotate3d = (...params: Param[]): string => {
        return buildMethod("rotate3d", params);
    };
    static rotateX = (...params: Param[]): string => {
        return buildMethod("rotateX", params);
    };
    static rotateY = (...params: Param[]): string => {
        return buildMethod("rotateY", params);
    };
    static rotateZ = (...params: Param[]): string => {
        return buildMethod("rotateZ", params);
    };
    static saturate = (...params: Param[]): string => {
        return buildMethod("saturate", params);
    };
    static scale = (...params: Param[]): string => {
        return buildMethod("scale", params);
    };
    static scale3d = (...params: Param[]): string => {
        return buildMethod("scale3d", params);
    };
    static scaleX = (...params: Param[]): string => {
        return buildMethod("scaleX", params);
    };
    static scaleY = (...params: Param[]): string => {
        return buildMethod("scaleY", params);
    };
    static scaleZ = (...params: Param[]): string => {
        return buildMethod("scaleZ", params);
    };
    static sepia = (...params: Param[]): string => {
        return buildMethod("sepia", params);
    };
    static skew = (...params: Param[]): string => {
        return buildMethod("skew", params);
    };
    static skewX = (...params: Param[]): string => {
        return buildMethod("skewX", params);
    };
    static skewY = (...params: Param[]): string => {
        return buildMethod("skewY", params);
    };
    static snapInterval = (...params: Param[]): string => {
        return buildMethod("snapInterval", params);
    };
    static snapList = (...params: Param[]): string => {
        return buildMethod("snapList", params);
    };
    static steps = (...params: Param[]): string => {
        return buildMethod("steps", params);
    };
    static styleset = (...params: Param[]): string => {
        return buildMethod("styleset", params);
    };
    static stylistic = (...params: Param[]): string => {
        return buildMethod("stylistic", params);
    };
    static swash = (...params: Param[]): string => {
        return buildMethod("swash", params);
    };
    static symbols = (...params: Param[]): string => {
        return buildMethod("symbols", params);
    };
    static targetCounter = (...params: Param[]): string => {
        return buildMethod("target-counter", params);
    };
    static targetCounters = (...params: Param[]): string => {
        return buildMethod("target-counters", params);
    };
    static targetText = (...params: Param[]): string => {
        return buildMethod("target-text", params);
    };
    static translate = (...params: Param[]): string => {
        return buildMethod("translate", params);
    };
    static translate3d = (...params: Param[]): string => {
        return buildMethod("translate3d", params);
    };
    static translateX = (...params: Param[]): string => {
        return buildMethod("translateX", params);
    };
    static translateY = (...params: Param[]): string => {
        return buildMethod("translateY", params);
    };
    static translateZ = (...params: Param[]): string => {
        return buildMethod("translateZ", params);
    };
    static calc_add = (params: Param[]): string => {
        return params
            .map(
                (value): string => {
                    if (Array.isArray(value)) return "(";
                    else return value.toString();
                }
            )
            .join(" + ");
    };
    static calc_mul = (params: Param[]): string => {
        return params
            .map(
                (value): string => {
                    if (Array.isArray(value)) return "(";
                    else return value.toString();
                }
            )
            .join(" * ");
    };
    static calc = (...params: Param[]): string => {
        return "calc(";
    };
    static hex = (code: string): string => {
        return code.charAt(0) === "#" ? code : "#";
    };
    static hexa = (code: string, alpha: number): string => {
        return Method.hex(code);
    };
}
export namespace Css {
    export function sheet(...properties: Sheet[]): Sheet {
        const sheet: Sheet = {};
        for (let property of properties) {
            (<any>Object).assign(sheet, property);
        }
        return sheet;
    }
    export class MsAccelerator {
        static set = (...params: Param[]): Sheet => ({ msAccelerator: buildProperty(params) });
        static FALSE: Sheet = { msAccelerator: "false" };
        static TRUE: Sheet = { msAccelerator: "true" };
    }
    export class MsBlockProgression {
        static set = (...params: Param[]): Sheet => ({ msBlockProgression: buildProperty(params) });
        static TB: Sheet = { msBlockProgression: "tb" };
        static RL: Sheet = { msBlockProgression: "rl" };
        static BT: Sheet = { msBlockProgression: "bt" };
        static LR: Sheet = { msBlockProgression: "lr" };
    }
    export class MsContentZoomChaining {
        static set = (...params: Param[]): Sheet => ({ msContentZoomChaining: buildProperty(params) });
        static NONE: Sheet = { msContentZoomChaining: "none" };
        static CHAINED: Sheet = { msContentZoomChaining: "chained" };
    }
    export class MsContentZooming {
        static set = (...params: Param[]): Sheet => ({ msContentZooming: buildProperty(params) });
        static NONE: Sheet = { msContentZooming: "none" };
        static ZOOM: Sheet = { msContentZooming: "zoom" };
    }
    export class MsContentZoomLimit {
        static set = (...params: Param[]): Sheet => ({ msContentZoomLimit: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msContentZoomLimit: Length.X(...params) });
    }
    export class MsContentZoomLimitMax {
        static set = (...params: Param[]): Sheet => ({ msContentZoomLimitMax: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msContentZoomLimitMax: Length.X(...params) });
    }
    export class MsContentZoomLimitMin {
        static set = (...params: Param[]): Sheet => ({ msContentZoomLimitMin: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msContentZoomLimitMin: Length.X(...params) });
    }
    export class MsContentZoomSnap {
        static set = (...params: Param[]): Sheet => ({ msContentZoomSnap: buildProperty(params) });
        static NONE: Sheet = { msContentZoomSnap: "none" };
        static PROXIMITY: Sheet = { msContentZoomSnap: "proximity" };
        static MANDATORY: Sheet = { msContentZoomSnap: "mandatory" };
        static X = (...params: number[]): Sheet => ({ msContentZoomSnap: Length.X(...params) });
    }
    export class MsContentZoomSnapPoints {
        static set = (...params: Param[]): Sheet => ({ msContentZoomSnapPoints: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msContentZoomSnapPoints: Length.X(...params) });
    }
    export class MsContentZoomSnapType {
        static set = (...params: Param[]): Sheet => ({ msContentZoomSnapType: buildProperty(params) });
        static NONE: Sheet = { msContentZoomSnapType: "none" };
        static PROXIMITY: Sheet = { msContentZoomSnapType: "proximity" };
        static MANDATORY: Sheet = { msContentZoomSnapType: "mandatory" };
    }
    export class MsFilter {
        static set = (...params: Param[]): Sheet => ({ msFilter: buildProperty(params) });
    }
    export class MsFlowFrom {
        static set = (...params: Param[]): Sheet => ({ msFlowFrom: buildProperty(params) });
        static NONE: Sheet = { msFlowFrom: "none" };
    }
    export class MsFlowInto {
        static set = (...params: Param[]): Sheet => ({ msFlowInto: buildProperty(params) });
        static NONE: Sheet = { msFlowInto: "none" };
    }
    export class MsHighContrastAdjust {
        static set = (...params: Param[]): Sheet => ({ msHighContrastAdjust: buildProperty(params) });
        static AUTO: Sheet = { msHighContrastAdjust: "auto" };
        static NONE: Sheet = { msHighContrastAdjust: "none" };
    }
    export class MsHyphenateLimitChars {
        static set = (...params: Param[]): Sheet => ({ msHyphenateLimitChars: buildProperty(params) });
        static AUTO: Sheet = { msHyphenateLimitChars: "auto" };
    }
    export class MsHyphenateLimitLines {
        static set = (...params: Param[]): Sheet => ({ msHyphenateLimitLines: buildProperty(params) });
        static NO_LIMIT: Sheet = { msHyphenateLimitLines: "no-limit" };
    }
    export class MsHyphenateLimitZone {
        static set = (...params: Param[]): Sheet => ({ msHyphenateLimitZone: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.X(...params) });
        static cap = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msHyphenateLimitZone: Length.fr(...params) });
    }
    export class MsImeAlign {
        static set = (...params: Param[]): Sheet => ({ msImeAlign: buildProperty(params) });
        static AUTO: Sheet = { msImeAlign: "auto" };
        static AFTER: Sheet = { msImeAlign: "after" };
    }
    export class MsOverflowStyle {
        static set = (...params: Param[]): Sheet => ({ msOverflowStyle: buildProperty(params) });
        static AUTO: Sheet = { msOverflowStyle: "auto" };
        static NONE: Sheet = { msOverflowStyle: "none" };
        static SCROLLBAR: Sheet = { msOverflowStyle: "scrollbar" };
        static MS_AUTOHIDING_SCROLLBAR: Sheet = { msOverflowStyle: "-ms-autohiding-scrollbar" };
    }
    export class MsScrollbar3dlightColor {
        static set = (...params: Param[]): Sheet => ({ msScrollbar3dlightColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msScrollbar3dlightColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ msScrollbar3dlightColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ msScrollbar3dlightColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ msScrollbar3dlightColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ msScrollbar3dlightColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { msScrollbar3dlightColor: "transparent" };
        static ALICEBLUE: Sheet = { msScrollbar3dlightColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { msScrollbar3dlightColor: "antiquewhite" };
        static AQUA: Sheet = { msScrollbar3dlightColor: "aqua" };
        static AQUAMARINE: Sheet = { msScrollbar3dlightColor: "aquamarine" };
        static AZURE: Sheet = { msScrollbar3dlightColor: "azure" };
        static BEIGE: Sheet = { msScrollbar3dlightColor: "beige" };
        static BISQUE: Sheet = { msScrollbar3dlightColor: "bisque" };
        static BLACK: Sheet = { msScrollbar3dlightColor: "black" };
        static BLANCHEDALMOND: Sheet = { msScrollbar3dlightColor: "blanchedalmond" };
        static BLUE: Sheet = { msScrollbar3dlightColor: "blue" };
        static BLUEVIOLET: Sheet = { msScrollbar3dlightColor: "blueviolet" };
        static BROWN: Sheet = { msScrollbar3dlightColor: "brown" };
        static BURLYWOOD: Sheet = { msScrollbar3dlightColor: "burlywood" };
        static CADETBLUE: Sheet = { msScrollbar3dlightColor: "cadetblue" };
        static CHARTREUSE: Sheet = { msScrollbar3dlightColor: "chartreuse" };
        static CHOCOLATE: Sheet = { msScrollbar3dlightColor: "chocolate" };
        static CORAL: Sheet = { msScrollbar3dlightColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { msScrollbar3dlightColor: "cornflowerblue" };
        static CORNSILK: Sheet = { msScrollbar3dlightColor: "cornsilk" };
        static CRIMSON: Sheet = { msScrollbar3dlightColor: "crimson" };
        static CYAN: Sheet = { msScrollbar3dlightColor: "cyan" };
        static DARKBLUE: Sheet = { msScrollbar3dlightColor: "darkblue" };
        static DARKCYAN: Sheet = { msScrollbar3dlightColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { msScrollbar3dlightColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { msScrollbar3dlightColor: "darkgray" };
        static DARKGREEN: Sheet = { msScrollbar3dlightColor: "darkgreen" };
        static DARKGREY: Sheet = { msScrollbar3dlightColor: "darkgrey" };
        static DARKKHAKI: Sheet = { msScrollbar3dlightColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { msScrollbar3dlightColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { msScrollbar3dlightColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { msScrollbar3dlightColor: "darkorange" };
        static DARKORCHID: Sheet = { msScrollbar3dlightColor: "darkorchid" };
        static DARKRED: Sheet = { msScrollbar3dlightColor: "darkred" };
        static DARKSALMON: Sheet = { msScrollbar3dlightColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { msScrollbar3dlightColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { msScrollbar3dlightColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { msScrollbar3dlightColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { msScrollbar3dlightColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { msScrollbar3dlightColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { msScrollbar3dlightColor: "darkviolet" };
        static DEEPPINK: Sheet = { msScrollbar3dlightColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { msScrollbar3dlightColor: "deepskyblue" };
        static DIMGRAY: Sheet = { msScrollbar3dlightColor: "dimgray" };
        static DIMGREY: Sheet = { msScrollbar3dlightColor: "dimgrey" };
        static DODGERBLUE: Sheet = { msScrollbar3dlightColor: "dodgerblue" };
        static FIREBRICK: Sheet = { msScrollbar3dlightColor: "firebrick" };
        static FLORALWHITE: Sheet = { msScrollbar3dlightColor: "floralwhite" };
        static FORESTGREEN: Sheet = { msScrollbar3dlightColor: "forestgreen" };
        static FUCHSIA: Sheet = { msScrollbar3dlightColor: "fuchsia" };
        static GAINSBORO: Sheet = { msScrollbar3dlightColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { msScrollbar3dlightColor: "ghostwhite" };
        static GOLD: Sheet = { msScrollbar3dlightColor: "gold" };
        static GOLDENROD: Sheet = { msScrollbar3dlightColor: "goldenrod" };
        static GRAY: Sheet = { msScrollbar3dlightColor: "gray" };
        static GREEN: Sheet = { msScrollbar3dlightColor: "green" };
        static GREENYELLOW: Sheet = { msScrollbar3dlightColor: "greenyellow" };
        static GREY: Sheet = { msScrollbar3dlightColor: "grey" };
        static HONEYDEW: Sheet = { msScrollbar3dlightColor: "honeydew" };
        static HOTPINK: Sheet = { msScrollbar3dlightColor: "hotpink" };
        static INDIANRED: Sheet = { msScrollbar3dlightColor: "indianred" };
        static INDIGO: Sheet = { msScrollbar3dlightColor: "indigo" };
        static IVORY: Sheet = { msScrollbar3dlightColor: "ivory" };
        static KHAKI: Sheet = { msScrollbar3dlightColor: "khaki" };
        static LAVENDER: Sheet = { msScrollbar3dlightColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { msScrollbar3dlightColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { msScrollbar3dlightColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { msScrollbar3dlightColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { msScrollbar3dlightColor: "lightblue" };
        static LIGHTCORAL: Sheet = { msScrollbar3dlightColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { msScrollbar3dlightColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { msScrollbar3dlightColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { msScrollbar3dlightColor: "lightgray" };
        static LIGHTGREEN: Sheet = { msScrollbar3dlightColor: "lightgreen" };
        static LIGHTGREY: Sheet = { msScrollbar3dlightColor: "lightgrey" };
        static LIGHTPINK: Sheet = { msScrollbar3dlightColor: "lightpink" };
        static LIGHTSALMON: Sheet = { msScrollbar3dlightColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { msScrollbar3dlightColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { msScrollbar3dlightColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { msScrollbar3dlightColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { msScrollbar3dlightColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { msScrollbar3dlightColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { msScrollbar3dlightColor: "lightyellow" };
        static LIME: Sheet = { msScrollbar3dlightColor: "lime" };
        static LIMEGREEN: Sheet = { msScrollbar3dlightColor: "limegreen" };
        static LINEN: Sheet = { msScrollbar3dlightColor: "linen" };
        static MAGENTA: Sheet = { msScrollbar3dlightColor: "magenta" };
        static MAROON: Sheet = { msScrollbar3dlightColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { msScrollbar3dlightColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { msScrollbar3dlightColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { msScrollbar3dlightColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { msScrollbar3dlightColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { msScrollbar3dlightColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { msScrollbar3dlightColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { msScrollbar3dlightColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { msScrollbar3dlightColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { msScrollbar3dlightColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { msScrollbar3dlightColor: "midnightblue" };
        static MINTCREAM: Sheet = { msScrollbar3dlightColor: "mintcream" };
        static MISTYROSE: Sheet = { msScrollbar3dlightColor: "mistyrose" };
        static MOCCASIN: Sheet = { msScrollbar3dlightColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { msScrollbar3dlightColor: "navajowhite" };
        static NAVY: Sheet = { msScrollbar3dlightColor: "navy" };
        static OLDLACE: Sheet = { msScrollbar3dlightColor: "oldlace" };
        static OLIVE: Sheet = { msScrollbar3dlightColor: "olive" };
        static OLIVEDRAB: Sheet = { msScrollbar3dlightColor: "olivedrab" };
        static ORANGE: Sheet = { msScrollbar3dlightColor: "orange" };
        static ORANGERED: Sheet = { msScrollbar3dlightColor: "orangered" };
        static ORCHID: Sheet = { msScrollbar3dlightColor: "orchid" };
        static PALEGOLDENROD: Sheet = { msScrollbar3dlightColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { msScrollbar3dlightColor: "palegreen" };
        static PALETURQUOISE: Sheet = { msScrollbar3dlightColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { msScrollbar3dlightColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { msScrollbar3dlightColor: "papayawhip" };
        static PEACHPUFF: Sheet = { msScrollbar3dlightColor: "peachpuff" };
        static PERU: Sheet = { msScrollbar3dlightColor: "peru" };
        static PINK: Sheet = { msScrollbar3dlightColor: "pink" };
        static PLUM: Sheet = { msScrollbar3dlightColor: "plum" };
        static POWDERBLUE: Sheet = { msScrollbar3dlightColor: "powderblue" };
        static PURPLE: Sheet = { msScrollbar3dlightColor: "purple" };
        static REBECCAPURPLE: Sheet = { msScrollbar3dlightColor: "rebeccapurple" };
        static RED: Sheet = { msScrollbar3dlightColor: "red" };
        static ROSYBROWN: Sheet = { msScrollbar3dlightColor: "rosybrown" };
        static ROYALBLUE: Sheet = { msScrollbar3dlightColor: "royalblue" };
        static SADDLEBROWN: Sheet = { msScrollbar3dlightColor: "saddlebrown" };
        static SALMON: Sheet = { msScrollbar3dlightColor: "salmon" };
        static SANDYBROWN: Sheet = { msScrollbar3dlightColor: "sandybrown" };
        static SEAGREEN: Sheet = { msScrollbar3dlightColor: "seagreen" };
        static SEASHELL: Sheet = { msScrollbar3dlightColor: "seashell" };
        static SIENNA: Sheet = { msScrollbar3dlightColor: "sienna" };
        static SILVER: Sheet = { msScrollbar3dlightColor: "silver" };
        static SKYBLUE: Sheet = { msScrollbar3dlightColor: "skyblue" };
        static SLATEBLUE: Sheet = { msScrollbar3dlightColor: "slateblue" };
        static SLATEGRAY: Sheet = { msScrollbar3dlightColor: "slategray" };
        static SLATEGREY: Sheet = { msScrollbar3dlightColor: "slategrey" };
        static SNOW: Sheet = { msScrollbar3dlightColor: "snow" };
        static SPRINGGREEN: Sheet = { msScrollbar3dlightColor: "springgreen" };
        static STEELBLUE: Sheet = { msScrollbar3dlightColor: "steelblue" };
        static TAN: Sheet = { msScrollbar3dlightColor: "tan" };
        static TEAL: Sheet = { msScrollbar3dlightColor: "teal" };
        static THISTLE: Sheet = { msScrollbar3dlightColor: "thistle" };
        static TOMATO: Sheet = { msScrollbar3dlightColor: "tomato" };
        static TURQUOISE: Sheet = { msScrollbar3dlightColor: "turquoise" };
        static VIOLET: Sheet = { msScrollbar3dlightColor: "violet" };
        static WHEAT: Sheet = { msScrollbar3dlightColor: "wheat" };
        static WHITE: Sheet = { msScrollbar3dlightColor: "white" };
        static WHITESMOKE: Sheet = { msScrollbar3dlightColor: "whitesmoke" };
        static YELLOW: Sheet = { msScrollbar3dlightColor: "yellow" };
        static YELLOWGREEN: Sheet = { msScrollbar3dlightColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { msScrollbar3dlightColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { msScrollbar3dlightColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { msScrollbar3dlightColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { msScrollbar3dlightColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { msScrollbar3dlightColor: "Background" };
        static BUTTONFACE: Sheet = { msScrollbar3dlightColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { msScrollbar3dlightColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { msScrollbar3dlightColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { msScrollbar3dlightColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { msScrollbar3dlightColor: "CaptionText" };
        static GRAYTEXT: Sheet = { msScrollbar3dlightColor: "GrayText" };
        static HIGHLIGHT: Sheet = { msScrollbar3dlightColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { msScrollbar3dlightColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { msScrollbar3dlightColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { msScrollbar3dlightColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { msScrollbar3dlightColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { msScrollbar3dlightColor: "InfoBackground" };
        static INFOTEXT: Sheet = { msScrollbar3dlightColor: "InfoText" };
        static MENU: Sheet = { msScrollbar3dlightColor: "Menu" };
        static MENUTEXT: Sheet = { msScrollbar3dlightColor: "MenuText" };
        static SCROLLBAR: Sheet = { msScrollbar3dlightColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { msScrollbar3dlightColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { msScrollbar3dlightColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { msScrollbar3dlightColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { msScrollbar3dlightColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { msScrollbar3dlightColor: "ThreeDShadow" };
        static WINDOW: Sheet = { msScrollbar3dlightColor: "Window" };
        static WINDOWFRAME: Sheet = { msScrollbar3dlightColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { msScrollbar3dlightColor: "WindowText" };
    }
    export class MsScrollbarArrowColor {
        static set = (...params: Param[]): Sheet => ({ msScrollbarArrowColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msScrollbarArrowColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ msScrollbarArrowColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ msScrollbarArrowColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ msScrollbarArrowColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ msScrollbarArrowColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { msScrollbarArrowColor: "transparent" };
        static ALICEBLUE: Sheet = { msScrollbarArrowColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { msScrollbarArrowColor: "antiquewhite" };
        static AQUA: Sheet = { msScrollbarArrowColor: "aqua" };
        static AQUAMARINE: Sheet = { msScrollbarArrowColor: "aquamarine" };
        static AZURE: Sheet = { msScrollbarArrowColor: "azure" };
        static BEIGE: Sheet = { msScrollbarArrowColor: "beige" };
        static BISQUE: Sheet = { msScrollbarArrowColor: "bisque" };
        static BLACK: Sheet = { msScrollbarArrowColor: "black" };
        static BLANCHEDALMOND: Sheet = { msScrollbarArrowColor: "blanchedalmond" };
        static BLUE: Sheet = { msScrollbarArrowColor: "blue" };
        static BLUEVIOLET: Sheet = { msScrollbarArrowColor: "blueviolet" };
        static BROWN: Sheet = { msScrollbarArrowColor: "brown" };
        static BURLYWOOD: Sheet = { msScrollbarArrowColor: "burlywood" };
        static CADETBLUE: Sheet = { msScrollbarArrowColor: "cadetblue" };
        static CHARTREUSE: Sheet = { msScrollbarArrowColor: "chartreuse" };
        static CHOCOLATE: Sheet = { msScrollbarArrowColor: "chocolate" };
        static CORAL: Sheet = { msScrollbarArrowColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { msScrollbarArrowColor: "cornflowerblue" };
        static CORNSILK: Sheet = { msScrollbarArrowColor: "cornsilk" };
        static CRIMSON: Sheet = { msScrollbarArrowColor: "crimson" };
        static CYAN: Sheet = { msScrollbarArrowColor: "cyan" };
        static DARKBLUE: Sheet = { msScrollbarArrowColor: "darkblue" };
        static DARKCYAN: Sheet = { msScrollbarArrowColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { msScrollbarArrowColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { msScrollbarArrowColor: "darkgray" };
        static DARKGREEN: Sheet = { msScrollbarArrowColor: "darkgreen" };
        static DARKGREY: Sheet = { msScrollbarArrowColor: "darkgrey" };
        static DARKKHAKI: Sheet = { msScrollbarArrowColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { msScrollbarArrowColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { msScrollbarArrowColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { msScrollbarArrowColor: "darkorange" };
        static DARKORCHID: Sheet = { msScrollbarArrowColor: "darkorchid" };
        static DARKRED: Sheet = { msScrollbarArrowColor: "darkred" };
        static DARKSALMON: Sheet = { msScrollbarArrowColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { msScrollbarArrowColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { msScrollbarArrowColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { msScrollbarArrowColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { msScrollbarArrowColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { msScrollbarArrowColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { msScrollbarArrowColor: "darkviolet" };
        static DEEPPINK: Sheet = { msScrollbarArrowColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { msScrollbarArrowColor: "deepskyblue" };
        static DIMGRAY: Sheet = { msScrollbarArrowColor: "dimgray" };
        static DIMGREY: Sheet = { msScrollbarArrowColor: "dimgrey" };
        static DODGERBLUE: Sheet = { msScrollbarArrowColor: "dodgerblue" };
        static FIREBRICK: Sheet = { msScrollbarArrowColor: "firebrick" };
        static FLORALWHITE: Sheet = { msScrollbarArrowColor: "floralwhite" };
        static FORESTGREEN: Sheet = { msScrollbarArrowColor: "forestgreen" };
        static FUCHSIA: Sheet = { msScrollbarArrowColor: "fuchsia" };
        static GAINSBORO: Sheet = { msScrollbarArrowColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { msScrollbarArrowColor: "ghostwhite" };
        static GOLD: Sheet = { msScrollbarArrowColor: "gold" };
        static GOLDENROD: Sheet = { msScrollbarArrowColor: "goldenrod" };
        static GRAY: Sheet = { msScrollbarArrowColor: "gray" };
        static GREEN: Sheet = { msScrollbarArrowColor: "green" };
        static GREENYELLOW: Sheet = { msScrollbarArrowColor: "greenyellow" };
        static GREY: Sheet = { msScrollbarArrowColor: "grey" };
        static HONEYDEW: Sheet = { msScrollbarArrowColor: "honeydew" };
        static HOTPINK: Sheet = { msScrollbarArrowColor: "hotpink" };
        static INDIANRED: Sheet = { msScrollbarArrowColor: "indianred" };
        static INDIGO: Sheet = { msScrollbarArrowColor: "indigo" };
        static IVORY: Sheet = { msScrollbarArrowColor: "ivory" };
        static KHAKI: Sheet = { msScrollbarArrowColor: "khaki" };
        static LAVENDER: Sheet = { msScrollbarArrowColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { msScrollbarArrowColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { msScrollbarArrowColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { msScrollbarArrowColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { msScrollbarArrowColor: "lightblue" };
        static LIGHTCORAL: Sheet = { msScrollbarArrowColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { msScrollbarArrowColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { msScrollbarArrowColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { msScrollbarArrowColor: "lightgray" };
        static LIGHTGREEN: Sheet = { msScrollbarArrowColor: "lightgreen" };
        static LIGHTGREY: Sheet = { msScrollbarArrowColor: "lightgrey" };
        static LIGHTPINK: Sheet = { msScrollbarArrowColor: "lightpink" };
        static LIGHTSALMON: Sheet = { msScrollbarArrowColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { msScrollbarArrowColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { msScrollbarArrowColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { msScrollbarArrowColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { msScrollbarArrowColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { msScrollbarArrowColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { msScrollbarArrowColor: "lightyellow" };
        static LIME: Sheet = { msScrollbarArrowColor: "lime" };
        static LIMEGREEN: Sheet = { msScrollbarArrowColor: "limegreen" };
        static LINEN: Sheet = { msScrollbarArrowColor: "linen" };
        static MAGENTA: Sheet = { msScrollbarArrowColor: "magenta" };
        static MAROON: Sheet = { msScrollbarArrowColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { msScrollbarArrowColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { msScrollbarArrowColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { msScrollbarArrowColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { msScrollbarArrowColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { msScrollbarArrowColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { msScrollbarArrowColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { msScrollbarArrowColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { msScrollbarArrowColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { msScrollbarArrowColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { msScrollbarArrowColor: "midnightblue" };
        static MINTCREAM: Sheet = { msScrollbarArrowColor: "mintcream" };
        static MISTYROSE: Sheet = { msScrollbarArrowColor: "mistyrose" };
        static MOCCASIN: Sheet = { msScrollbarArrowColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { msScrollbarArrowColor: "navajowhite" };
        static NAVY: Sheet = { msScrollbarArrowColor: "navy" };
        static OLDLACE: Sheet = { msScrollbarArrowColor: "oldlace" };
        static OLIVE: Sheet = { msScrollbarArrowColor: "olive" };
        static OLIVEDRAB: Sheet = { msScrollbarArrowColor: "olivedrab" };
        static ORANGE: Sheet = { msScrollbarArrowColor: "orange" };
        static ORANGERED: Sheet = { msScrollbarArrowColor: "orangered" };
        static ORCHID: Sheet = { msScrollbarArrowColor: "orchid" };
        static PALEGOLDENROD: Sheet = { msScrollbarArrowColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { msScrollbarArrowColor: "palegreen" };
        static PALETURQUOISE: Sheet = { msScrollbarArrowColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { msScrollbarArrowColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { msScrollbarArrowColor: "papayawhip" };
        static PEACHPUFF: Sheet = { msScrollbarArrowColor: "peachpuff" };
        static PERU: Sheet = { msScrollbarArrowColor: "peru" };
        static PINK: Sheet = { msScrollbarArrowColor: "pink" };
        static PLUM: Sheet = { msScrollbarArrowColor: "plum" };
        static POWDERBLUE: Sheet = { msScrollbarArrowColor: "powderblue" };
        static PURPLE: Sheet = { msScrollbarArrowColor: "purple" };
        static REBECCAPURPLE: Sheet = { msScrollbarArrowColor: "rebeccapurple" };
        static RED: Sheet = { msScrollbarArrowColor: "red" };
        static ROSYBROWN: Sheet = { msScrollbarArrowColor: "rosybrown" };
        static ROYALBLUE: Sheet = { msScrollbarArrowColor: "royalblue" };
        static SADDLEBROWN: Sheet = { msScrollbarArrowColor: "saddlebrown" };
        static SALMON: Sheet = { msScrollbarArrowColor: "salmon" };
        static SANDYBROWN: Sheet = { msScrollbarArrowColor: "sandybrown" };
        static SEAGREEN: Sheet = { msScrollbarArrowColor: "seagreen" };
        static SEASHELL: Sheet = { msScrollbarArrowColor: "seashell" };
        static SIENNA: Sheet = { msScrollbarArrowColor: "sienna" };
        static SILVER: Sheet = { msScrollbarArrowColor: "silver" };
        static SKYBLUE: Sheet = { msScrollbarArrowColor: "skyblue" };
        static SLATEBLUE: Sheet = { msScrollbarArrowColor: "slateblue" };
        static SLATEGRAY: Sheet = { msScrollbarArrowColor: "slategray" };
        static SLATEGREY: Sheet = { msScrollbarArrowColor: "slategrey" };
        static SNOW: Sheet = { msScrollbarArrowColor: "snow" };
        static SPRINGGREEN: Sheet = { msScrollbarArrowColor: "springgreen" };
        static STEELBLUE: Sheet = { msScrollbarArrowColor: "steelblue" };
        static TAN: Sheet = { msScrollbarArrowColor: "tan" };
        static TEAL: Sheet = { msScrollbarArrowColor: "teal" };
        static THISTLE: Sheet = { msScrollbarArrowColor: "thistle" };
        static TOMATO: Sheet = { msScrollbarArrowColor: "tomato" };
        static TURQUOISE: Sheet = { msScrollbarArrowColor: "turquoise" };
        static VIOLET: Sheet = { msScrollbarArrowColor: "violet" };
        static WHEAT: Sheet = { msScrollbarArrowColor: "wheat" };
        static WHITE: Sheet = { msScrollbarArrowColor: "white" };
        static WHITESMOKE: Sheet = { msScrollbarArrowColor: "whitesmoke" };
        static YELLOW: Sheet = { msScrollbarArrowColor: "yellow" };
        static YELLOWGREEN: Sheet = { msScrollbarArrowColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { msScrollbarArrowColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { msScrollbarArrowColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { msScrollbarArrowColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { msScrollbarArrowColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { msScrollbarArrowColor: "Background" };
        static BUTTONFACE: Sheet = { msScrollbarArrowColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { msScrollbarArrowColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { msScrollbarArrowColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { msScrollbarArrowColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { msScrollbarArrowColor: "CaptionText" };
        static GRAYTEXT: Sheet = { msScrollbarArrowColor: "GrayText" };
        static HIGHLIGHT: Sheet = { msScrollbarArrowColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { msScrollbarArrowColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { msScrollbarArrowColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { msScrollbarArrowColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { msScrollbarArrowColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { msScrollbarArrowColor: "InfoBackground" };
        static INFOTEXT: Sheet = { msScrollbarArrowColor: "InfoText" };
        static MENU: Sheet = { msScrollbarArrowColor: "Menu" };
        static MENUTEXT: Sheet = { msScrollbarArrowColor: "MenuText" };
        static SCROLLBAR: Sheet = { msScrollbarArrowColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { msScrollbarArrowColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { msScrollbarArrowColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { msScrollbarArrowColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { msScrollbarArrowColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { msScrollbarArrowColor: "ThreeDShadow" };
        static WINDOW: Sheet = { msScrollbarArrowColor: "Window" };
        static WINDOWFRAME: Sheet = { msScrollbarArrowColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { msScrollbarArrowColor: "WindowText" };
    }
    export class MsScrollbarBaseColor {
        static set = (...params: Param[]): Sheet => ({ msScrollbarBaseColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msScrollbarBaseColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ msScrollbarBaseColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ msScrollbarBaseColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ msScrollbarBaseColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ msScrollbarBaseColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { msScrollbarBaseColor: "transparent" };
        static ALICEBLUE: Sheet = { msScrollbarBaseColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { msScrollbarBaseColor: "antiquewhite" };
        static AQUA: Sheet = { msScrollbarBaseColor: "aqua" };
        static AQUAMARINE: Sheet = { msScrollbarBaseColor: "aquamarine" };
        static AZURE: Sheet = { msScrollbarBaseColor: "azure" };
        static BEIGE: Sheet = { msScrollbarBaseColor: "beige" };
        static BISQUE: Sheet = { msScrollbarBaseColor: "bisque" };
        static BLACK: Sheet = { msScrollbarBaseColor: "black" };
        static BLANCHEDALMOND: Sheet = { msScrollbarBaseColor: "blanchedalmond" };
        static BLUE: Sheet = { msScrollbarBaseColor: "blue" };
        static BLUEVIOLET: Sheet = { msScrollbarBaseColor: "blueviolet" };
        static BROWN: Sheet = { msScrollbarBaseColor: "brown" };
        static BURLYWOOD: Sheet = { msScrollbarBaseColor: "burlywood" };
        static CADETBLUE: Sheet = { msScrollbarBaseColor: "cadetblue" };
        static CHARTREUSE: Sheet = { msScrollbarBaseColor: "chartreuse" };
        static CHOCOLATE: Sheet = { msScrollbarBaseColor: "chocolate" };
        static CORAL: Sheet = { msScrollbarBaseColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { msScrollbarBaseColor: "cornflowerblue" };
        static CORNSILK: Sheet = { msScrollbarBaseColor: "cornsilk" };
        static CRIMSON: Sheet = { msScrollbarBaseColor: "crimson" };
        static CYAN: Sheet = { msScrollbarBaseColor: "cyan" };
        static DARKBLUE: Sheet = { msScrollbarBaseColor: "darkblue" };
        static DARKCYAN: Sheet = { msScrollbarBaseColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { msScrollbarBaseColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { msScrollbarBaseColor: "darkgray" };
        static DARKGREEN: Sheet = { msScrollbarBaseColor: "darkgreen" };
        static DARKGREY: Sheet = { msScrollbarBaseColor: "darkgrey" };
        static DARKKHAKI: Sheet = { msScrollbarBaseColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { msScrollbarBaseColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { msScrollbarBaseColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { msScrollbarBaseColor: "darkorange" };
        static DARKORCHID: Sheet = { msScrollbarBaseColor: "darkorchid" };
        static DARKRED: Sheet = { msScrollbarBaseColor: "darkred" };
        static DARKSALMON: Sheet = { msScrollbarBaseColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { msScrollbarBaseColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { msScrollbarBaseColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { msScrollbarBaseColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { msScrollbarBaseColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { msScrollbarBaseColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { msScrollbarBaseColor: "darkviolet" };
        static DEEPPINK: Sheet = { msScrollbarBaseColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { msScrollbarBaseColor: "deepskyblue" };
        static DIMGRAY: Sheet = { msScrollbarBaseColor: "dimgray" };
        static DIMGREY: Sheet = { msScrollbarBaseColor: "dimgrey" };
        static DODGERBLUE: Sheet = { msScrollbarBaseColor: "dodgerblue" };
        static FIREBRICK: Sheet = { msScrollbarBaseColor: "firebrick" };
        static FLORALWHITE: Sheet = { msScrollbarBaseColor: "floralwhite" };
        static FORESTGREEN: Sheet = { msScrollbarBaseColor: "forestgreen" };
        static FUCHSIA: Sheet = { msScrollbarBaseColor: "fuchsia" };
        static GAINSBORO: Sheet = { msScrollbarBaseColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { msScrollbarBaseColor: "ghostwhite" };
        static GOLD: Sheet = { msScrollbarBaseColor: "gold" };
        static GOLDENROD: Sheet = { msScrollbarBaseColor: "goldenrod" };
        static GRAY: Sheet = { msScrollbarBaseColor: "gray" };
        static GREEN: Sheet = { msScrollbarBaseColor: "green" };
        static GREENYELLOW: Sheet = { msScrollbarBaseColor: "greenyellow" };
        static GREY: Sheet = { msScrollbarBaseColor: "grey" };
        static HONEYDEW: Sheet = { msScrollbarBaseColor: "honeydew" };
        static HOTPINK: Sheet = { msScrollbarBaseColor: "hotpink" };
        static INDIANRED: Sheet = { msScrollbarBaseColor: "indianred" };
        static INDIGO: Sheet = { msScrollbarBaseColor: "indigo" };
        static IVORY: Sheet = { msScrollbarBaseColor: "ivory" };
        static KHAKI: Sheet = { msScrollbarBaseColor: "khaki" };
        static LAVENDER: Sheet = { msScrollbarBaseColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { msScrollbarBaseColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { msScrollbarBaseColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { msScrollbarBaseColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { msScrollbarBaseColor: "lightblue" };
        static LIGHTCORAL: Sheet = { msScrollbarBaseColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { msScrollbarBaseColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { msScrollbarBaseColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { msScrollbarBaseColor: "lightgray" };
        static LIGHTGREEN: Sheet = { msScrollbarBaseColor: "lightgreen" };
        static LIGHTGREY: Sheet = { msScrollbarBaseColor: "lightgrey" };
        static LIGHTPINK: Sheet = { msScrollbarBaseColor: "lightpink" };
        static LIGHTSALMON: Sheet = { msScrollbarBaseColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { msScrollbarBaseColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { msScrollbarBaseColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { msScrollbarBaseColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { msScrollbarBaseColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { msScrollbarBaseColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { msScrollbarBaseColor: "lightyellow" };
        static LIME: Sheet = { msScrollbarBaseColor: "lime" };
        static LIMEGREEN: Sheet = { msScrollbarBaseColor: "limegreen" };
        static LINEN: Sheet = { msScrollbarBaseColor: "linen" };
        static MAGENTA: Sheet = { msScrollbarBaseColor: "magenta" };
        static MAROON: Sheet = { msScrollbarBaseColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { msScrollbarBaseColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { msScrollbarBaseColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { msScrollbarBaseColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { msScrollbarBaseColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { msScrollbarBaseColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { msScrollbarBaseColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { msScrollbarBaseColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { msScrollbarBaseColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { msScrollbarBaseColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { msScrollbarBaseColor: "midnightblue" };
        static MINTCREAM: Sheet = { msScrollbarBaseColor: "mintcream" };
        static MISTYROSE: Sheet = { msScrollbarBaseColor: "mistyrose" };
        static MOCCASIN: Sheet = { msScrollbarBaseColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { msScrollbarBaseColor: "navajowhite" };
        static NAVY: Sheet = { msScrollbarBaseColor: "navy" };
        static OLDLACE: Sheet = { msScrollbarBaseColor: "oldlace" };
        static OLIVE: Sheet = { msScrollbarBaseColor: "olive" };
        static OLIVEDRAB: Sheet = { msScrollbarBaseColor: "olivedrab" };
        static ORANGE: Sheet = { msScrollbarBaseColor: "orange" };
        static ORANGERED: Sheet = { msScrollbarBaseColor: "orangered" };
        static ORCHID: Sheet = { msScrollbarBaseColor: "orchid" };
        static PALEGOLDENROD: Sheet = { msScrollbarBaseColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { msScrollbarBaseColor: "palegreen" };
        static PALETURQUOISE: Sheet = { msScrollbarBaseColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { msScrollbarBaseColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { msScrollbarBaseColor: "papayawhip" };
        static PEACHPUFF: Sheet = { msScrollbarBaseColor: "peachpuff" };
        static PERU: Sheet = { msScrollbarBaseColor: "peru" };
        static PINK: Sheet = { msScrollbarBaseColor: "pink" };
        static PLUM: Sheet = { msScrollbarBaseColor: "plum" };
        static POWDERBLUE: Sheet = { msScrollbarBaseColor: "powderblue" };
        static PURPLE: Sheet = { msScrollbarBaseColor: "purple" };
        static REBECCAPURPLE: Sheet = { msScrollbarBaseColor: "rebeccapurple" };
        static RED: Sheet = { msScrollbarBaseColor: "red" };
        static ROSYBROWN: Sheet = { msScrollbarBaseColor: "rosybrown" };
        static ROYALBLUE: Sheet = { msScrollbarBaseColor: "royalblue" };
        static SADDLEBROWN: Sheet = { msScrollbarBaseColor: "saddlebrown" };
        static SALMON: Sheet = { msScrollbarBaseColor: "salmon" };
        static SANDYBROWN: Sheet = { msScrollbarBaseColor: "sandybrown" };
        static SEAGREEN: Sheet = { msScrollbarBaseColor: "seagreen" };
        static SEASHELL: Sheet = { msScrollbarBaseColor: "seashell" };
        static SIENNA: Sheet = { msScrollbarBaseColor: "sienna" };
        static SILVER: Sheet = { msScrollbarBaseColor: "silver" };
        static SKYBLUE: Sheet = { msScrollbarBaseColor: "skyblue" };
        static SLATEBLUE: Sheet = { msScrollbarBaseColor: "slateblue" };
        static SLATEGRAY: Sheet = { msScrollbarBaseColor: "slategray" };
        static SLATEGREY: Sheet = { msScrollbarBaseColor: "slategrey" };
        static SNOW: Sheet = { msScrollbarBaseColor: "snow" };
        static SPRINGGREEN: Sheet = { msScrollbarBaseColor: "springgreen" };
        static STEELBLUE: Sheet = { msScrollbarBaseColor: "steelblue" };
        static TAN: Sheet = { msScrollbarBaseColor: "tan" };
        static TEAL: Sheet = { msScrollbarBaseColor: "teal" };
        static THISTLE: Sheet = { msScrollbarBaseColor: "thistle" };
        static TOMATO: Sheet = { msScrollbarBaseColor: "tomato" };
        static TURQUOISE: Sheet = { msScrollbarBaseColor: "turquoise" };
        static VIOLET: Sheet = { msScrollbarBaseColor: "violet" };
        static WHEAT: Sheet = { msScrollbarBaseColor: "wheat" };
        static WHITE: Sheet = { msScrollbarBaseColor: "white" };
        static WHITESMOKE: Sheet = { msScrollbarBaseColor: "whitesmoke" };
        static YELLOW: Sheet = { msScrollbarBaseColor: "yellow" };
        static YELLOWGREEN: Sheet = { msScrollbarBaseColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { msScrollbarBaseColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { msScrollbarBaseColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { msScrollbarBaseColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { msScrollbarBaseColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { msScrollbarBaseColor: "Background" };
        static BUTTONFACE: Sheet = { msScrollbarBaseColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { msScrollbarBaseColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { msScrollbarBaseColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { msScrollbarBaseColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { msScrollbarBaseColor: "CaptionText" };
        static GRAYTEXT: Sheet = { msScrollbarBaseColor: "GrayText" };
        static HIGHLIGHT: Sheet = { msScrollbarBaseColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { msScrollbarBaseColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { msScrollbarBaseColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { msScrollbarBaseColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { msScrollbarBaseColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { msScrollbarBaseColor: "InfoBackground" };
        static INFOTEXT: Sheet = { msScrollbarBaseColor: "InfoText" };
        static MENU: Sheet = { msScrollbarBaseColor: "Menu" };
        static MENUTEXT: Sheet = { msScrollbarBaseColor: "MenuText" };
        static SCROLLBAR: Sheet = { msScrollbarBaseColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { msScrollbarBaseColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { msScrollbarBaseColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { msScrollbarBaseColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { msScrollbarBaseColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { msScrollbarBaseColor: "ThreeDShadow" };
        static WINDOW: Sheet = { msScrollbarBaseColor: "Window" };
        static WINDOWFRAME: Sheet = { msScrollbarBaseColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { msScrollbarBaseColor: "WindowText" };
    }
    export class MsScrollbarDarkshadowColor {
        static set = (...params: Param[]): Sheet => ({ msScrollbarDarkshadowColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msScrollbarDarkshadowColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ msScrollbarDarkshadowColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ msScrollbarDarkshadowColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ msScrollbarDarkshadowColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ msScrollbarDarkshadowColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { msScrollbarDarkshadowColor: "transparent" };
        static ALICEBLUE: Sheet = { msScrollbarDarkshadowColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { msScrollbarDarkshadowColor: "antiquewhite" };
        static AQUA: Sheet = { msScrollbarDarkshadowColor: "aqua" };
        static AQUAMARINE: Sheet = { msScrollbarDarkshadowColor: "aquamarine" };
        static AZURE: Sheet = { msScrollbarDarkshadowColor: "azure" };
        static BEIGE: Sheet = { msScrollbarDarkshadowColor: "beige" };
        static BISQUE: Sheet = { msScrollbarDarkshadowColor: "bisque" };
        static BLACK: Sheet = { msScrollbarDarkshadowColor: "black" };
        static BLANCHEDALMOND: Sheet = { msScrollbarDarkshadowColor: "blanchedalmond" };
        static BLUE: Sheet = { msScrollbarDarkshadowColor: "blue" };
        static BLUEVIOLET: Sheet = { msScrollbarDarkshadowColor: "blueviolet" };
        static BROWN: Sheet = { msScrollbarDarkshadowColor: "brown" };
        static BURLYWOOD: Sheet = { msScrollbarDarkshadowColor: "burlywood" };
        static CADETBLUE: Sheet = { msScrollbarDarkshadowColor: "cadetblue" };
        static CHARTREUSE: Sheet = { msScrollbarDarkshadowColor: "chartreuse" };
        static CHOCOLATE: Sheet = { msScrollbarDarkshadowColor: "chocolate" };
        static CORAL: Sheet = { msScrollbarDarkshadowColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { msScrollbarDarkshadowColor: "cornflowerblue" };
        static CORNSILK: Sheet = { msScrollbarDarkshadowColor: "cornsilk" };
        static CRIMSON: Sheet = { msScrollbarDarkshadowColor: "crimson" };
        static CYAN: Sheet = { msScrollbarDarkshadowColor: "cyan" };
        static DARKBLUE: Sheet = { msScrollbarDarkshadowColor: "darkblue" };
        static DARKCYAN: Sheet = { msScrollbarDarkshadowColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { msScrollbarDarkshadowColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { msScrollbarDarkshadowColor: "darkgray" };
        static DARKGREEN: Sheet = { msScrollbarDarkshadowColor: "darkgreen" };
        static DARKGREY: Sheet = { msScrollbarDarkshadowColor: "darkgrey" };
        static DARKKHAKI: Sheet = { msScrollbarDarkshadowColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { msScrollbarDarkshadowColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { msScrollbarDarkshadowColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { msScrollbarDarkshadowColor: "darkorange" };
        static DARKORCHID: Sheet = { msScrollbarDarkshadowColor: "darkorchid" };
        static DARKRED: Sheet = { msScrollbarDarkshadowColor: "darkred" };
        static DARKSALMON: Sheet = { msScrollbarDarkshadowColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { msScrollbarDarkshadowColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { msScrollbarDarkshadowColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { msScrollbarDarkshadowColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { msScrollbarDarkshadowColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { msScrollbarDarkshadowColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { msScrollbarDarkshadowColor: "darkviolet" };
        static DEEPPINK: Sheet = { msScrollbarDarkshadowColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { msScrollbarDarkshadowColor: "deepskyblue" };
        static DIMGRAY: Sheet = { msScrollbarDarkshadowColor: "dimgray" };
        static DIMGREY: Sheet = { msScrollbarDarkshadowColor: "dimgrey" };
        static DODGERBLUE: Sheet = { msScrollbarDarkshadowColor: "dodgerblue" };
        static FIREBRICK: Sheet = { msScrollbarDarkshadowColor: "firebrick" };
        static FLORALWHITE: Sheet = { msScrollbarDarkshadowColor: "floralwhite" };
        static FORESTGREEN: Sheet = { msScrollbarDarkshadowColor: "forestgreen" };
        static FUCHSIA: Sheet = { msScrollbarDarkshadowColor: "fuchsia" };
        static GAINSBORO: Sheet = { msScrollbarDarkshadowColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { msScrollbarDarkshadowColor: "ghostwhite" };
        static GOLD: Sheet = { msScrollbarDarkshadowColor: "gold" };
        static GOLDENROD: Sheet = { msScrollbarDarkshadowColor: "goldenrod" };
        static GRAY: Sheet = { msScrollbarDarkshadowColor: "gray" };
        static GREEN: Sheet = { msScrollbarDarkshadowColor: "green" };
        static GREENYELLOW: Sheet = { msScrollbarDarkshadowColor: "greenyellow" };
        static GREY: Sheet = { msScrollbarDarkshadowColor: "grey" };
        static HONEYDEW: Sheet = { msScrollbarDarkshadowColor: "honeydew" };
        static HOTPINK: Sheet = { msScrollbarDarkshadowColor: "hotpink" };
        static INDIANRED: Sheet = { msScrollbarDarkshadowColor: "indianred" };
        static INDIGO: Sheet = { msScrollbarDarkshadowColor: "indigo" };
        static IVORY: Sheet = { msScrollbarDarkshadowColor: "ivory" };
        static KHAKI: Sheet = { msScrollbarDarkshadowColor: "khaki" };
        static LAVENDER: Sheet = { msScrollbarDarkshadowColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { msScrollbarDarkshadowColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { msScrollbarDarkshadowColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { msScrollbarDarkshadowColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { msScrollbarDarkshadowColor: "lightblue" };
        static LIGHTCORAL: Sheet = { msScrollbarDarkshadowColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { msScrollbarDarkshadowColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { msScrollbarDarkshadowColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { msScrollbarDarkshadowColor: "lightgray" };
        static LIGHTGREEN: Sheet = { msScrollbarDarkshadowColor: "lightgreen" };
        static LIGHTGREY: Sheet = { msScrollbarDarkshadowColor: "lightgrey" };
        static LIGHTPINK: Sheet = { msScrollbarDarkshadowColor: "lightpink" };
        static LIGHTSALMON: Sheet = { msScrollbarDarkshadowColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { msScrollbarDarkshadowColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { msScrollbarDarkshadowColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { msScrollbarDarkshadowColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { msScrollbarDarkshadowColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { msScrollbarDarkshadowColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { msScrollbarDarkshadowColor: "lightyellow" };
        static LIME: Sheet = { msScrollbarDarkshadowColor: "lime" };
        static LIMEGREEN: Sheet = { msScrollbarDarkshadowColor: "limegreen" };
        static LINEN: Sheet = { msScrollbarDarkshadowColor: "linen" };
        static MAGENTA: Sheet = { msScrollbarDarkshadowColor: "magenta" };
        static MAROON: Sheet = { msScrollbarDarkshadowColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { msScrollbarDarkshadowColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { msScrollbarDarkshadowColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { msScrollbarDarkshadowColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { msScrollbarDarkshadowColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { msScrollbarDarkshadowColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { msScrollbarDarkshadowColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { msScrollbarDarkshadowColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { msScrollbarDarkshadowColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { msScrollbarDarkshadowColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { msScrollbarDarkshadowColor: "midnightblue" };
        static MINTCREAM: Sheet = { msScrollbarDarkshadowColor: "mintcream" };
        static MISTYROSE: Sheet = { msScrollbarDarkshadowColor: "mistyrose" };
        static MOCCASIN: Sheet = { msScrollbarDarkshadowColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { msScrollbarDarkshadowColor: "navajowhite" };
        static NAVY: Sheet = { msScrollbarDarkshadowColor: "navy" };
        static OLDLACE: Sheet = { msScrollbarDarkshadowColor: "oldlace" };
        static OLIVE: Sheet = { msScrollbarDarkshadowColor: "olive" };
        static OLIVEDRAB: Sheet = { msScrollbarDarkshadowColor: "olivedrab" };
        static ORANGE: Sheet = { msScrollbarDarkshadowColor: "orange" };
        static ORANGERED: Sheet = { msScrollbarDarkshadowColor: "orangered" };
        static ORCHID: Sheet = { msScrollbarDarkshadowColor: "orchid" };
        static PALEGOLDENROD: Sheet = { msScrollbarDarkshadowColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { msScrollbarDarkshadowColor: "palegreen" };
        static PALETURQUOISE: Sheet = { msScrollbarDarkshadowColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { msScrollbarDarkshadowColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { msScrollbarDarkshadowColor: "papayawhip" };
        static PEACHPUFF: Sheet = { msScrollbarDarkshadowColor: "peachpuff" };
        static PERU: Sheet = { msScrollbarDarkshadowColor: "peru" };
        static PINK: Sheet = { msScrollbarDarkshadowColor: "pink" };
        static PLUM: Sheet = { msScrollbarDarkshadowColor: "plum" };
        static POWDERBLUE: Sheet = { msScrollbarDarkshadowColor: "powderblue" };
        static PURPLE: Sheet = { msScrollbarDarkshadowColor: "purple" };
        static REBECCAPURPLE: Sheet = { msScrollbarDarkshadowColor: "rebeccapurple" };
        static RED: Sheet = { msScrollbarDarkshadowColor: "red" };
        static ROSYBROWN: Sheet = { msScrollbarDarkshadowColor: "rosybrown" };
        static ROYALBLUE: Sheet = { msScrollbarDarkshadowColor: "royalblue" };
        static SADDLEBROWN: Sheet = { msScrollbarDarkshadowColor: "saddlebrown" };
        static SALMON: Sheet = { msScrollbarDarkshadowColor: "salmon" };
        static SANDYBROWN: Sheet = { msScrollbarDarkshadowColor: "sandybrown" };
        static SEAGREEN: Sheet = { msScrollbarDarkshadowColor: "seagreen" };
        static SEASHELL: Sheet = { msScrollbarDarkshadowColor: "seashell" };
        static SIENNA: Sheet = { msScrollbarDarkshadowColor: "sienna" };
        static SILVER: Sheet = { msScrollbarDarkshadowColor: "silver" };
        static SKYBLUE: Sheet = { msScrollbarDarkshadowColor: "skyblue" };
        static SLATEBLUE: Sheet = { msScrollbarDarkshadowColor: "slateblue" };
        static SLATEGRAY: Sheet = { msScrollbarDarkshadowColor: "slategray" };
        static SLATEGREY: Sheet = { msScrollbarDarkshadowColor: "slategrey" };
        static SNOW: Sheet = { msScrollbarDarkshadowColor: "snow" };
        static SPRINGGREEN: Sheet = { msScrollbarDarkshadowColor: "springgreen" };
        static STEELBLUE: Sheet = { msScrollbarDarkshadowColor: "steelblue" };
        static TAN: Sheet = { msScrollbarDarkshadowColor: "tan" };
        static TEAL: Sheet = { msScrollbarDarkshadowColor: "teal" };
        static THISTLE: Sheet = { msScrollbarDarkshadowColor: "thistle" };
        static TOMATO: Sheet = { msScrollbarDarkshadowColor: "tomato" };
        static TURQUOISE: Sheet = { msScrollbarDarkshadowColor: "turquoise" };
        static VIOLET: Sheet = { msScrollbarDarkshadowColor: "violet" };
        static WHEAT: Sheet = { msScrollbarDarkshadowColor: "wheat" };
        static WHITE: Sheet = { msScrollbarDarkshadowColor: "white" };
        static WHITESMOKE: Sheet = { msScrollbarDarkshadowColor: "whitesmoke" };
        static YELLOW: Sheet = { msScrollbarDarkshadowColor: "yellow" };
        static YELLOWGREEN: Sheet = { msScrollbarDarkshadowColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { msScrollbarDarkshadowColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { msScrollbarDarkshadowColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { msScrollbarDarkshadowColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { msScrollbarDarkshadowColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { msScrollbarDarkshadowColor: "Background" };
        static BUTTONFACE: Sheet = { msScrollbarDarkshadowColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { msScrollbarDarkshadowColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { msScrollbarDarkshadowColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { msScrollbarDarkshadowColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { msScrollbarDarkshadowColor: "CaptionText" };
        static GRAYTEXT: Sheet = { msScrollbarDarkshadowColor: "GrayText" };
        static HIGHLIGHT: Sheet = { msScrollbarDarkshadowColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { msScrollbarDarkshadowColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { msScrollbarDarkshadowColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { msScrollbarDarkshadowColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { msScrollbarDarkshadowColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { msScrollbarDarkshadowColor: "InfoBackground" };
        static INFOTEXT: Sheet = { msScrollbarDarkshadowColor: "InfoText" };
        static MENU: Sheet = { msScrollbarDarkshadowColor: "Menu" };
        static MENUTEXT: Sheet = { msScrollbarDarkshadowColor: "MenuText" };
        static SCROLLBAR: Sheet = { msScrollbarDarkshadowColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { msScrollbarDarkshadowColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { msScrollbarDarkshadowColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { msScrollbarDarkshadowColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { msScrollbarDarkshadowColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { msScrollbarDarkshadowColor: "ThreeDShadow" };
        static WINDOW: Sheet = { msScrollbarDarkshadowColor: "Window" };
        static WINDOWFRAME: Sheet = { msScrollbarDarkshadowColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { msScrollbarDarkshadowColor: "WindowText" };
    }
    export class MsScrollbarFaceColor {
        static set = (...params: Param[]): Sheet => ({ msScrollbarFaceColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msScrollbarFaceColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ msScrollbarFaceColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ msScrollbarFaceColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ msScrollbarFaceColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ msScrollbarFaceColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { msScrollbarFaceColor: "transparent" };
        static ALICEBLUE: Sheet = { msScrollbarFaceColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { msScrollbarFaceColor: "antiquewhite" };
        static AQUA: Sheet = { msScrollbarFaceColor: "aqua" };
        static AQUAMARINE: Sheet = { msScrollbarFaceColor: "aquamarine" };
        static AZURE: Sheet = { msScrollbarFaceColor: "azure" };
        static BEIGE: Sheet = { msScrollbarFaceColor: "beige" };
        static BISQUE: Sheet = { msScrollbarFaceColor: "bisque" };
        static BLACK: Sheet = { msScrollbarFaceColor: "black" };
        static BLANCHEDALMOND: Sheet = { msScrollbarFaceColor: "blanchedalmond" };
        static BLUE: Sheet = { msScrollbarFaceColor: "blue" };
        static BLUEVIOLET: Sheet = { msScrollbarFaceColor: "blueviolet" };
        static BROWN: Sheet = { msScrollbarFaceColor: "brown" };
        static BURLYWOOD: Sheet = { msScrollbarFaceColor: "burlywood" };
        static CADETBLUE: Sheet = { msScrollbarFaceColor: "cadetblue" };
        static CHARTREUSE: Sheet = { msScrollbarFaceColor: "chartreuse" };
        static CHOCOLATE: Sheet = { msScrollbarFaceColor: "chocolate" };
        static CORAL: Sheet = { msScrollbarFaceColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { msScrollbarFaceColor: "cornflowerblue" };
        static CORNSILK: Sheet = { msScrollbarFaceColor: "cornsilk" };
        static CRIMSON: Sheet = { msScrollbarFaceColor: "crimson" };
        static CYAN: Sheet = { msScrollbarFaceColor: "cyan" };
        static DARKBLUE: Sheet = { msScrollbarFaceColor: "darkblue" };
        static DARKCYAN: Sheet = { msScrollbarFaceColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { msScrollbarFaceColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { msScrollbarFaceColor: "darkgray" };
        static DARKGREEN: Sheet = { msScrollbarFaceColor: "darkgreen" };
        static DARKGREY: Sheet = { msScrollbarFaceColor: "darkgrey" };
        static DARKKHAKI: Sheet = { msScrollbarFaceColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { msScrollbarFaceColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { msScrollbarFaceColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { msScrollbarFaceColor: "darkorange" };
        static DARKORCHID: Sheet = { msScrollbarFaceColor: "darkorchid" };
        static DARKRED: Sheet = { msScrollbarFaceColor: "darkred" };
        static DARKSALMON: Sheet = { msScrollbarFaceColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { msScrollbarFaceColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { msScrollbarFaceColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { msScrollbarFaceColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { msScrollbarFaceColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { msScrollbarFaceColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { msScrollbarFaceColor: "darkviolet" };
        static DEEPPINK: Sheet = { msScrollbarFaceColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { msScrollbarFaceColor: "deepskyblue" };
        static DIMGRAY: Sheet = { msScrollbarFaceColor: "dimgray" };
        static DIMGREY: Sheet = { msScrollbarFaceColor: "dimgrey" };
        static DODGERBLUE: Sheet = { msScrollbarFaceColor: "dodgerblue" };
        static FIREBRICK: Sheet = { msScrollbarFaceColor: "firebrick" };
        static FLORALWHITE: Sheet = { msScrollbarFaceColor: "floralwhite" };
        static FORESTGREEN: Sheet = { msScrollbarFaceColor: "forestgreen" };
        static FUCHSIA: Sheet = { msScrollbarFaceColor: "fuchsia" };
        static GAINSBORO: Sheet = { msScrollbarFaceColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { msScrollbarFaceColor: "ghostwhite" };
        static GOLD: Sheet = { msScrollbarFaceColor: "gold" };
        static GOLDENROD: Sheet = { msScrollbarFaceColor: "goldenrod" };
        static GRAY: Sheet = { msScrollbarFaceColor: "gray" };
        static GREEN: Sheet = { msScrollbarFaceColor: "green" };
        static GREENYELLOW: Sheet = { msScrollbarFaceColor: "greenyellow" };
        static GREY: Sheet = { msScrollbarFaceColor: "grey" };
        static HONEYDEW: Sheet = { msScrollbarFaceColor: "honeydew" };
        static HOTPINK: Sheet = { msScrollbarFaceColor: "hotpink" };
        static INDIANRED: Sheet = { msScrollbarFaceColor: "indianred" };
        static INDIGO: Sheet = { msScrollbarFaceColor: "indigo" };
        static IVORY: Sheet = { msScrollbarFaceColor: "ivory" };
        static KHAKI: Sheet = { msScrollbarFaceColor: "khaki" };
        static LAVENDER: Sheet = { msScrollbarFaceColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { msScrollbarFaceColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { msScrollbarFaceColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { msScrollbarFaceColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { msScrollbarFaceColor: "lightblue" };
        static LIGHTCORAL: Sheet = { msScrollbarFaceColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { msScrollbarFaceColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { msScrollbarFaceColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { msScrollbarFaceColor: "lightgray" };
        static LIGHTGREEN: Sheet = { msScrollbarFaceColor: "lightgreen" };
        static LIGHTGREY: Sheet = { msScrollbarFaceColor: "lightgrey" };
        static LIGHTPINK: Sheet = { msScrollbarFaceColor: "lightpink" };
        static LIGHTSALMON: Sheet = { msScrollbarFaceColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { msScrollbarFaceColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { msScrollbarFaceColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { msScrollbarFaceColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { msScrollbarFaceColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { msScrollbarFaceColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { msScrollbarFaceColor: "lightyellow" };
        static LIME: Sheet = { msScrollbarFaceColor: "lime" };
        static LIMEGREEN: Sheet = { msScrollbarFaceColor: "limegreen" };
        static LINEN: Sheet = { msScrollbarFaceColor: "linen" };
        static MAGENTA: Sheet = { msScrollbarFaceColor: "magenta" };
        static MAROON: Sheet = { msScrollbarFaceColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { msScrollbarFaceColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { msScrollbarFaceColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { msScrollbarFaceColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { msScrollbarFaceColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { msScrollbarFaceColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { msScrollbarFaceColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { msScrollbarFaceColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { msScrollbarFaceColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { msScrollbarFaceColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { msScrollbarFaceColor: "midnightblue" };
        static MINTCREAM: Sheet = { msScrollbarFaceColor: "mintcream" };
        static MISTYROSE: Sheet = { msScrollbarFaceColor: "mistyrose" };
        static MOCCASIN: Sheet = { msScrollbarFaceColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { msScrollbarFaceColor: "navajowhite" };
        static NAVY: Sheet = { msScrollbarFaceColor: "navy" };
        static OLDLACE: Sheet = { msScrollbarFaceColor: "oldlace" };
        static OLIVE: Sheet = { msScrollbarFaceColor: "olive" };
        static OLIVEDRAB: Sheet = { msScrollbarFaceColor: "olivedrab" };
        static ORANGE: Sheet = { msScrollbarFaceColor: "orange" };
        static ORANGERED: Sheet = { msScrollbarFaceColor: "orangered" };
        static ORCHID: Sheet = { msScrollbarFaceColor: "orchid" };
        static PALEGOLDENROD: Sheet = { msScrollbarFaceColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { msScrollbarFaceColor: "palegreen" };
        static PALETURQUOISE: Sheet = { msScrollbarFaceColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { msScrollbarFaceColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { msScrollbarFaceColor: "papayawhip" };
        static PEACHPUFF: Sheet = { msScrollbarFaceColor: "peachpuff" };
        static PERU: Sheet = { msScrollbarFaceColor: "peru" };
        static PINK: Sheet = { msScrollbarFaceColor: "pink" };
        static PLUM: Sheet = { msScrollbarFaceColor: "plum" };
        static POWDERBLUE: Sheet = { msScrollbarFaceColor: "powderblue" };
        static PURPLE: Sheet = { msScrollbarFaceColor: "purple" };
        static REBECCAPURPLE: Sheet = { msScrollbarFaceColor: "rebeccapurple" };
        static RED: Sheet = { msScrollbarFaceColor: "red" };
        static ROSYBROWN: Sheet = { msScrollbarFaceColor: "rosybrown" };
        static ROYALBLUE: Sheet = { msScrollbarFaceColor: "royalblue" };
        static SADDLEBROWN: Sheet = { msScrollbarFaceColor: "saddlebrown" };
        static SALMON: Sheet = { msScrollbarFaceColor: "salmon" };
        static SANDYBROWN: Sheet = { msScrollbarFaceColor: "sandybrown" };
        static SEAGREEN: Sheet = { msScrollbarFaceColor: "seagreen" };
        static SEASHELL: Sheet = { msScrollbarFaceColor: "seashell" };
        static SIENNA: Sheet = { msScrollbarFaceColor: "sienna" };
        static SILVER: Sheet = { msScrollbarFaceColor: "silver" };
        static SKYBLUE: Sheet = { msScrollbarFaceColor: "skyblue" };
        static SLATEBLUE: Sheet = { msScrollbarFaceColor: "slateblue" };
        static SLATEGRAY: Sheet = { msScrollbarFaceColor: "slategray" };
        static SLATEGREY: Sheet = { msScrollbarFaceColor: "slategrey" };
        static SNOW: Sheet = { msScrollbarFaceColor: "snow" };
        static SPRINGGREEN: Sheet = { msScrollbarFaceColor: "springgreen" };
        static STEELBLUE: Sheet = { msScrollbarFaceColor: "steelblue" };
        static TAN: Sheet = { msScrollbarFaceColor: "tan" };
        static TEAL: Sheet = { msScrollbarFaceColor: "teal" };
        static THISTLE: Sheet = { msScrollbarFaceColor: "thistle" };
        static TOMATO: Sheet = { msScrollbarFaceColor: "tomato" };
        static TURQUOISE: Sheet = { msScrollbarFaceColor: "turquoise" };
        static VIOLET: Sheet = { msScrollbarFaceColor: "violet" };
        static WHEAT: Sheet = { msScrollbarFaceColor: "wheat" };
        static WHITE: Sheet = { msScrollbarFaceColor: "white" };
        static WHITESMOKE: Sheet = { msScrollbarFaceColor: "whitesmoke" };
        static YELLOW: Sheet = { msScrollbarFaceColor: "yellow" };
        static YELLOWGREEN: Sheet = { msScrollbarFaceColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { msScrollbarFaceColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { msScrollbarFaceColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { msScrollbarFaceColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { msScrollbarFaceColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { msScrollbarFaceColor: "Background" };
        static BUTTONFACE: Sheet = { msScrollbarFaceColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { msScrollbarFaceColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { msScrollbarFaceColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { msScrollbarFaceColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { msScrollbarFaceColor: "CaptionText" };
        static GRAYTEXT: Sheet = { msScrollbarFaceColor: "GrayText" };
        static HIGHLIGHT: Sheet = { msScrollbarFaceColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { msScrollbarFaceColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { msScrollbarFaceColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { msScrollbarFaceColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { msScrollbarFaceColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { msScrollbarFaceColor: "InfoBackground" };
        static INFOTEXT: Sheet = { msScrollbarFaceColor: "InfoText" };
        static MENU: Sheet = { msScrollbarFaceColor: "Menu" };
        static MENUTEXT: Sheet = { msScrollbarFaceColor: "MenuText" };
        static SCROLLBAR: Sheet = { msScrollbarFaceColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { msScrollbarFaceColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { msScrollbarFaceColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { msScrollbarFaceColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { msScrollbarFaceColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { msScrollbarFaceColor: "ThreeDShadow" };
        static WINDOW: Sheet = { msScrollbarFaceColor: "Window" };
        static WINDOWFRAME: Sheet = { msScrollbarFaceColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { msScrollbarFaceColor: "WindowText" };
    }
    export class MsScrollbarHighlightColor {
        static set = (...params: Param[]): Sheet => ({ msScrollbarHighlightColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msScrollbarHighlightColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ msScrollbarHighlightColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ msScrollbarHighlightColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ msScrollbarHighlightColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ msScrollbarHighlightColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { msScrollbarHighlightColor: "transparent" };
        static ALICEBLUE: Sheet = { msScrollbarHighlightColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { msScrollbarHighlightColor: "antiquewhite" };
        static AQUA: Sheet = { msScrollbarHighlightColor: "aqua" };
        static AQUAMARINE: Sheet = { msScrollbarHighlightColor: "aquamarine" };
        static AZURE: Sheet = { msScrollbarHighlightColor: "azure" };
        static BEIGE: Sheet = { msScrollbarHighlightColor: "beige" };
        static BISQUE: Sheet = { msScrollbarHighlightColor: "bisque" };
        static BLACK: Sheet = { msScrollbarHighlightColor: "black" };
        static BLANCHEDALMOND: Sheet = { msScrollbarHighlightColor: "blanchedalmond" };
        static BLUE: Sheet = { msScrollbarHighlightColor: "blue" };
        static BLUEVIOLET: Sheet = { msScrollbarHighlightColor: "blueviolet" };
        static BROWN: Sheet = { msScrollbarHighlightColor: "brown" };
        static BURLYWOOD: Sheet = { msScrollbarHighlightColor: "burlywood" };
        static CADETBLUE: Sheet = { msScrollbarHighlightColor: "cadetblue" };
        static CHARTREUSE: Sheet = { msScrollbarHighlightColor: "chartreuse" };
        static CHOCOLATE: Sheet = { msScrollbarHighlightColor: "chocolate" };
        static CORAL: Sheet = { msScrollbarHighlightColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { msScrollbarHighlightColor: "cornflowerblue" };
        static CORNSILK: Sheet = { msScrollbarHighlightColor: "cornsilk" };
        static CRIMSON: Sheet = { msScrollbarHighlightColor: "crimson" };
        static CYAN: Sheet = { msScrollbarHighlightColor: "cyan" };
        static DARKBLUE: Sheet = { msScrollbarHighlightColor: "darkblue" };
        static DARKCYAN: Sheet = { msScrollbarHighlightColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { msScrollbarHighlightColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { msScrollbarHighlightColor: "darkgray" };
        static DARKGREEN: Sheet = { msScrollbarHighlightColor: "darkgreen" };
        static DARKGREY: Sheet = { msScrollbarHighlightColor: "darkgrey" };
        static DARKKHAKI: Sheet = { msScrollbarHighlightColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { msScrollbarHighlightColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { msScrollbarHighlightColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { msScrollbarHighlightColor: "darkorange" };
        static DARKORCHID: Sheet = { msScrollbarHighlightColor: "darkorchid" };
        static DARKRED: Sheet = { msScrollbarHighlightColor: "darkred" };
        static DARKSALMON: Sheet = { msScrollbarHighlightColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { msScrollbarHighlightColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { msScrollbarHighlightColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { msScrollbarHighlightColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { msScrollbarHighlightColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { msScrollbarHighlightColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { msScrollbarHighlightColor: "darkviolet" };
        static DEEPPINK: Sheet = { msScrollbarHighlightColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { msScrollbarHighlightColor: "deepskyblue" };
        static DIMGRAY: Sheet = { msScrollbarHighlightColor: "dimgray" };
        static DIMGREY: Sheet = { msScrollbarHighlightColor: "dimgrey" };
        static DODGERBLUE: Sheet = { msScrollbarHighlightColor: "dodgerblue" };
        static FIREBRICK: Sheet = { msScrollbarHighlightColor: "firebrick" };
        static FLORALWHITE: Sheet = { msScrollbarHighlightColor: "floralwhite" };
        static FORESTGREEN: Sheet = { msScrollbarHighlightColor: "forestgreen" };
        static FUCHSIA: Sheet = { msScrollbarHighlightColor: "fuchsia" };
        static GAINSBORO: Sheet = { msScrollbarHighlightColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { msScrollbarHighlightColor: "ghostwhite" };
        static GOLD: Sheet = { msScrollbarHighlightColor: "gold" };
        static GOLDENROD: Sheet = { msScrollbarHighlightColor: "goldenrod" };
        static GRAY: Sheet = { msScrollbarHighlightColor: "gray" };
        static GREEN: Sheet = { msScrollbarHighlightColor: "green" };
        static GREENYELLOW: Sheet = { msScrollbarHighlightColor: "greenyellow" };
        static GREY: Sheet = { msScrollbarHighlightColor: "grey" };
        static HONEYDEW: Sheet = { msScrollbarHighlightColor: "honeydew" };
        static HOTPINK: Sheet = { msScrollbarHighlightColor: "hotpink" };
        static INDIANRED: Sheet = { msScrollbarHighlightColor: "indianred" };
        static INDIGO: Sheet = { msScrollbarHighlightColor: "indigo" };
        static IVORY: Sheet = { msScrollbarHighlightColor: "ivory" };
        static KHAKI: Sheet = { msScrollbarHighlightColor: "khaki" };
        static LAVENDER: Sheet = { msScrollbarHighlightColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { msScrollbarHighlightColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { msScrollbarHighlightColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { msScrollbarHighlightColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { msScrollbarHighlightColor: "lightblue" };
        static LIGHTCORAL: Sheet = { msScrollbarHighlightColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { msScrollbarHighlightColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { msScrollbarHighlightColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { msScrollbarHighlightColor: "lightgray" };
        static LIGHTGREEN: Sheet = { msScrollbarHighlightColor: "lightgreen" };
        static LIGHTGREY: Sheet = { msScrollbarHighlightColor: "lightgrey" };
        static LIGHTPINK: Sheet = { msScrollbarHighlightColor: "lightpink" };
        static LIGHTSALMON: Sheet = { msScrollbarHighlightColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { msScrollbarHighlightColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { msScrollbarHighlightColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { msScrollbarHighlightColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { msScrollbarHighlightColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { msScrollbarHighlightColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { msScrollbarHighlightColor: "lightyellow" };
        static LIME: Sheet = { msScrollbarHighlightColor: "lime" };
        static LIMEGREEN: Sheet = { msScrollbarHighlightColor: "limegreen" };
        static LINEN: Sheet = { msScrollbarHighlightColor: "linen" };
        static MAGENTA: Sheet = { msScrollbarHighlightColor: "magenta" };
        static MAROON: Sheet = { msScrollbarHighlightColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { msScrollbarHighlightColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { msScrollbarHighlightColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { msScrollbarHighlightColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { msScrollbarHighlightColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { msScrollbarHighlightColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { msScrollbarHighlightColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { msScrollbarHighlightColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { msScrollbarHighlightColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { msScrollbarHighlightColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { msScrollbarHighlightColor: "midnightblue" };
        static MINTCREAM: Sheet = { msScrollbarHighlightColor: "mintcream" };
        static MISTYROSE: Sheet = { msScrollbarHighlightColor: "mistyrose" };
        static MOCCASIN: Sheet = { msScrollbarHighlightColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { msScrollbarHighlightColor: "navajowhite" };
        static NAVY: Sheet = { msScrollbarHighlightColor: "navy" };
        static OLDLACE: Sheet = { msScrollbarHighlightColor: "oldlace" };
        static OLIVE: Sheet = { msScrollbarHighlightColor: "olive" };
        static OLIVEDRAB: Sheet = { msScrollbarHighlightColor: "olivedrab" };
        static ORANGE: Sheet = { msScrollbarHighlightColor: "orange" };
        static ORANGERED: Sheet = { msScrollbarHighlightColor: "orangered" };
        static ORCHID: Sheet = { msScrollbarHighlightColor: "orchid" };
        static PALEGOLDENROD: Sheet = { msScrollbarHighlightColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { msScrollbarHighlightColor: "palegreen" };
        static PALETURQUOISE: Sheet = { msScrollbarHighlightColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { msScrollbarHighlightColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { msScrollbarHighlightColor: "papayawhip" };
        static PEACHPUFF: Sheet = { msScrollbarHighlightColor: "peachpuff" };
        static PERU: Sheet = { msScrollbarHighlightColor: "peru" };
        static PINK: Sheet = { msScrollbarHighlightColor: "pink" };
        static PLUM: Sheet = { msScrollbarHighlightColor: "plum" };
        static POWDERBLUE: Sheet = { msScrollbarHighlightColor: "powderblue" };
        static PURPLE: Sheet = { msScrollbarHighlightColor: "purple" };
        static REBECCAPURPLE: Sheet = { msScrollbarHighlightColor: "rebeccapurple" };
        static RED: Sheet = { msScrollbarHighlightColor: "red" };
        static ROSYBROWN: Sheet = { msScrollbarHighlightColor: "rosybrown" };
        static ROYALBLUE: Sheet = { msScrollbarHighlightColor: "royalblue" };
        static SADDLEBROWN: Sheet = { msScrollbarHighlightColor: "saddlebrown" };
        static SALMON: Sheet = { msScrollbarHighlightColor: "salmon" };
        static SANDYBROWN: Sheet = { msScrollbarHighlightColor: "sandybrown" };
        static SEAGREEN: Sheet = { msScrollbarHighlightColor: "seagreen" };
        static SEASHELL: Sheet = { msScrollbarHighlightColor: "seashell" };
        static SIENNA: Sheet = { msScrollbarHighlightColor: "sienna" };
        static SILVER: Sheet = { msScrollbarHighlightColor: "silver" };
        static SKYBLUE: Sheet = { msScrollbarHighlightColor: "skyblue" };
        static SLATEBLUE: Sheet = { msScrollbarHighlightColor: "slateblue" };
        static SLATEGRAY: Sheet = { msScrollbarHighlightColor: "slategray" };
        static SLATEGREY: Sheet = { msScrollbarHighlightColor: "slategrey" };
        static SNOW: Sheet = { msScrollbarHighlightColor: "snow" };
        static SPRINGGREEN: Sheet = { msScrollbarHighlightColor: "springgreen" };
        static STEELBLUE: Sheet = { msScrollbarHighlightColor: "steelblue" };
        static TAN: Sheet = { msScrollbarHighlightColor: "tan" };
        static TEAL: Sheet = { msScrollbarHighlightColor: "teal" };
        static THISTLE: Sheet = { msScrollbarHighlightColor: "thistle" };
        static TOMATO: Sheet = { msScrollbarHighlightColor: "tomato" };
        static TURQUOISE: Sheet = { msScrollbarHighlightColor: "turquoise" };
        static VIOLET: Sheet = { msScrollbarHighlightColor: "violet" };
        static WHEAT: Sheet = { msScrollbarHighlightColor: "wheat" };
        static WHITE: Sheet = { msScrollbarHighlightColor: "white" };
        static WHITESMOKE: Sheet = { msScrollbarHighlightColor: "whitesmoke" };
        static YELLOW: Sheet = { msScrollbarHighlightColor: "yellow" };
        static YELLOWGREEN: Sheet = { msScrollbarHighlightColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { msScrollbarHighlightColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { msScrollbarHighlightColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { msScrollbarHighlightColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { msScrollbarHighlightColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { msScrollbarHighlightColor: "Background" };
        static BUTTONFACE: Sheet = { msScrollbarHighlightColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { msScrollbarHighlightColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { msScrollbarHighlightColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { msScrollbarHighlightColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { msScrollbarHighlightColor: "CaptionText" };
        static GRAYTEXT: Sheet = { msScrollbarHighlightColor: "GrayText" };
        static HIGHLIGHT: Sheet = { msScrollbarHighlightColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { msScrollbarHighlightColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { msScrollbarHighlightColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { msScrollbarHighlightColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { msScrollbarHighlightColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { msScrollbarHighlightColor: "InfoBackground" };
        static INFOTEXT: Sheet = { msScrollbarHighlightColor: "InfoText" };
        static MENU: Sheet = { msScrollbarHighlightColor: "Menu" };
        static MENUTEXT: Sheet = { msScrollbarHighlightColor: "MenuText" };
        static SCROLLBAR: Sheet = { msScrollbarHighlightColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { msScrollbarHighlightColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { msScrollbarHighlightColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { msScrollbarHighlightColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { msScrollbarHighlightColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { msScrollbarHighlightColor: "ThreeDShadow" };
        static WINDOW: Sheet = { msScrollbarHighlightColor: "Window" };
        static WINDOWFRAME: Sheet = { msScrollbarHighlightColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { msScrollbarHighlightColor: "WindowText" };
    }
    export class MsScrollbarShadowColor {
        static set = (...params: Param[]): Sheet => ({ msScrollbarShadowColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msScrollbarShadowColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ msScrollbarShadowColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ msScrollbarShadowColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ msScrollbarShadowColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ msScrollbarShadowColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { msScrollbarShadowColor: "transparent" };
        static ALICEBLUE: Sheet = { msScrollbarShadowColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { msScrollbarShadowColor: "antiquewhite" };
        static AQUA: Sheet = { msScrollbarShadowColor: "aqua" };
        static AQUAMARINE: Sheet = { msScrollbarShadowColor: "aquamarine" };
        static AZURE: Sheet = { msScrollbarShadowColor: "azure" };
        static BEIGE: Sheet = { msScrollbarShadowColor: "beige" };
        static BISQUE: Sheet = { msScrollbarShadowColor: "bisque" };
        static BLACK: Sheet = { msScrollbarShadowColor: "black" };
        static BLANCHEDALMOND: Sheet = { msScrollbarShadowColor: "blanchedalmond" };
        static BLUE: Sheet = { msScrollbarShadowColor: "blue" };
        static BLUEVIOLET: Sheet = { msScrollbarShadowColor: "blueviolet" };
        static BROWN: Sheet = { msScrollbarShadowColor: "brown" };
        static BURLYWOOD: Sheet = { msScrollbarShadowColor: "burlywood" };
        static CADETBLUE: Sheet = { msScrollbarShadowColor: "cadetblue" };
        static CHARTREUSE: Sheet = { msScrollbarShadowColor: "chartreuse" };
        static CHOCOLATE: Sheet = { msScrollbarShadowColor: "chocolate" };
        static CORAL: Sheet = { msScrollbarShadowColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { msScrollbarShadowColor: "cornflowerblue" };
        static CORNSILK: Sheet = { msScrollbarShadowColor: "cornsilk" };
        static CRIMSON: Sheet = { msScrollbarShadowColor: "crimson" };
        static CYAN: Sheet = { msScrollbarShadowColor: "cyan" };
        static DARKBLUE: Sheet = { msScrollbarShadowColor: "darkblue" };
        static DARKCYAN: Sheet = { msScrollbarShadowColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { msScrollbarShadowColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { msScrollbarShadowColor: "darkgray" };
        static DARKGREEN: Sheet = { msScrollbarShadowColor: "darkgreen" };
        static DARKGREY: Sheet = { msScrollbarShadowColor: "darkgrey" };
        static DARKKHAKI: Sheet = { msScrollbarShadowColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { msScrollbarShadowColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { msScrollbarShadowColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { msScrollbarShadowColor: "darkorange" };
        static DARKORCHID: Sheet = { msScrollbarShadowColor: "darkorchid" };
        static DARKRED: Sheet = { msScrollbarShadowColor: "darkred" };
        static DARKSALMON: Sheet = { msScrollbarShadowColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { msScrollbarShadowColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { msScrollbarShadowColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { msScrollbarShadowColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { msScrollbarShadowColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { msScrollbarShadowColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { msScrollbarShadowColor: "darkviolet" };
        static DEEPPINK: Sheet = { msScrollbarShadowColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { msScrollbarShadowColor: "deepskyblue" };
        static DIMGRAY: Sheet = { msScrollbarShadowColor: "dimgray" };
        static DIMGREY: Sheet = { msScrollbarShadowColor: "dimgrey" };
        static DODGERBLUE: Sheet = { msScrollbarShadowColor: "dodgerblue" };
        static FIREBRICK: Sheet = { msScrollbarShadowColor: "firebrick" };
        static FLORALWHITE: Sheet = { msScrollbarShadowColor: "floralwhite" };
        static FORESTGREEN: Sheet = { msScrollbarShadowColor: "forestgreen" };
        static FUCHSIA: Sheet = { msScrollbarShadowColor: "fuchsia" };
        static GAINSBORO: Sheet = { msScrollbarShadowColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { msScrollbarShadowColor: "ghostwhite" };
        static GOLD: Sheet = { msScrollbarShadowColor: "gold" };
        static GOLDENROD: Sheet = { msScrollbarShadowColor: "goldenrod" };
        static GRAY: Sheet = { msScrollbarShadowColor: "gray" };
        static GREEN: Sheet = { msScrollbarShadowColor: "green" };
        static GREENYELLOW: Sheet = { msScrollbarShadowColor: "greenyellow" };
        static GREY: Sheet = { msScrollbarShadowColor: "grey" };
        static HONEYDEW: Sheet = { msScrollbarShadowColor: "honeydew" };
        static HOTPINK: Sheet = { msScrollbarShadowColor: "hotpink" };
        static INDIANRED: Sheet = { msScrollbarShadowColor: "indianred" };
        static INDIGO: Sheet = { msScrollbarShadowColor: "indigo" };
        static IVORY: Sheet = { msScrollbarShadowColor: "ivory" };
        static KHAKI: Sheet = { msScrollbarShadowColor: "khaki" };
        static LAVENDER: Sheet = { msScrollbarShadowColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { msScrollbarShadowColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { msScrollbarShadowColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { msScrollbarShadowColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { msScrollbarShadowColor: "lightblue" };
        static LIGHTCORAL: Sheet = { msScrollbarShadowColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { msScrollbarShadowColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { msScrollbarShadowColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { msScrollbarShadowColor: "lightgray" };
        static LIGHTGREEN: Sheet = { msScrollbarShadowColor: "lightgreen" };
        static LIGHTGREY: Sheet = { msScrollbarShadowColor: "lightgrey" };
        static LIGHTPINK: Sheet = { msScrollbarShadowColor: "lightpink" };
        static LIGHTSALMON: Sheet = { msScrollbarShadowColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { msScrollbarShadowColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { msScrollbarShadowColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { msScrollbarShadowColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { msScrollbarShadowColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { msScrollbarShadowColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { msScrollbarShadowColor: "lightyellow" };
        static LIME: Sheet = { msScrollbarShadowColor: "lime" };
        static LIMEGREEN: Sheet = { msScrollbarShadowColor: "limegreen" };
        static LINEN: Sheet = { msScrollbarShadowColor: "linen" };
        static MAGENTA: Sheet = { msScrollbarShadowColor: "magenta" };
        static MAROON: Sheet = { msScrollbarShadowColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { msScrollbarShadowColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { msScrollbarShadowColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { msScrollbarShadowColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { msScrollbarShadowColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { msScrollbarShadowColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { msScrollbarShadowColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { msScrollbarShadowColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { msScrollbarShadowColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { msScrollbarShadowColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { msScrollbarShadowColor: "midnightblue" };
        static MINTCREAM: Sheet = { msScrollbarShadowColor: "mintcream" };
        static MISTYROSE: Sheet = { msScrollbarShadowColor: "mistyrose" };
        static MOCCASIN: Sheet = { msScrollbarShadowColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { msScrollbarShadowColor: "navajowhite" };
        static NAVY: Sheet = { msScrollbarShadowColor: "navy" };
        static OLDLACE: Sheet = { msScrollbarShadowColor: "oldlace" };
        static OLIVE: Sheet = { msScrollbarShadowColor: "olive" };
        static OLIVEDRAB: Sheet = { msScrollbarShadowColor: "olivedrab" };
        static ORANGE: Sheet = { msScrollbarShadowColor: "orange" };
        static ORANGERED: Sheet = { msScrollbarShadowColor: "orangered" };
        static ORCHID: Sheet = { msScrollbarShadowColor: "orchid" };
        static PALEGOLDENROD: Sheet = { msScrollbarShadowColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { msScrollbarShadowColor: "palegreen" };
        static PALETURQUOISE: Sheet = { msScrollbarShadowColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { msScrollbarShadowColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { msScrollbarShadowColor: "papayawhip" };
        static PEACHPUFF: Sheet = { msScrollbarShadowColor: "peachpuff" };
        static PERU: Sheet = { msScrollbarShadowColor: "peru" };
        static PINK: Sheet = { msScrollbarShadowColor: "pink" };
        static PLUM: Sheet = { msScrollbarShadowColor: "plum" };
        static POWDERBLUE: Sheet = { msScrollbarShadowColor: "powderblue" };
        static PURPLE: Sheet = { msScrollbarShadowColor: "purple" };
        static REBECCAPURPLE: Sheet = { msScrollbarShadowColor: "rebeccapurple" };
        static RED: Sheet = { msScrollbarShadowColor: "red" };
        static ROSYBROWN: Sheet = { msScrollbarShadowColor: "rosybrown" };
        static ROYALBLUE: Sheet = { msScrollbarShadowColor: "royalblue" };
        static SADDLEBROWN: Sheet = { msScrollbarShadowColor: "saddlebrown" };
        static SALMON: Sheet = { msScrollbarShadowColor: "salmon" };
        static SANDYBROWN: Sheet = { msScrollbarShadowColor: "sandybrown" };
        static SEAGREEN: Sheet = { msScrollbarShadowColor: "seagreen" };
        static SEASHELL: Sheet = { msScrollbarShadowColor: "seashell" };
        static SIENNA: Sheet = { msScrollbarShadowColor: "sienna" };
        static SILVER: Sheet = { msScrollbarShadowColor: "silver" };
        static SKYBLUE: Sheet = { msScrollbarShadowColor: "skyblue" };
        static SLATEBLUE: Sheet = { msScrollbarShadowColor: "slateblue" };
        static SLATEGRAY: Sheet = { msScrollbarShadowColor: "slategray" };
        static SLATEGREY: Sheet = { msScrollbarShadowColor: "slategrey" };
        static SNOW: Sheet = { msScrollbarShadowColor: "snow" };
        static SPRINGGREEN: Sheet = { msScrollbarShadowColor: "springgreen" };
        static STEELBLUE: Sheet = { msScrollbarShadowColor: "steelblue" };
        static TAN: Sheet = { msScrollbarShadowColor: "tan" };
        static TEAL: Sheet = { msScrollbarShadowColor: "teal" };
        static THISTLE: Sheet = { msScrollbarShadowColor: "thistle" };
        static TOMATO: Sheet = { msScrollbarShadowColor: "tomato" };
        static TURQUOISE: Sheet = { msScrollbarShadowColor: "turquoise" };
        static VIOLET: Sheet = { msScrollbarShadowColor: "violet" };
        static WHEAT: Sheet = { msScrollbarShadowColor: "wheat" };
        static WHITE: Sheet = { msScrollbarShadowColor: "white" };
        static WHITESMOKE: Sheet = { msScrollbarShadowColor: "whitesmoke" };
        static YELLOW: Sheet = { msScrollbarShadowColor: "yellow" };
        static YELLOWGREEN: Sheet = { msScrollbarShadowColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { msScrollbarShadowColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { msScrollbarShadowColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { msScrollbarShadowColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { msScrollbarShadowColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { msScrollbarShadowColor: "Background" };
        static BUTTONFACE: Sheet = { msScrollbarShadowColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { msScrollbarShadowColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { msScrollbarShadowColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { msScrollbarShadowColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { msScrollbarShadowColor: "CaptionText" };
        static GRAYTEXT: Sheet = { msScrollbarShadowColor: "GrayText" };
        static HIGHLIGHT: Sheet = { msScrollbarShadowColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { msScrollbarShadowColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { msScrollbarShadowColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { msScrollbarShadowColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { msScrollbarShadowColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { msScrollbarShadowColor: "InfoBackground" };
        static INFOTEXT: Sheet = { msScrollbarShadowColor: "InfoText" };
        static MENU: Sheet = { msScrollbarShadowColor: "Menu" };
        static MENUTEXT: Sheet = { msScrollbarShadowColor: "MenuText" };
        static SCROLLBAR: Sheet = { msScrollbarShadowColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { msScrollbarShadowColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { msScrollbarShadowColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { msScrollbarShadowColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { msScrollbarShadowColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { msScrollbarShadowColor: "ThreeDShadow" };
        static WINDOW: Sheet = { msScrollbarShadowColor: "Window" };
        static WINDOWFRAME: Sheet = { msScrollbarShadowColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { msScrollbarShadowColor: "WindowText" };
    }
    export class MsScrollbarTrackColor {
        static set = (...params: Param[]): Sheet => ({ msScrollbarTrackColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ msScrollbarTrackColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ msScrollbarTrackColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ msScrollbarTrackColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ msScrollbarTrackColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ msScrollbarTrackColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { msScrollbarTrackColor: "transparent" };
        static ALICEBLUE: Sheet = { msScrollbarTrackColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { msScrollbarTrackColor: "antiquewhite" };
        static AQUA: Sheet = { msScrollbarTrackColor: "aqua" };
        static AQUAMARINE: Sheet = { msScrollbarTrackColor: "aquamarine" };
        static AZURE: Sheet = { msScrollbarTrackColor: "azure" };
        static BEIGE: Sheet = { msScrollbarTrackColor: "beige" };
        static BISQUE: Sheet = { msScrollbarTrackColor: "bisque" };
        static BLACK: Sheet = { msScrollbarTrackColor: "black" };
        static BLANCHEDALMOND: Sheet = { msScrollbarTrackColor: "blanchedalmond" };
        static BLUE: Sheet = { msScrollbarTrackColor: "blue" };
        static BLUEVIOLET: Sheet = { msScrollbarTrackColor: "blueviolet" };
        static BROWN: Sheet = { msScrollbarTrackColor: "brown" };
        static BURLYWOOD: Sheet = { msScrollbarTrackColor: "burlywood" };
        static CADETBLUE: Sheet = { msScrollbarTrackColor: "cadetblue" };
        static CHARTREUSE: Sheet = { msScrollbarTrackColor: "chartreuse" };
        static CHOCOLATE: Sheet = { msScrollbarTrackColor: "chocolate" };
        static CORAL: Sheet = { msScrollbarTrackColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { msScrollbarTrackColor: "cornflowerblue" };
        static CORNSILK: Sheet = { msScrollbarTrackColor: "cornsilk" };
        static CRIMSON: Sheet = { msScrollbarTrackColor: "crimson" };
        static CYAN: Sheet = { msScrollbarTrackColor: "cyan" };
        static DARKBLUE: Sheet = { msScrollbarTrackColor: "darkblue" };
        static DARKCYAN: Sheet = { msScrollbarTrackColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { msScrollbarTrackColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { msScrollbarTrackColor: "darkgray" };
        static DARKGREEN: Sheet = { msScrollbarTrackColor: "darkgreen" };
        static DARKGREY: Sheet = { msScrollbarTrackColor: "darkgrey" };
        static DARKKHAKI: Sheet = { msScrollbarTrackColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { msScrollbarTrackColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { msScrollbarTrackColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { msScrollbarTrackColor: "darkorange" };
        static DARKORCHID: Sheet = { msScrollbarTrackColor: "darkorchid" };
        static DARKRED: Sheet = { msScrollbarTrackColor: "darkred" };
        static DARKSALMON: Sheet = { msScrollbarTrackColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { msScrollbarTrackColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { msScrollbarTrackColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { msScrollbarTrackColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { msScrollbarTrackColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { msScrollbarTrackColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { msScrollbarTrackColor: "darkviolet" };
        static DEEPPINK: Sheet = { msScrollbarTrackColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { msScrollbarTrackColor: "deepskyblue" };
        static DIMGRAY: Sheet = { msScrollbarTrackColor: "dimgray" };
        static DIMGREY: Sheet = { msScrollbarTrackColor: "dimgrey" };
        static DODGERBLUE: Sheet = { msScrollbarTrackColor: "dodgerblue" };
        static FIREBRICK: Sheet = { msScrollbarTrackColor: "firebrick" };
        static FLORALWHITE: Sheet = { msScrollbarTrackColor: "floralwhite" };
        static FORESTGREEN: Sheet = { msScrollbarTrackColor: "forestgreen" };
        static FUCHSIA: Sheet = { msScrollbarTrackColor: "fuchsia" };
        static GAINSBORO: Sheet = { msScrollbarTrackColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { msScrollbarTrackColor: "ghostwhite" };
        static GOLD: Sheet = { msScrollbarTrackColor: "gold" };
        static GOLDENROD: Sheet = { msScrollbarTrackColor: "goldenrod" };
        static GRAY: Sheet = { msScrollbarTrackColor: "gray" };
        static GREEN: Sheet = { msScrollbarTrackColor: "green" };
        static GREENYELLOW: Sheet = { msScrollbarTrackColor: "greenyellow" };
        static GREY: Sheet = { msScrollbarTrackColor: "grey" };
        static HONEYDEW: Sheet = { msScrollbarTrackColor: "honeydew" };
        static HOTPINK: Sheet = { msScrollbarTrackColor: "hotpink" };
        static INDIANRED: Sheet = { msScrollbarTrackColor: "indianred" };
        static INDIGO: Sheet = { msScrollbarTrackColor: "indigo" };
        static IVORY: Sheet = { msScrollbarTrackColor: "ivory" };
        static KHAKI: Sheet = { msScrollbarTrackColor: "khaki" };
        static LAVENDER: Sheet = { msScrollbarTrackColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { msScrollbarTrackColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { msScrollbarTrackColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { msScrollbarTrackColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { msScrollbarTrackColor: "lightblue" };
        static LIGHTCORAL: Sheet = { msScrollbarTrackColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { msScrollbarTrackColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { msScrollbarTrackColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { msScrollbarTrackColor: "lightgray" };
        static LIGHTGREEN: Sheet = { msScrollbarTrackColor: "lightgreen" };
        static LIGHTGREY: Sheet = { msScrollbarTrackColor: "lightgrey" };
        static LIGHTPINK: Sheet = { msScrollbarTrackColor: "lightpink" };
        static LIGHTSALMON: Sheet = { msScrollbarTrackColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { msScrollbarTrackColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { msScrollbarTrackColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { msScrollbarTrackColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { msScrollbarTrackColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { msScrollbarTrackColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { msScrollbarTrackColor: "lightyellow" };
        static LIME: Sheet = { msScrollbarTrackColor: "lime" };
        static LIMEGREEN: Sheet = { msScrollbarTrackColor: "limegreen" };
        static LINEN: Sheet = { msScrollbarTrackColor: "linen" };
        static MAGENTA: Sheet = { msScrollbarTrackColor: "magenta" };
        static MAROON: Sheet = { msScrollbarTrackColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { msScrollbarTrackColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { msScrollbarTrackColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { msScrollbarTrackColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { msScrollbarTrackColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { msScrollbarTrackColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { msScrollbarTrackColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { msScrollbarTrackColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { msScrollbarTrackColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { msScrollbarTrackColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { msScrollbarTrackColor: "midnightblue" };
        static MINTCREAM: Sheet = { msScrollbarTrackColor: "mintcream" };
        static MISTYROSE: Sheet = { msScrollbarTrackColor: "mistyrose" };
        static MOCCASIN: Sheet = { msScrollbarTrackColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { msScrollbarTrackColor: "navajowhite" };
        static NAVY: Sheet = { msScrollbarTrackColor: "navy" };
        static OLDLACE: Sheet = { msScrollbarTrackColor: "oldlace" };
        static OLIVE: Sheet = { msScrollbarTrackColor: "olive" };
        static OLIVEDRAB: Sheet = { msScrollbarTrackColor: "olivedrab" };
        static ORANGE: Sheet = { msScrollbarTrackColor: "orange" };
        static ORANGERED: Sheet = { msScrollbarTrackColor: "orangered" };
        static ORCHID: Sheet = { msScrollbarTrackColor: "orchid" };
        static PALEGOLDENROD: Sheet = { msScrollbarTrackColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { msScrollbarTrackColor: "palegreen" };
        static PALETURQUOISE: Sheet = { msScrollbarTrackColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { msScrollbarTrackColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { msScrollbarTrackColor: "papayawhip" };
        static PEACHPUFF: Sheet = { msScrollbarTrackColor: "peachpuff" };
        static PERU: Sheet = { msScrollbarTrackColor: "peru" };
        static PINK: Sheet = { msScrollbarTrackColor: "pink" };
        static PLUM: Sheet = { msScrollbarTrackColor: "plum" };
        static POWDERBLUE: Sheet = { msScrollbarTrackColor: "powderblue" };
        static PURPLE: Sheet = { msScrollbarTrackColor: "purple" };
        static REBECCAPURPLE: Sheet = { msScrollbarTrackColor: "rebeccapurple" };
        static RED: Sheet = { msScrollbarTrackColor: "red" };
        static ROSYBROWN: Sheet = { msScrollbarTrackColor: "rosybrown" };
        static ROYALBLUE: Sheet = { msScrollbarTrackColor: "royalblue" };
        static SADDLEBROWN: Sheet = { msScrollbarTrackColor: "saddlebrown" };
        static SALMON: Sheet = { msScrollbarTrackColor: "salmon" };
        static SANDYBROWN: Sheet = { msScrollbarTrackColor: "sandybrown" };
        static SEAGREEN: Sheet = { msScrollbarTrackColor: "seagreen" };
        static SEASHELL: Sheet = { msScrollbarTrackColor: "seashell" };
        static SIENNA: Sheet = { msScrollbarTrackColor: "sienna" };
        static SILVER: Sheet = { msScrollbarTrackColor: "silver" };
        static SKYBLUE: Sheet = { msScrollbarTrackColor: "skyblue" };
        static SLATEBLUE: Sheet = { msScrollbarTrackColor: "slateblue" };
        static SLATEGRAY: Sheet = { msScrollbarTrackColor: "slategray" };
        static SLATEGREY: Sheet = { msScrollbarTrackColor: "slategrey" };
        static SNOW: Sheet = { msScrollbarTrackColor: "snow" };
        static SPRINGGREEN: Sheet = { msScrollbarTrackColor: "springgreen" };
        static STEELBLUE: Sheet = { msScrollbarTrackColor: "steelblue" };
        static TAN: Sheet = { msScrollbarTrackColor: "tan" };
        static TEAL: Sheet = { msScrollbarTrackColor: "teal" };
        static THISTLE: Sheet = { msScrollbarTrackColor: "thistle" };
        static TOMATO: Sheet = { msScrollbarTrackColor: "tomato" };
        static TURQUOISE: Sheet = { msScrollbarTrackColor: "turquoise" };
        static VIOLET: Sheet = { msScrollbarTrackColor: "violet" };
        static WHEAT: Sheet = { msScrollbarTrackColor: "wheat" };
        static WHITE: Sheet = { msScrollbarTrackColor: "white" };
        static WHITESMOKE: Sheet = { msScrollbarTrackColor: "whitesmoke" };
        static YELLOW: Sheet = { msScrollbarTrackColor: "yellow" };
        static YELLOWGREEN: Sheet = { msScrollbarTrackColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { msScrollbarTrackColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { msScrollbarTrackColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { msScrollbarTrackColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { msScrollbarTrackColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { msScrollbarTrackColor: "Background" };
        static BUTTONFACE: Sheet = { msScrollbarTrackColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { msScrollbarTrackColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { msScrollbarTrackColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { msScrollbarTrackColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { msScrollbarTrackColor: "CaptionText" };
        static GRAYTEXT: Sheet = { msScrollbarTrackColor: "GrayText" };
        static HIGHLIGHT: Sheet = { msScrollbarTrackColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { msScrollbarTrackColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { msScrollbarTrackColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { msScrollbarTrackColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { msScrollbarTrackColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { msScrollbarTrackColor: "InfoBackground" };
        static INFOTEXT: Sheet = { msScrollbarTrackColor: "InfoText" };
        static MENU: Sheet = { msScrollbarTrackColor: "Menu" };
        static MENUTEXT: Sheet = { msScrollbarTrackColor: "MenuText" };
        static SCROLLBAR: Sheet = { msScrollbarTrackColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { msScrollbarTrackColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { msScrollbarTrackColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { msScrollbarTrackColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { msScrollbarTrackColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { msScrollbarTrackColor: "ThreeDShadow" };
        static WINDOW: Sheet = { msScrollbarTrackColor: "Window" };
        static WINDOWFRAME: Sheet = { msScrollbarTrackColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { msScrollbarTrackColor: "WindowText" };
    }
    export class MsScrollChaining {
        static set = (...params: Param[]): Sheet => ({ msScrollChaining: buildProperty(params) });
        static CHAINED: Sheet = { msScrollChaining: "chained" };
        static NONE: Sheet = { msScrollChaining: "none" };
    }
    export class MsScrollLimit {
        static set = (...params: Param[]): Sheet => ({ msScrollLimit: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ msScrollLimit: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msScrollLimit: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msScrollLimit: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msScrollLimit: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msScrollLimit: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msScrollLimit: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msScrollLimit: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msScrollLimit: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msScrollLimit: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msScrollLimit: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msScrollLimit: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msScrollLimit: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msScrollLimit: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msScrollLimit: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msScrollLimit: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msScrollLimit: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msScrollLimit: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msScrollLimit: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msScrollLimit: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msScrollLimit: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msScrollLimit: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msScrollLimit: Length.fr(...params) });
        static AUTO: Sheet = { msScrollLimit: "auto" };
    }
    export class MsScrollLimitXMax {
        static set = (...params: Param[]): Sheet => ({ msScrollLimitXMax: buildProperty(params) });
        static AUTO: Sheet = { msScrollLimitXMax: "auto" };
        static cap = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msScrollLimitXMax: Length.fr(...params) });
    }
    export class MsScrollLimitXMin {
        static set = (...params: Param[]): Sheet => ({ msScrollLimitXMin: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msScrollLimitXMin: Length.fr(...params) });
    }
    export class MsScrollLimitYMax {
        static set = (...params: Param[]): Sheet => ({ msScrollLimitYMax: buildProperty(params) });
        static AUTO: Sheet = { msScrollLimitYMax: "auto" };
        static cap = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msScrollLimitYMax: Length.fr(...params) });
    }
    export class MsScrollLimitYMin {
        static set = (...params: Param[]): Sheet => ({ msScrollLimitYMin: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msScrollLimitYMin: Length.fr(...params) });
    }
    export class MsScrollRails {
        static set = (...params: Param[]): Sheet => ({ msScrollRails: buildProperty(params) });
        static NONE: Sheet = { msScrollRails: "none" };
        static RAILED: Sheet = { msScrollRails: "railed" };
    }
    export class MsScrollSnapPointsX {
        static set = (...params: Param[]): Sheet => ({ msScrollSnapPointsX: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ msScrollSnapPointsX: Length.X(...params) });
    }
    export class MsScrollSnapPointsY {
        static set = (...params: Param[]): Sheet => ({ msScrollSnapPointsY: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ msScrollSnapPointsY: Length.X(...params) });
    }
    export class MsScrollSnapType {
        static set = (...params: Param[]): Sheet => ({ msScrollSnapType: buildProperty(params) });
        static NONE: Sheet = { msScrollSnapType: "none" };
        static PROXIMITY: Sheet = { msScrollSnapType: "proximity" };
        static MANDATORY: Sheet = { msScrollSnapType: "mandatory" };
    }
    export class MsScrollSnapX {
        static set = (...params: Param[]): Sheet => ({ msScrollSnapX: buildProperty(params) });
        static NONE: Sheet = { msScrollSnapX: "none" };
        static PROXIMITY: Sheet = { msScrollSnapX: "proximity" };
        static MANDATORY: Sheet = { msScrollSnapX: "mandatory" };
        static cap = (...params: number[]): Sheet => ({ msScrollSnapX: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msScrollSnapX: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msScrollSnapX: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msScrollSnapX: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msScrollSnapX: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msScrollSnapX: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msScrollSnapX: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msScrollSnapX: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msScrollSnapX: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msScrollSnapX: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msScrollSnapX: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msScrollSnapX: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msScrollSnapX: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msScrollSnapX: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msScrollSnapX: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msScrollSnapX: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msScrollSnapX: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msScrollSnapX: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msScrollSnapX: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msScrollSnapX: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msScrollSnapX: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msScrollSnapX: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ msScrollSnapX: Length.X(...params) });
    }
    export class MsScrollSnapY {
        static set = (...params: Param[]): Sheet => ({ msScrollSnapY: buildProperty(params) });
        static NONE: Sheet = { msScrollSnapY: "none" };
        static PROXIMITY: Sheet = { msScrollSnapY: "proximity" };
        static MANDATORY: Sheet = { msScrollSnapY: "mandatory" };
        static cap = (...params: number[]): Sheet => ({ msScrollSnapY: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msScrollSnapY: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msScrollSnapY: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msScrollSnapY: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msScrollSnapY: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msScrollSnapY: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msScrollSnapY: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msScrollSnapY: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msScrollSnapY: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msScrollSnapY: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msScrollSnapY: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msScrollSnapY: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msScrollSnapY: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msScrollSnapY: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msScrollSnapY: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msScrollSnapY: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msScrollSnapY: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msScrollSnapY: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msScrollSnapY: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msScrollSnapY: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msScrollSnapY: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msScrollSnapY: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ msScrollSnapY: Length.X(...params) });
    }
    export class MsScrollTranslation {
        static set = (...params: Param[]): Sheet => ({ msScrollTranslation: buildProperty(params) });
        static NONE: Sheet = { msScrollTranslation: "none" };
        static VERTICAL_TO_HORIZONTAL: Sheet = { msScrollTranslation: "vertical-to-horizontal" };
    }
    export class MsTextAutospace {
        static set = (...params: Param[]): Sheet => ({ msTextAutospace: buildProperty(params) });
        static NONE: Sheet = { msTextAutospace: "none" };
        static IDEOGRAPH_ALPHA: Sheet = { msTextAutospace: "ideograph-alpha" };
        static IDEOGRAPH_NUMERIC: Sheet = { msTextAutospace: "ideograph-numeric" };
        static IDEOGRAPH_PARENTHESIS: Sheet = { msTextAutospace: "ideograph-parenthesis" };
        static IDEOGRAPH_SPACE: Sheet = { msTextAutospace: "ideograph-space" };
    }
    export class MsTouchSelect {
        static set = (...params: Param[]): Sheet => ({ msTouchSelect: buildProperty(params) });
        static GRIPPERS: Sheet = { msTouchSelect: "grippers" };
        static NONE: Sheet = { msTouchSelect: "none" };
    }
    export class MsUserSelect {
        static set = (...params: Param[]): Sheet => ({ msUserSelect: buildProperty(params) });
        static NONE: Sheet = { msUserSelect: "none" };
        static ELEMENT: Sheet = { msUserSelect: "element" };
        static TEXT: Sheet = { msUserSelect: "text" };
    }
    export class MsWrapFlow {
        static set = (...params: Param[]): Sheet => ({ msWrapFlow: buildProperty(params) });
        static AUTO: Sheet = { msWrapFlow: "auto" };
        static BOTH: Sheet = { msWrapFlow: "both" };
        static START: Sheet = { msWrapFlow: "start" };
        static END: Sheet = { msWrapFlow: "end" };
        static MAXIMUM: Sheet = { msWrapFlow: "maximum" };
        static CLEAR: Sheet = { msWrapFlow: "clear" };
    }
    export class MsWrapMargin {
        static set = (...params: Param[]): Sheet => ({ msWrapMargin: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ msWrapMargin: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ msWrapMargin: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ msWrapMargin: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ msWrapMargin: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ msWrapMargin: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ msWrapMargin: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ msWrapMargin: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ msWrapMargin: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ msWrapMargin: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ msWrapMargin: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ msWrapMargin: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ msWrapMargin: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ msWrapMargin: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ msWrapMargin: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ msWrapMargin: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ msWrapMargin: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ msWrapMargin: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ msWrapMargin: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ msWrapMargin: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ msWrapMargin: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ msWrapMargin: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ msWrapMargin: Length.fr(...params) });
    }
    export class MsWrapThrough {
        static set = (...params: Param[]): Sheet => ({ msWrapThrough: buildProperty(params) });
        static WRAP: Sheet = { msWrapThrough: "wrap" };
        static NONE: Sheet = { msWrapThrough: "none" };
    }
    export class MozAppearance {
        static set = (...params: Param[]): Sheet => ({ mozAppearance: buildProperty(params) });
        static NONE: Sheet = { mozAppearance: "none" };
        static BUTTON: Sheet = { mozAppearance: "button" };
        static BUTTON_ARROW_DOWN: Sheet = { mozAppearance: "button-arrow-down" };
        static BUTTON_ARROW_NEXT: Sheet = { mozAppearance: "button-arrow-next" };
        static BUTTON_ARROW_PREVIOUS: Sheet = { mozAppearance: "button-arrow-previous" };
        static BUTTON_ARROW_UP: Sheet = { mozAppearance: "button-arrow-up" };
        static BUTTON_BEVEL: Sheet = { mozAppearance: "button-bevel" };
        static BUTTON_FOCUS: Sheet = { mozAppearance: "button-focus" };
        static CARET: Sheet = { mozAppearance: "caret" };
        static CHECKBOX: Sheet = { mozAppearance: "checkbox" };
        static CHECKBOX_CONTAINER: Sheet = { mozAppearance: "checkbox-container" };
        static CHECKBOX_LABEL: Sheet = { mozAppearance: "checkbox-label" };
        static CHECKMENUITEM: Sheet = { mozAppearance: "checkmenuitem" };
        static DUALBUTTON: Sheet = { mozAppearance: "dualbutton" };
        static GROUPBOX: Sheet = { mozAppearance: "groupbox" };
        static LISTBOX: Sheet = { mozAppearance: "listbox" };
        static LISTITEM: Sheet = { mozAppearance: "listitem" };
        static MENUARROW: Sheet = { mozAppearance: "menuarrow" };
        static MENUBAR: Sheet = { mozAppearance: "menubar" };
        static MENUCHECKBOX: Sheet = { mozAppearance: "menucheckbox" };
        static MENUIMAGE: Sheet = { mozAppearance: "menuimage" };
        static MENUITEM: Sheet = { mozAppearance: "menuitem" };
        static MENUITEMTEXT: Sheet = { mozAppearance: "menuitemtext" };
        static MENULIST: Sheet = { mozAppearance: "menulist" };
        static MENULIST_BUTTON: Sheet = { mozAppearance: "menulist-button" };
        static MENULIST_TEXT: Sheet = { mozAppearance: "menulist-text" };
        static MENULIST_TEXTFIELD: Sheet = { mozAppearance: "menulist-textfield" };
        static MENUPOPUP: Sheet = { mozAppearance: "menupopup" };
        static MENURADIO: Sheet = { mozAppearance: "menuradio" };
        static MENUSEPARATOR: Sheet = { mozAppearance: "menuseparator" };
        static METERBAR: Sheet = { mozAppearance: "meterbar" };
        static METERCHUNK: Sheet = { mozAppearance: "meterchunk" };
        static PROGRESSBAR: Sheet = { mozAppearance: "progressbar" };
        static PROGRESSBAR_VERTICAL: Sheet = { mozAppearance: "progressbar-vertical" };
        static PROGRESSCHUNK: Sheet = { mozAppearance: "progresschunk" };
        static PROGRESSCHUNK_VERTICAL: Sheet = { mozAppearance: "progresschunk-vertical" };
        static RADIO: Sheet = { mozAppearance: "radio" };
        static RADIO_CONTAINER: Sheet = { mozAppearance: "radio-container" };
        static RADIO_LABEL: Sheet = { mozAppearance: "radio-label" };
        static RADIOMENUITEM: Sheet = { mozAppearance: "radiomenuitem" };
        static RANGE: Sheet = { mozAppearance: "range" };
        static RANGE_THUMB: Sheet = { mozAppearance: "range-thumb" };
        static RESIZER: Sheet = { mozAppearance: "resizer" };
        static RESIZERPANEL: Sheet = { mozAppearance: "resizerpanel" };
        static SCALE_HORIZONTAL: Sheet = { mozAppearance: "scale-horizontal" };
        static SCALETHUMBEND: Sheet = { mozAppearance: "scalethumbend" };
        static SCALETHUMB_HORIZONTAL: Sheet = { mozAppearance: "scalethumb-horizontal" };
        static SCALETHUMBSTART: Sheet = { mozAppearance: "scalethumbstart" };
        static SCALETHUMBTICK: Sheet = { mozAppearance: "scalethumbtick" };
        static SCALETHUMB_VERTICAL: Sheet = { mozAppearance: "scalethumb-vertical" };
        static SCALE_VERTICAL: Sheet = { mozAppearance: "scale-vertical" };
        static SCROLLBARBUTTON_DOWN: Sheet = { mozAppearance: "scrollbarbutton-down" };
        static SCROLLBARBUTTON_LEFT: Sheet = { mozAppearance: "scrollbarbutton-left" };
        static SCROLLBARBUTTON_RIGHT: Sheet = { mozAppearance: "scrollbarbutton-right" };
        static SCROLLBARBUTTON_UP: Sheet = { mozAppearance: "scrollbarbutton-up" };
        static SCROLLBARTHUMB_HORIZONTAL: Sheet = { mozAppearance: "scrollbarthumb-horizontal" };
        static SCROLLBARTHUMB_VERTICAL: Sheet = { mozAppearance: "scrollbarthumb-vertical" };
        static SCROLLBARTRACK_HORIZONTAL: Sheet = { mozAppearance: "scrollbartrack-horizontal" };
        static SCROLLBARTRACK_VERTICAL: Sheet = { mozAppearance: "scrollbartrack-vertical" };
        static SEARCHFIELD: Sheet = { mozAppearance: "searchfield" };
        static SEPARATOR: Sheet = { mozAppearance: "separator" };
        static SHEET: Sheet = { mozAppearance: "sheet" };
        static SPINNER: Sheet = { mozAppearance: "spinner" };
        static SPINNER_DOWNBUTTON: Sheet = { mozAppearance: "spinner-downbutton" };
        static SPINNER_TEXTFIELD: Sheet = { mozAppearance: "spinner-textfield" };
        static SPINNER_UPBUTTON: Sheet = { mozAppearance: "spinner-upbutton" };
        static SPLITTER: Sheet = { mozAppearance: "splitter" };
        static STATUSBAR: Sheet = { mozAppearance: "statusbar" };
        static STATUSBARPANEL: Sheet = { mozAppearance: "statusbarpanel" };
        static TAB: Sheet = { mozAppearance: "tab" };
        static TABPANEL: Sheet = { mozAppearance: "tabpanel" };
        static TABPANELS: Sheet = { mozAppearance: "tabpanels" };
        static TAB_SCROLL_ARROW_BACK: Sheet = { mozAppearance: "tab-scroll-arrow-back" };
        static TAB_SCROLL_ARROW_FORWARD: Sheet = { mozAppearance: "tab-scroll-arrow-forward" };
        static TEXTFIELD: Sheet = { mozAppearance: "textfield" };
        static TEXTFIELD_MULTILINE: Sheet = { mozAppearance: "textfield-multiline" };
        static TOOLBAR: Sheet = { mozAppearance: "toolbar" };
        static TOOLBARBUTTON: Sheet = { mozAppearance: "toolbarbutton" };
        static TOOLBARBUTTON_DROPDOWN: Sheet = { mozAppearance: "toolbarbutton-dropdown" };
        static TOOLBARGRIPPER: Sheet = { mozAppearance: "toolbargripper" };
        static TOOLBOX: Sheet = { mozAppearance: "toolbox" };
        static TOOLTIP: Sheet = { mozAppearance: "tooltip" };
        static TREEHEADER: Sheet = { mozAppearance: "treeheader" };
        static TREEHEADERCELL: Sheet = { mozAppearance: "treeheadercell" };
        static TREEHEADERSORTARROW: Sheet = { mozAppearance: "treeheadersortarrow" };
        static TREEITEM: Sheet = { mozAppearance: "treeitem" };
        static TREELINE: Sheet = { mozAppearance: "treeline" };
        static TREETWISTY: Sheet = { mozAppearance: "treetwisty" };
        static TREETWISTYOPEN: Sheet = { mozAppearance: "treetwistyopen" };
        static TREEVIEW: Sheet = { mozAppearance: "treeview" };
        static MOZ_MAC_UNIFIED_TOOLBAR: Sheet = { mozAppearance: "-moz-mac-unified-toolbar" };
        static MOZ_WIN_BORDERLESS_GLASS: Sheet = { mozAppearance: "-moz-win-borderless-glass" };
        static MOZ_WIN_BROWSERTABBAR_TOOLBOX: Sheet = { mozAppearance: "-moz-win-browsertabbar-toolbox" };
        static MOZ_WIN_COMMUNICATIONSTEXT: Sheet = { mozAppearance: "-moz-win-communicationstext" };
        static MOZ_WIN_COMMUNICATIONS_TOOLBOX: Sheet = { mozAppearance: "-moz-win-communications-toolbox" };
        static MOZ_WIN_EXCLUDE_GLASS: Sheet = { mozAppearance: "-moz-win-exclude-glass" };
        static MOZ_WIN_GLASS: Sheet = { mozAppearance: "-moz-win-glass" };
        static MOZ_WIN_MEDIATEXT: Sheet = { mozAppearance: "-moz-win-mediatext" };
        static MOZ_WIN_MEDIA_TOOLBOX: Sheet = { mozAppearance: "-moz-win-media-toolbox" };
        static MOZ_WINDOW_BUTTON_BOX: Sheet = { mozAppearance: "-moz-window-button-box" };
        static MOZ_WINDOW_BUTTON_BOX_MAXIMIZED: Sheet = { mozAppearance: "-moz-window-button-box-maximized" };
        static MOZ_WINDOW_BUTTON_CLOSE: Sheet = { mozAppearance: "-moz-window-button-close" };
        static MOZ_WINDOW_BUTTON_MAXIMIZE: Sheet = { mozAppearance: "-moz-window-button-maximize" };
        static MOZ_WINDOW_BUTTON_MINIMIZE: Sheet = { mozAppearance: "-moz-window-button-minimize" };
        static MOZ_WINDOW_BUTTON_RESTORE: Sheet = { mozAppearance: "-moz-window-button-restore" };
        static MOZ_WINDOW_FRAME_BOTTOM: Sheet = { mozAppearance: "-moz-window-frame-bottom" };
        static MOZ_WINDOW_FRAME_LEFT: Sheet = { mozAppearance: "-moz-window-frame-left" };
        static MOZ_WINDOW_FRAME_RIGHT: Sheet = { mozAppearance: "-moz-window-frame-right" };
        static MOZ_WINDOW_TITLEBAR: Sheet = { mozAppearance: "-moz-window-titlebar" };
        static MOZ_WINDOW_TITLEBAR_MAXIMIZED: Sheet = { mozAppearance: "-moz-window-titlebar-maximized" };
    }
    export class MozBinding {
        static set = (...params: Param[]): Sheet => ({ mozBinding: buildProperty(params) });
        static NONE: Sheet = { mozBinding: "none" };
    }
    export class MozBorderBottomColors {
        static set = (...params: Param[]): Sheet => ({ mozBorderBottomColors: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ mozBorderBottomColors: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ mozBorderBottomColors: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ mozBorderBottomColors: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ mozBorderBottomColors: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ mozBorderBottomColors: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { mozBorderBottomColors: "transparent" };
        static ALICEBLUE: Sheet = { mozBorderBottomColors: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { mozBorderBottomColors: "antiquewhite" };
        static AQUA: Sheet = { mozBorderBottomColors: "aqua" };
        static AQUAMARINE: Sheet = { mozBorderBottomColors: "aquamarine" };
        static AZURE: Sheet = { mozBorderBottomColors: "azure" };
        static BEIGE: Sheet = { mozBorderBottomColors: "beige" };
        static BISQUE: Sheet = { mozBorderBottomColors: "bisque" };
        static BLACK: Sheet = { mozBorderBottomColors: "black" };
        static BLANCHEDALMOND: Sheet = { mozBorderBottomColors: "blanchedalmond" };
        static BLUE: Sheet = { mozBorderBottomColors: "blue" };
        static BLUEVIOLET: Sheet = { mozBorderBottomColors: "blueviolet" };
        static BROWN: Sheet = { mozBorderBottomColors: "brown" };
        static BURLYWOOD: Sheet = { mozBorderBottomColors: "burlywood" };
        static CADETBLUE: Sheet = { mozBorderBottomColors: "cadetblue" };
        static CHARTREUSE: Sheet = { mozBorderBottomColors: "chartreuse" };
        static CHOCOLATE: Sheet = { mozBorderBottomColors: "chocolate" };
        static CORAL: Sheet = { mozBorderBottomColors: "coral" };
        static CORNFLOWERBLUE: Sheet = { mozBorderBottomColors: "cornflowerblue" };
        static CORNSILK: Sheet = { mozBorderBottomColors: "cornsilk" };
        static CRIMSON: Sheet = { mozBorderBottomColors: "crimson" };
        static CYAN: Sheet = { mozBorderBottomColors: "cyan" };
        static DARKBLUE: Sheet = { mozBorderBottomColors: "darkblue" };
        static DARKCYAN: Sheet = { mozBorderBottomColors: "darkcyan" };
        static DARKGOLDENROD: Sheet = { mozBorderBottomColors: "darkgoldenrod" };
        static DARKGRAY: Sheet = { mozBorderBottomColors: "darkgray" };
        static DARKGREEN: Sheet = { mozBorderBottomColors: "darkgreen" };
        static DARKGREY: Sheet = { mozBorderBottomColors: "darkgrey" };
        static DARKKHAKI: Sheet = { mozBorderBottomColors: "darkkhaki" };
        static DARKMAGENTA: Sheet = { mozBorderBottomColors: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { mozBorderBottomColors: "darkolivegreen" };
        static DARKORANGE: Sheet = { mozBorderBottomColors: "darkorange" };
        static DARKORCHID: Sheet = { mozBorderBottomColors: "darkorchid" };
        static DARKRED: Sheet = { mozBorderBottomColors: "darkred" };
        static DARKSALMON: Sheet = { mozBorderBottomColors: "darksalmon" };
        static DARKSEAGREEN: Sheet = { mozBorderBottomColors: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { mozBorderBottomColors: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { mozBorderBottomColors: "darkslategray" };
        static DARKSLATEGREY: Sheet = { mozBorderBottomColors: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { mozBorderBottomColors: "darkturquoise" };
        static DARKVIOLET: Sheet = { mozBorderBottomColors: "darkviolet" };
        static DEEPPINK: Sheet = { mozBorderBottomColors: "deeppink" };
        static DEEPSKYBLUE: Sheet = { mozBorderBottomColors: "deepskyblue" };
        static DIMGRAY: Sheet = { mozBorderBottomColors: "dimgray" };
        static DIMGREY: Sheet = { mozBorderBottomColors: "dimgrey" };
        static DODGERBLUE: Sheet = { mozBorderBottomColors: "dodgerblue" };
        static FIREBRICK: Sheet = { mozBorderBottomColors: "firebrick" };
        static FLORALWHITE: Sheet = { mozBorderBottomColors: "floralwhite" };
        static FORESTGREEN: Sheet = { mozBorderBottomColors: "forestgreen" };
        static FUCHSIA: Sheet = { mozBorderBottomColors: "fuchsia" };
        static GAINSBORO: Sheet = { mozBorderBottomColors: "gainsboro" };
        static GHOSTWHITE: Sheet = { mozBorderBottomColors: "ghostwhite" };
        static GOLD: Sheet = { mozBorderBottomColors: "gold" };
        static GOLDENROD: Sheet = { mozBorderBottomColors: "goldenrod" };
        static GRAY: Sheet = { mozBorderBottomColors: "gray" };
        static GREEN: Sheet = { mozBorderBottomColors: "green" };
        static GREENYELLOW: Sheet = { mozBorderBottomColors: "greenyellow" };
        static GREY: Sheet = { mozBorderBottomColors: "grey" };
        static HONEYDEW: Sheet = { mozBorderBottomColors: "honeydew" };
        static HOTPINK: Sheet = { mozBorderBottomColors: "hotpink" };
        static INDIANRED: Sheet = { mozBorderBottomColors: "indianred" };
        static INDIGO: Sheet = { mozBorderBottomColors: "indigo" };
        static IVORY: Sheet = { mozBorderBottomColors: "ivory" };
        static KHAKI: Sheet = { mozBorderBottomColors: "khaki" };
        static LAVENDER: Sheet = { mozBorderBottomColors: "lavender" };
        static LAVENDERBLUSH: Sheet = { mozBorderBottomColors: "lavenderblush" };
        static LAWNGREEN: Sheet = { mozBorderBottomColors: "lawngreen" };
        static LEMONCHIFFON: Sheet = { mozBorderBottomColors: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { mozBorderBottomColors: "lightblue" };
        static LIGHTCORAL: Sheet = { mozBorderBottomColors: "lightcoral" };
        static LIGHTCYAN: Sheet = { mozBorderBottomColors: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { mozBorderBottomColors: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { mozBorderBottomColors: "lightgray" };
        static LIGHTGREEN: Sheet = { mozBorderBottomColors: "lightgreen" };
        static LIGHTGREY: Sheet = { mozBorderBottomColors: "lightgrey" };
        static LIGHTPINK: Sheet = { mozBorderBottomColors: "lightpink" };
        static LIGHTSALMON: Sheet = { mozBorderBottomColors: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { mozBorderBottomColors: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { mozBorderBottomColors: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { mozBorderBottomColors: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { mozBorderBottomColors: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { mozBorderBottomColors: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { mozBorderBottomColors: "lightyellow" };
        static LIME: Sheet = { mozBorderBottomColors: "lime" };
        static LIMEGREEN: Sheet = { mozBorderBottomColors: "limegreen" };
        static LINEN: Sheet = { mozBorderBottomColors: "linen" };
        static MAGENTA: Sheet = { mozBorderBottomColors: "magenta" };
        static MAROON: Sheet = { mozBorderBottomColors: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { mozBorderBottomColors: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { mozBorderBottomColors: "mediumblue" };
        static MEDIUMORCHID: Sheet = { mozBorderBottomColors: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { mozBorderBottomColors: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { mozBorderBottomColors: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { mozBorderBottomColors: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { mozBorderBottomColors: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { mozBorderBottomColors: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { mozBorderBottomColors: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { mozBorderBottomColors: "midnightblue" };
        static MINTCREAM: Sheet = { mozBorderBottomColors: "mintcream" };
        static MISTYROSE: Sheet = { mozBorderBottomColors: "mistyrose" };
        static MOCCASIN: Sheet = { mozBorderBottomColors: "moccasin" };
        static NAVAJOWHITE: Sheet = { mozBorderBottomColors: "navajowhite" };
        static NAVY: Sheet = { mozBorderBottomColors: "navy" };
        static OLDLACE: Sheet = { mozBorderBottomColors: "oldlace" };
        static OLIVE: Sheet = { mozBorderBottomColors: "olive" };
        static OLIVEDRAB: Sheet = { mozBorderBottomColors: "olivedrab" };
        static ORANGE: Sheet = { mozBorderBottomColors: "orange" };
        static ORANGERED: Sheet = { mozBorderBottomColors: "orangered" };
        static ORCHID: Sheet = { mozBorderBottomColors: "orchid" };
        static PALEGOLDENROD: Sheet = { mozBorderBottomColors: "palegoldenrod" };
        static PALEGREEN: Sheet = { mozBorderBottomColors: "palegreen" };
        static PALETURQUOISE: Sheet = { mozBorderBottomColors: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { mozBorderBottomColors: "palevioletred" };
        static PAPAYAWHIP: Sheet = { mozBorderBottomColors: "papayawhip" };
        static PEACHPUFF: Sheet = { mozBorderBottomColors: "peachpuff" };
        static PERU: Sheet = { mozBorderBottomColors: "peru" };
        static PINK: Sheet = { mozBorderBottomColors: "pink" };
        static PLUM: Sheet = { mozBorderBottomColors: "plum" };
        static POWDERBLUE: Sheet = { mozBorderBottomColors: "powderblue" };
        static PURPLE: Sheet = { mozBorderBottomColors: "purple" };
        static REBECCAPURPLE: Sheet = { mozBorderBottomColors: "rebeccapurple" };
        static RED: Sheet = { mozBorderBottomColors: "red" };
        static ROSYBROWN: Sheet = { mozBorderBottomColors: "rosybrown" };
        static ROYALBLUE: Sheet = { mozBorderBottomColors: "royalblue" };
        static SADDLEBROWN: Sheet = { mozBorderBottomColors: "saddlebrown" };
        static SALMON: Sheet = { mozBorderBottomColors: "salmon" };
        static SANDYBROWN: Sheet = { mozBorderBottomColors: "sandybrown" };
        static SEAGREEN: Sheet = { mozBorderBottomColors: "seagreen" };
        static SEASHELL: Sheet = { mozBorderBottomColors: "seashell" };
        static SIENNA: Sheet = { mozBorderBottomColors: "sienna" };
        static SILVER: Sheet = { mozBorderBottomColors: "silver" };
        static SKYBLUE: Sheet = { mozBorderBottomColors: "skyblue" };
        static SLATEBLUE: Sheet = { mozBorderBottomColors: "slateblue" };
        static SLATEGRAY: Sheet = { mozBorderBottomColors: "slategray" };
        static SLATEGREY: Sheet = { mozBorderBottomColors: "slategrey" };
        static SNOW: Sheet = { mozBorderBottomColors: "snow" };
        static SPRINGGREEN: Sheet = { mozBorderBottomColors: "springgreen" };
        static STEELBLUE: Sheet = { mozBorderBottomColors: "steelblue" };
        static TAN: Sheet = { mozBorderBottomColors: "tan" };
        static TEAL: Sheet = { mozBorderBottomColors: "teal" };
        static THISTLE: Sheet = { mozBorderBottomColors: "thistle" };
        static TOMATO: Sheet = { mozBorderBottomColors: "tomato" };
        static TURQUOISE: Sheet = { mozBorderBottomColors: "turquoise" };
        static VIOLET: Sheet = { mozBorderBottomColors: "violet" };
        static WHEAT: Sheet = { mozBorderBottomColors: "wheat" };
        static WHITE: Sheet = { mozBorderBottomColors: "white" };
        static WHITESMOKE: Sheet = { mozBorderBottomColors: "whitesmoke" };
        static YELLOW: Sheet = { mozBorderBottomColors: "yellow" };
        static YELLOWGREEN: Sheet = { mozBorderBottomColors: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { mozBorderBottomColors: "currentcolor" };
        static ACTIVEBORDER: Sheet = { mozBorderBottomColors: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { mozBorderBottomColors: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { mozBorderBottomColors: "AppWorkspace" };
        static BACKGROUND: Sheet = { mozBorderBottomColors: "Background" };
        static BUTTONFACE: Sheet = { mozBorderBottomColors: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { mozBorderBottomColors: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { mozBorderBottomColors: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { mozBorderBottomColors: "ButtonText" };
        static CAPTIONTEXT: Sheet = { mozBorderBottomColors: "CaptionText" };
        static GRAYTEXT: Sheet = { mozBorderBottomColors: "GrayText" };
        static HIGHLIGHT: Sheet = { mozBorderBottomColors: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { mozBorderBottomColors: "HighlightText" };
        static INACTIVEBORDER: Sheet = { mozBorderBottomColors: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { mozBorderBottomColors: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { mozBorderBottomColors: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { mozBorderBottomColors: "InfoBackground" };
        static INFOTEXT: Sheet = { mozBorderBottomColors: "InfoText" };
        static MENU: Sheet = { mozBorderBottomColors: "Menu" };
        static MENUTEXT: Sheet = { mozBorderBottomColors: "MenuText" };
        static SCROLLBAR: Sheet = { mozBorderBottomColors: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { mozBorderBottomColors: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { mozBorderBottomColors: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { mozBorderBottomColors: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { mozBorderBottomColors: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { mozBorderBottomColors: "ThreeDShadow" };
        static WINDOW: Sheet = { mozBorderBottomColors: "Window" };
        static WINDOWFRAME: Sheet = { mozBorderBottomColors: "WindowFrame" };
        static WINDOWTEXT: Sheet = { mozBorderBottomColors: "WindowText" };
        static NONE: Sheet = { mozBorderBottomColors: "none" };
    }
    export class MozBorderLeftColors {
        static set = (...params: Param[]): Sheet => ({ mozBorderLeftColors: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ mozBorderLeftColors: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ mozBorderLeftColors: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ mozBorderLeftColors: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ mozBorderLeftColors: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ mozBorderLeftColors: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { mozBorderLeftColors: "transparent" };
        static ALICEBLUE: Sheet = { mozBorderLeftColors: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { mozBorderLeftColors: "antiquewhite" };
        static AQUA: Sheet = { mozBorderLeftColors: "aqua" };
        static AQUAMARINE: Sheet = { mozBorderLeftColors: "aquamarine" };
        static AZURE: Sheet = { mozBorderLeftColors: "azure" };
        static BEIGE: Sheet = { mozBorderLeftColors: "beige" };
        static BISQUE: Sheet = { mozBorderLeftColors: "bisque" };
        static BLACK: Sheet = { mozBorderLeftColors: "black" };
        static BLANCHEDALMOND: Sheet = { mozBorderLeftColors: "blanchedalmond" };
        static BLUE: Sheet = { mozBorderLeftColors: "blue" };
        static BLUEVIOLET: Sheet = { mozBorderLeftColors: "blueviolet" };
        static BROWN: Sheet = { mozBorderLeftColors: "brown" };
        static BURLYWOOD: Sheet = { mozBorderLeftColors: "burlywood" };
        static CADETBLUE: Sheet = { mozBorderLeftColors: "cadetblue" };
        static CHARTREUSE: Sheet = { mozBorderLeftColors: "chartreuse" };
        static CHOCOLATE: Sheet = { mozBorderLeftColors: "chocolate" };
        static CORAL: Sheet = { mozBorderLeftColors: "coral" };
        static CORNFLOWERBLUE: Sheet = { mozBorderLeftColors: "cornflowerblue" };
        static CORNSILK: Sheet = { mozBorderLeftColors: "cornsilk" };
        static CRIMSON: Sheet = { mozBorderLeftColors: "crimson" };
        static CYAN: Sheet = { mozBorderLeftColors: "cyan" };
        static DARKBLUE: Sheet = { mozBorderLeftColors: "darkblue" };
        static DARKCYAN: Sheet = { mozBorderLeftColors: "darkcyan" };
        static DARKGOLDENROD: Sheet = { mozBorderLeftColors: "darkgoldenrod" };
        static DARKGRAY: Sheet = { mozBorderLeftColors: "darkgray" };
        static DARKGREEN: Sheet = { mozBorderLeftColors: "darkgreen" };
        static DARKGREY: Sheet = { mozBorderLeftColors: "darkgrey" };
        static DARKKHAKI: Sheet = { mozBorderLeftColors: "darkkhaki" };
        static DARKMAGENTA: Sheet = { mozBorderLeftColors: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { mozBorderLeftColors: "darkolivegreen" };
        static DARKORANGE: Sheet = { mozBorderLeftColors: "darkorange" };
        static DARKORCHID: Sheet = { mozBorderLeftColors: "darkorchid" };
        static DARKRED: Sheet = { mozBorderLeftColors: "darkred" };
        static DARKSALMON: Sheet = { mozBorderLeftColors: "darksalmon" };
        static DARKSEAGREEN: Sheet = { mozBorderLeftColors: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { mozBorderLeftColors: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { mozBorderLeftColors: "darkslategray" };
        static DARKSLATEGREY: Sheet = { mozBorderLeftColors: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { mozBorderLeftColors: "darkturquoise" };
        static DARKVIOLET: Sheet = { mozBorderLeftColors: "darkviolet" };
        static DEEPPINK: Sheet = { mozBorderLeftColors: "deeppink" };
        static DEEPSKYBLUE: Sheet = { mozBorderLeftColors: "deepskyblue" };
        static DIMGRAY: Sheet = { mozBorderLeftColors: "dimgray" };
        static DIMGREY: Sheet = { mozBorderLeftColors: "dimgrey" };
        static DODGERBLUE: Sheet = { mozBorderLeftColors: "dodgerblue" };
        static FIREBRICK: Sheet = { mozBorderLeftColors: "firebrick" };
        static FLORALWHITE: Sheet = { mozBorderLeftColors: "floralwhite" };
        static FORESTGREEN: Sheet = { mozBorderLeftColors: "forestgreen" };
        static FUCHSIA: Sheet = { mozBorderLeftColors: "fuchsia" };
        static GAINSBORO: Sheet = { mozBorderLeftColors: "gainsboro" };
        static GHOSTWHITE: Sheet = { mozBorderLeftColors: "ghostwhite" };
        static GOLD: Sheet = { mozBorderLeftColors: "gold" };
        static GOLDENROD: Sheet = { mozBorderLeftColors: "goldenrod" };
        static GRAY: Sheet = { mozBorderLeftColors: "gray" };
        static GREEN: Sheet = { mozBorderLeftColors: "green" };
        static GREENYELLOW: Sheet = { mozBorderLeftColors: "greenyellow" };
        static GREY: Sheet = { mozBorderLeftColors: "grey" };
        static HONEYDEW: Sheet = { mozBorderLeftColors: "honeydew" };
        static HOTPINK: Sheet = { mozBorderLeftColors: "hotpink" };
        static INDIANRED: Sheet = { mozBorderLeftColors: "indianred" };
        static INDIGO: Sheet = { mozBorderLeftColors: "indigo" };
        static IVORY: Sheet = { mozBorderLeftColors: "ivory" };
        static KHAKI: Sheet = { mozBorderLeftColors: "khaki" };
        static LAVENDER: Sheet = { mozBorderLeftColors: "lavender" };
        static LAVENDERBLUSH: Sheet = { mozBorderLeftColors: "lavenderblush" };
        static LAWNGREEN: Sheet = { mozBorderLeftColors: "lawngreen" };
        static LEMONCHIFFON: Sheet = { mozBorderLeftColors: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { mozBorderLeftColors: "lightblue" };
        static LIGHTCORAL: Sheet = { mozBorderLeftColors: "lightcoral" };
        static LIGHTCYAN: Sheet = { mozBorderLeftColors: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { mozBorderLeftColors: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { mozBorderLeftColors: "lightgray" };
        static LIGHTGREEN: Sheet = { mozBorderLeftColors: "lightgreen" };
        static LIGHTGREY: Sheet = { mozBorderLeftColors: "lightgrey" };
        static LIGHTPINK: Sheet = { mozBorderLeftColors: "lightpink" };
        static LIGHTSALMON: Sheet = { mozBorderLeftColors: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { mozBorderLeftColors: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { mozBorderLeftColors: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { mozBorderLeftColors: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { mozBorderLeftColors: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { mozBorderLeftColors: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { mozBorderLeftColors: "lightyellow" };
        static LIME: Sheet = { mozBorderLeftColors: "lime" };
        static LIMEGREEN: Sheet = { mozBorderLeftColors: "limegreen" };
        static LINEN: Sheet = { mozBorderLeftColors: "linen" };
        static MAGENTA: Sheet = { mozBorderLeftColors: "magenta" };
        static MAROON: Sheet = { mozBorderLeftColors: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { mozBorderLeftColors: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { mozBorderLeftColors: "mediumblue" };
        static MEDIUMORCHID: Sheet = { mozBorderLeftColors: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { mozBorderLeftColors: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { mozBorderLeftColors: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { mozBorderLeftColors: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { mozBorderLeftColors: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { mozBorderLeftColors: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { mozBorderLeftColors: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { mozBorderLeftColors: "midnightblue" };
        static MINTCREAM: Sheet = { mozBorderLeftColors: "mintcream" };
        static MISTYROSE: Sheet = { mozBorderLeftColors: "mistyrose" };
        static MOCCASIN: Sheet = { mozBorderLeftColors: "moccasin" };
        static NAVAJOWHITE: Sheet = { mozBorderLeftColors: "navajowhite" };
        static NAVY: Sheet = { mozBorderLeftColors: "navy" };
        static OLDLACE: Sheet = { mozBorderLeftColors: "oldlace" };
        static OLIVE: Sheet = { mozBorderLeftColors: "olive" };
        static OLIVEDRAB: Sheet = { mozBorderLeftColors: "olivedrab" };
        static ORANGE: Sheet = { mozBorderLeftColors: "orange" };
        static ORANGERED: Sheet = { mozBorderLeftColors: "orangered" };
        static ORCHID: Sheet = { mozBorderLeftColors: "orchid" };
        static PALEGOLDENROD: Sheet = { mozBorderLeftColors: "palegoldenrod" };
        static PALEGREEN: Sheet = { mozBorderLeftColors: "palegreen" };
        static PALETURQUOISE: Sheet = { mozBorderLeftColors: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { mozBorderLeftColors: "palevioletred" };
        static PAPAYAWHIP: Sheet = { mozBorderLeftColors: "papayawhip" };
        static PEACHPUFF: Sheet = { mozBorderLeftColors: "peachpuff" };
        static PERU: Sheet = { mozBorderLeftColors: "peru" };
        static PINK: Sheet = { mozBorderLeftColors: "pink" };
        static PLUM: Sheet = { mozBorderLeftColors: "plum" };
        static POWDERBLUE: Sheet = { mozBorderLeftColors: "powderblue" };
        static PURPLE: Sheet = { mozBorderLeftColors: "purple" };
        static REBECCAPURPLE: Sheet = { mozBorderLeftColors: "rebeccapurple" };
        static RED: Sheet = { mozBorderLeftColors: "red" };
        static ROSYBROWN: Sheet = { mozBorderLeftColors: "rosybrown" };
        static ROYALBLUE: Sheet = { mozBorderLeftColors: "royalblue" };
        static SADDLEBROWN: Sheet = { mozBorderLeftColors: "saddlebrown" };
        static SALMON: Sheet = { mozBorderLeftColors: "salmon" };
        static SANDYBROWN: Sheet = { mozBorderLeftColors: "sandybrown" };
        static SEAGREEN: Sheet = { mozBorderLeftColors: "seagreen" };
        static SEASHELL: Sheet = { mozBorderLeftColors: "seashell" };
        static SIENNA: Sheet = { mozBorderLeftColors: "sienna" };
        static SILVER: Sheet = { mozBorderLeftColors: "silver" };
        static SKYBLUE: Sheet = { mozBorderLeftColors: "skyblue" };
        static SLATEBLUE: Sheet = { mozBorderLeftColors: "slateblue" };
        static SLATEGRAY: Sheet = { mozBorderLeftColors: "slategray" };
        static SLATEGREY: Sheet = { mozBorderLeftColors: "slategrey" };
        static SNOW: Sheet = { mozBorderLeftColors: "snow" };
        static SPRINGGREEN: Sheet = { mozBorderLeftColors: "springgreen" };
        static STEELBLUE: Sheet = { mozBorderLeftColors: "steelblue" };
        static TAN: Sheet = { mozBorderLeftColors: "tan" };
        static TEAL: Sheet = { mozBorderLeftColors: "teal" };
        static THISTLE: Sheet = { mozBorderLeftColors: "thistle" };
        static TOMATO: Sheet = { mozBorderLeftColors: "tomato" };
        static TURQUOISE: Sheet = { mozBorderLeftColors: "turquoise" };
        static VIOLET: Sheet = { mozBorderLeftColors: "violet" };
        static WHEAT: Sheet = { mozBorderLeftColors: "wheat" };
        static WHITE: Sheet = { mozBorderLeftColors: "white" };
        static WHITESMOKE: Sheet = { mozBorderLeftColors: "whitesmoke" };
        static YELLOW: Sheet = { mozBorderLeftColors: "yellow" };
        static YELLOWGREEN: Sheet = { mozBorderLeftColors: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { mozBorderLeftColors: "currentcolor" };
        static ACTIVEBORDER: Sheet = { mozBorderLeftColors: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { mozBorderLeftColors: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { mozBorderLeftColors: "AppWorkspace" };
        static BACKGROUND: Sheet = { mozBorderLeftColors: "Background" };
        static BUTTONFACE: Sheet = { mozBorderLeftColors: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { mozBorderLeftColors: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { mozBorderLeftColors: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { mozBorderLeftColors: "ButtonText" };
        static CAPTIONTEXT: Sheet = { mozBorderLeftColors: "CaptionText" };
        static GRAYTEXT: Sheet = { mozBorderLeftColors: "GrayText" };
        static HIGHLIGHT: Sheet = { mozBorderLeftColors: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { mozBorderLeftColors: "HighlightText" };
        static INACTIVEBORDER: Sheet = { mozBorderLeftColors: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { mozBorderLeftColors: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { mozBorderLeftColors: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { mozBorderLeftColors: "InfoBackground" };
        static INFOTEXT: Sheet = { mozBorderLeftColors: "InfoText" };
        static MENU: Sheet = { mozBorderLeftColors: "Menu" };
        static MENUTEXT: Sheet = { mozBorderLeftColors: "MenuText" };
        static SCROLLBAR: Sheet = { mozBorderLeftColors: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { mozBorderLeftColors: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { mozBorderLeftColors: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { mozBorderLeftColors: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { mozBorderLeftColors: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { mozBorderLeftColors: "ThreeDShadow" };
        static WINDOW: Sheet = { mozBorderLeftColors: "Window" };
        static WINDOWFRAME: Sheet = { mozBorderLeftColors: "WindowFrame" };
        static WINDOWTEXT: Sheet = { mozBorderLeftColors: "WindowText" };
        static NONE: Sheet = { mozBorderLeftColors: "none" };
    }
    export class MozBorderRightColors {
        static set = (...params: Param[]): Sheet => ({ mozBorderRightColors: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ mozBorderRightColors: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ mozBorderRightColors: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ mozBorderRightColors: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ mozBorderRightColors: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ mozBorderRightColors: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { mozBorderRightColors: "transparent" };
        static ALICEBLUE: Sheet = { mozBorderRightColors: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { mozBorderRightColors: "antiquewhite" };
        static AQUA: Sheet = { mozBorderRightColors: "aqua" };
        static AQUAMARINE: Sheet = { mozBorderRightColors: "aquamarine" };
        static AZURE: Sheet = { mozBorderRightColors: "azure" };
        static BEIGE: Sheet = { mozBorderRightColors: "beige" };
        static BISQUE: Sheet = { mozBorderRightColors: "bisque" };
        static BLACK: Sheet = { mozBorderRightColors: "black" };
        static BLANCHEDALMOND: Sheet = { mozBorderRightColors: "blanchedalmond" };
        static BLUE: Sheet = { mozBorderRightColors: "blue" };
        static BLUEVIOLET: Sheet = { mozBorderRightColors: "blueviolet" };
        static BROWN: Sheet = { mozBorderRightColors: "brown" };
        static BURLYWOOD: Sheet = { mozBorderRightColors: "burlywood" };
        static CADETBLUE: Sheet = { mozBorderRightColors: "cadetblue" };
        static CHARTREUSE: Sheet = { mozBorderRightColors: "chartreuse" };
        static CHOCOLATE: Sheet = { mozBorderRightColors: "chocolate" };
        static CORAL: Sheet = { mozBorderRightColors: "coral" };
        static CORNFLOWERBLUE: Sheet = { mozBorderRightColors: "cornflowerblue" };
        static CORNSILK: Sheet = { mozBorderRightColors: "cornsilk" };
        static CRIMSON: Sheet = { mozBorderRightColors: "crimson" };
        static CYAN: Sheet = { mozBorderRightColors: "cyan" };
        static DARKBLUE: Sheet = { mozBorderRightColors: "darkblue" };
        static DARKCYAN: Sheet = { mozBorderRightColors: "darkcyan" };
        static DARKGOLDENROD: Sheet = { mozBorderRightColors: "darkgoldenrod" };
        static DARKGRAY: Sheet = { mozBorderRightColors: "darkgray" };
        static DARKGREEN: Sheet = { mozBorderRightColors: "darkgreen" };
        static DARKGREY: Sheet = { mozBorderRightColors: "darkgrey" };
        static DARKKHAKI: Sheet = { mozBorderRightColors: "darkkhaki" };
        static DARKMAGENTA: Sheet = { mozBorderRightColors: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { mozBorderRightColors: "darkolivegreen" };
        static DARKORANGE: Sheet = { mozBorderRightColors: "darkorange" };
        static DARKORCHID: Sheet = { mozBorderRightColors: "darkorchid" };
        static DARKRED: Sheet = { mozBorderRightColors: "darkred" };
        static DARKSALMON: Sheet = { mozBorderRightColors: "darksalmon" };
        static DARKSEAGREEN: Sheet = { mozBorderRightColors: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { mozBorderRightColors: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { mozBorderRightColors: "darkslategray" };
        static DARKSLATEGREY: Sheet = { mozBorderRightColors: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { mozBorderRightColors: "darkturquoise" };
        static DARKVIOLET: Sheet = { mozBorderRightColors: "darkviolet" };
        static DEEPPINK: Sheet = { mozBorderRightColors: "deeppink" };
        static DEEPSKYBLUE: Sheet = { mozBorderRightColors: "deepskyblue" };
        static DIMGRAY: Sheet = { mozBorderRightColors: "dimgray" };
        static DIMGREY: Sheet = { mozBorderRightColors: "dimgrey" };
        static DODGERBLUE: Sheet = { mozBorderRightColors: "dodgerblue" };
        static FIREBRICK: Sheet = { mozBorderRightColors: "firebrick" };
        static FLORALWHITE: Sheet = { mozBorderRightColors: "floralwhite" };
        static FORESTGREEN: Sheet = { mozBorderRightColors: "forestgreen" };
        static FUCHSIA: Sheet = { mozBorderRightColors: "fuchsia" };
        static GAINSBORO: Sheet = { mozBorderRightColors: "gainsboro" };
        static GHOSTWHITE: Sheet = { mozBorderRightColors: "ghostwhite" };
        static GOLD: Sheet = { mozBorderRightColors: "gold" };
        static GOLDENROD: Sheet = { mozBorderRightColors: "goldenrod" };
        static GRAY: Sheet = { mozBorderRightColors: "gray" };
        static GREEN: Sheet = { mozBorderRightColors: "green" };
        static GREENYELLOW: Sheet = { mozBorderRightColors: "greenyellow" };
        static GREY: Sheet = { mozBorderRightColors: "grey" };
        static HONEYDEW: Sheet = { mozBorderRightColors: "honeydew" };
        static HOTPINK: Sheet = { mozBorderRightColors: "hotpink" };
        static INDIANRED: Sheet = { mozBorderRightColors: "indianred" };
        static INDIGO: Sheet = { mozBorderRightColors: "indigo" };
        static IVORY: Sheet = { mozBorderRightColors: "ivory" };
        static KHAKI: Sheet = { mozBorderRightColors: "khaki" };
        static LAVENDER: Sheet = { mozBorderRightColors: "lavender" };
        static LAVENDERBLUSH: Sheet = { mozBorderRightColors: "lavenderblush" };
        static LAWNGREEN: Sheet = { mozBorderRightColors: "lawngreen" };
        static LEMONCHIFFON: Sheet = { mozBorderRightColors: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { mozBorderRightColors: "lightblue" };
        static LIGHTCORAL: Sheet = { mozBorderRightColors: "lightcoral" };
        static LIGHTCYAN: Sheet = { mozBorderRightColors: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { mozBorderRightColors: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { mozBorderRightColors: "lightgray" };
        static LIGHTGREEN: Sheet = { mozBorderRightColors: "lightgreen" };
        static LIGHTGREY: Sheet = { mozBorderRightColors: "lightgrey" };
        static LIGHTPINK: Sheet = { mozBorderRightColors: "lightpink" };
        static LIGHTSALMON: Sheet = { mozBorderRightColors: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { mozBorderRightColors: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { mozBorderRightColors: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { mozBorderRightColors: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { mozBorderRightColors: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { mozBorderRightColors: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { mozBorderRightColors: "lightyellow" };
        static LIME: Sheet = { mozBorderRightColors: "lime" };
        static LIMEGREEN: Sheet = { mozBorderRightColors: "limegreen" };
        static LINEN: Sheet = { mozBorderRightColors: "linen" };
        static MAGENTA: Sheet = { mozBorderRightColors: "magenta" };
        static MAROON: Sheet = { mozBorderRightColors: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { mozBorderRightColors: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { mozBorderRightColors: "mediumblue" };
        static MEDIUMORCHID: Sheet = { mozBorderRightColors: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { mozBorderRightColors: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { mozBorderRightColors: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { mozBorderRightColors: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { mozBorderRightColors: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { mozBorderRightColors: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { mozBorderRightColors: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { mozBorderRightColors: "midnightblue" };
        static MINTCREAM: Sheet = { mozBorderRightColors: "mintcream" };
        static MISTYROSE: Sheet = { mozBorderRightColors: "mistyrose" };
        static MOCCASIN: Sheet = { mozBorderRightColors: "moccasin" };
        static NAVAJOWHITE: Sheet = { mozBorderRightColors: "navajowhite" };
        static NAVY: Sheet = { mozBorderRightColors: "navy" };
        static OLDLACE: Sheet = { mozBorderRightColors: "oldlace" };
        static OLIVE: Sheet = { mozBorderRightColors: "olive" };
        static OLIVEDRAB: Sheet = { mozBorderRightColors: "olivedrab" };
        static ORANGE: Sheet = { mozBorderRightColors: "orange" };
        static ORANGERED: Sheet = { mozBorderRightColors: "orangered" };
        static ORCHID: Sheet = { mozBorderRightColors: "orchid" };
        static PALEGOLDENROD: Sheet = { mozBorderRightColors: "palegoldenrod" };
        static PALEGREEN: Sheet = { mozBorderRightColors: "palegreen" };
        static PALETURQUOISE: Sheet = { mozBorderRightColors: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { mozBorderRightColors: "palevioletred" };
        static PAPAYAWHIP: Sheet = { mozBorderRightColors: "papayawhip" };
        static PEACHPUFF: Sheet = { mozBorderRightColors: "peachpuff" };
        static PERU: Sheet = { mozBorderRightColors: "peru" };
        static PINK: Sheet = { mozBorderRightColors: "pink" };
        static PLUM: Sheet = { mozBorderRightColors: "plum" };
        static POWDERBLUE: Sheet = { mozBorderRightColors: "powderblue" };
        static PURPLE: Sheet = { mozBorderRightColors: "purple" };
        static REBECCAPURPLE: Sheet = { mozBorderRightColors: "rebeccapurple" };
        static RED: Sheet = { mozBorderRightColors: "red" };
        static ROSYBROWN: Sheet = { mozBorderRightColors: "rosybrown" };
        static ROYALBLUE: Sheet = { mozBorderRightColors: "royalblue" };
        static SADDLEBROWN: Sheet = { mozBorderRightColors: "saddlebrown" };
        static SALMON: Sheet = { mozBorderRightColors: "salmon" };
        static SANDYBROWN: Sheet = { mozBorderRightColors: "sandybrown" };
        static SEAGREEN: Sheet = { mozBorderRightColors: "seagreen" };
        static SEASHELL: Sheet = { mozBorderRightColors: "seashell" };
        static SIENNA: Sheet = { mozBorderRightColors: "sienna" };
        static SILVER: Sheet = { mozBorderRightColors: "silver" };
        static SKYBLUE: Sheet = { mozBorderRightColors: "skyblue" };
        static SLATEBLUE: Sheet = { mozBorderRightColors: "slateblue" };
        static SLATEGRAY: Sheet = { mozBorderRightColors: "slategray" };
        static SLATEGREY: Sheet = { mozBorderRightColors: "slategrey" };
        static SNOW: Sheet = { mozBorderRightColors: "snow" };
        static SPRINGGREEN: Sheet = { mozBorderRightColors: "springgreen" };
        static STEELBLUE: Sheet = { mozBorderRightColors: "steelblue" };
        static TAN: Sheet = { mozBorderRightColors: "tan" };
        static TEAL: Sheet = { mozBorderRightColors: "teal" };
        static THISTLE: Sheet = { mozBorderRightColors: "thistle" };
        static TOMATO: Sheet = { mozBorderRightColors: "tomato" };
        static TURQUOISE: Sheet = { mozBorderRightColors: "turquoise" };
        static VIOLET: Sheet = { mozBorderRightColors: "violet" };
        static WHEAT: Sheet = { mozBorderRightColors: "wheat" };
        static WHITE: Sheet = { mozBorderRightColors: "white" };
        static WHITESMOKE: Sheet = { mozBorderRightColors: "whitesmoke" };
        static YELLOW: Sheet = { mozBorderRightColors: "yellow" };
        static YELLOWGREEN: Sheet = { mozBorderRightColors: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { mozBorderRightColors: "currentcolor" };
        static ACTIVEBORDER: Sheet = { mozBorderRightColors: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { mozBorderRightColors: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { mozBorderRightColors: "AppWorkspace" };
        static BACKGROUND: Sheet = { mozBorderRightColors: "Background" };
        static BUTTONFACE: Sheet = { mozBorderRightColors: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { mozBorderRightColors: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { mozBorderRightColors: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { mozBorderRightColors: "ButtonText" };
        static CAPTIONTEXT: Sheet = { mozBorderRightColors: "CaptionText" };
        static GRAYTEXT: Sheet = { mozBorderRightColors: "GrayText" };
        static HIGHLIGHT: Sheet = { mozBorderRightColors: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { mozBorderRightColors: "HighlightText" };
        static INACTIVEBORDER: Sheet = { mozBorderRightColors: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { mozBorderRightColors: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { mozBorderRightColors: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { mozBorderRightColors: "InfoBackground" };
        static INFOTEXT: Sheet = { mozBorderRightColors: "InfoText" };
        static MENU: Sheet = { mozBorderRightColors: "Menu" };
        static MENUTEXT: Sheet = { mozBorderRightColors: "MenuText" };
        static SCROLLBAR: Sheet = { mozBorderRightColors: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { mozBorderRightColors: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { mozBorderRightColors: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { mozBorderRightColors: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { mozBorderRightColors: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { mozBorderRightColors: "ThreeDShadow" };
        static WINDOW: Sheet = { mozBorderRightColors: "Window" };
        static WINDOWFRAME: Sheet = { mozBorderRightColors: "WindowFrame" };
        static WINDOWTEXT: Sheet = { mozBorderRightColors: "WindowText" };
        static NONE: Sheet = { mozBorderRightColors: "none" };
    }
    export class MozBorderTopColors {
        static set = (...params: Param[]): Sheet => ({ mozBorderTopColors: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ mozBorderTopColors: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ mozBorderTopColors: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ mozBorderTopColors: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ mozBorderTopColors: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ mozBorderTopColors: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { mozBorderTopColors: "transparent" };
        static ALICEBLUE: Sheet = { mozBorderTopColors: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { mozBorderTopColors: "antiquewhite" };
        static AQUA: Sheet = { mozBorderTopColors: "aqua" };
        static AQUAMARINE: Sheet = { mozBorderTopColors: "aquamarine" };
        static AZURE: Sheet = { mozBorderTopColors: "azure" };
        static BEIGE: Sheet = { mozBorderTopColors: "beige" };
        static BISQUE: Sheet = { mozBorderTopColors: "bisque" };
        static BLACK: Sheet = { mozBorderTopColors: "black" };
        static BLANCHEDALMOND: Sheet = { mozBorderTopColors: "blanchedalmond" };
        static BLUE: Sheet = { mozBorderTopColors: "blue" };
        static BLUEVIOLET: Sheet = { mozBorderTopColors: "blueviolet" };
        static BROWN: Sheet = { mozBorderTopColors: "brown" };
        static BURLYWOOD: Sheet = { mozBorderTopColors: "burlywood" };
        static CADETBLUE: Sheet = { mozBorderTopColors: "cadetblue" };
        static CHARTREUSE: Sheet = { mozBorderTopColors: "chartreuse" };
        static CHOCOLATE: Sheet = { mozBorderTopColors: "chocolate" };
        static CORAL: Sheet = { mozBorderTopColors: "coral" };
        static CORNFLOWERBLUE: Sheet = { mozBorderTopColors: "cornflowerblue" };
        static CORNSILK: Sheet = { mozBorderTopColors: "cornsilk" };
        static CRIMSON: Sheet = { mozBorderTopColors: "crimson" };
        static CYAN: Sheet = { mozBorderTopColors: "cyan" };
        static DARKBLUE: Sheet = { mozBorderTopColors: "darkblue" };
        static DARKCYAN: Sheet = { mozBorderTopColors: "darkcyan" };
        static DARKGOLDENROD: Sheet = { mozBorderTopColors: "darkgoldenrod" };
        static DARKGRAY: Sheet = { mozBorderTopColors: "darkgray" };
        static DARKGREEN: Sheet = { mozBorderTopColors: "darkgreen" };
        static DARKGREY: Sheet = { mozBorderTopColors: "darkgrey" };
        static DARKKHAKI: Sheet = { mozBorderTopColors: "darkkhaki" };
        static DARKMAGENTA: Sheet = { mozBorderTopColors: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { mozBorderTopColors: "darkolivegreen" };
        static DARKORANGE: Sheet = { mozBorderTopColors: "darkorange" };
        static DARKORCHID: Sheet = { mozBorderTopColors: "darkorchid" };
        static DARKRED: Sheet = { mozBorderTopColors: "darkred" };
        static DARKSALMON: Sheet = { mozBorderTopColors: "darksalmon" };
        static DARKSEAGREEN: Sheet = { mozBorderTopColors: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { mozBorderTopColors: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { mozBorderTopColors: "darkslategray" };
        static DARKSLATEGREY: Sheet = { mozBorderTopColors: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { mozBorderTopColors: "darkturquoise" };
        static DARKVIOLET: Sheet = { mozBorderTopColors: "darkviolet" };
        static DEEPPINK: Sheet = { mozBorderTopColors: "deeppink" };
        static DEEPSKYBLUE: Sheet = { mozBorderTopColors: "deepskyblue" };
        static DIMGRAY: Sheet = { mozBorderTopColors: "dimgray" };
        static DIMGREY: Sheet = { mozBorderTopColors: "dimgrey" };
        static DODGERBLUE: Sheet = { mozBorderTopColors: "dodgerblue" };
        static FIREBRICK: Sheet = { mozBorderTopColors: "firebrick" };
        static FLORALWHITE: Sheet = { mozBorderTopColors: "floralwhite" };
        static FORESTGREEN: Sheet = { mozBorderTopColors: "forestgreen" };
        static FUCHSIA: Sheet = { mozBorderTopColors: "fuchsia" };
        static GAINSBORO: Sheet = { mozBorderTopColors: "gainsboro" };
        static GHOSTWHITE: Sheet = { mozBorderTopColors: "ghostwhite" };
        static GOLD: Sheet = { mozBorderTopColors: "gold" };
        static GOLDENROD: Sheet = { mozBorderTopColors: "goldenrod" };
        static GRAY: Sheet = { mozBorderTopColors: "gray" };
        static GREEN: Sheet = { mozBorderTopColors: "green" };
        static GREENYELLOW: Sheet = { mozBorderTopColors: "greenyellow" };
        static GREY: Sheet = { mozBorderTopColors: "grey" };
        static HONEYDEW: Sheet = { mozBorderTopColors: "honeydew" };
        static HOTPINK: Sheet = { mozBorderTopColors: "hotpink" };
        static INDIANRED: Sheet = { mozBorderTopColors: "indianred" };
        static INDIGO: Sheet = { mozBorderTopColors: "indigo" };
        static IVORY: Sheet = { mozBorderTopColors: "ivory" };
        static KHAKI: Sheet = { mozBorderTopColors: "khaki" };
        static LAVENDER: Sheet = { mozBorderTopColors: "lavender" };
        static LAVENDERBLUSH: Sheet = { mozBorderTopColors: "lavenderblush" };
        static LAWNGREEN: Sheet = { mozBorderTopColors: "lawngreen" };
        static LEMONCHIFFON: Sheet = { mozBorderTopColors: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { mozBorderTopColors: "lightblue" };
        static LIGHTCORAL: Sheet = { mozBorderTopColors: "lightcoral" };
        static LIGHTCYAN: Sheet = { mozBorderTopColors: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { mozBorderTopColors: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { mozBorderTopColors: "lightgray" };
        static LIGHTGREEN: Sheet = { mozBorderTopColors: "lightgreen" };
        static LIGHTGREY: Sheet = { mozBorderTopColors: "lightgrey" };
        static LIGHTPINK: Sheet = { mozBorderTopColors: "lightpink" };
        static LIGHTSALMON: Sheet = { mozBorderTopColors: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { mozBorderTopColors: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { mozBorderTopColors: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { mozBorderTopColors: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { mozBorderTopColors: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { mozBorderTopColors: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { mozBorderTopColors: "lightyellow" };
        static LIME: Sheet = { mozBorderTopColors: "lime" };
        static LIMEGREEN: Sheet = { mozBorderTopColors: "limegreen" };
        static LINEN: Sheet = { mozBorderTopColors: "linen" };
        static MAGENTA: Sheet = { mozBorderTopColors: "magenta" };
        static MAROON: Sheet = { mozBorderTopColors: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { mozBorderTopColors: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { mozBorderTopColors: "mediumblue" };
        static MEDIUMORCHID: Sheet = { mozBorderTopColors: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { mozBorderTopColors: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { mozBorderTopColors: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { mozBorderTopColors: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { mozBorderTopColors: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { mozBorderTopColors: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { mozBorderTopColors: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { mozBorderTopColors: "midnightblue" };
        static MINTCREAM: Sheet = { mozBorderTopColors: "mintcream" };
        static MISTYROSE: Sheet = { mozBorderTopColors: "mistyrose" };
        static MOCCASIN: Sheet = { mozBorderTopColors: "moccasin" };
        static NAVAJOWHITE: Sheet = { mozBorderTopColors: "navajowhite" };
        static NAVY: Sheet = { mozBorderTopColors: "navy" };
        static OLDLACE: Sheet = { mozBorderTopColors: "oldlace" };
        static OLIVE: Sheet = { mozBorderTopColors: "olive" };
        static OLIVEDRAB: Sheet = { mozBorderTopColors: "olivedrab" };
        static ORANGE: Sheet = { mozBorderTopColors: "orange" };
        static ORANGERED: Sheet = { mozBorderTopColors: "orangered" };
        static ORCHID: Sheet = { mozBorderTopColors: "orchid" };
        static PALEGOLDENROD: Sheet = { mozBorderTopColors: "palegoldenrod" };
        static PALEGREEN: Sheet = { mozBorderTopColors: "palegreen" };
        static PALETURQUOISE: Sheet = { mozBorderTopColors: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { mozBorderTopColors: "palevioletred" };
        static PAPAYAWHIP: Sheet = { mozBorderTopColors: "papayawhip" };
        static PEACHPUFF: Sheet = { mozBorderTopColors: "peachpuff" };
        static PERU: Sheet = { mozBorderTopColors: "peru" };
        static PINK: Sheet = { mozBorderTopColors: "pink" };
        static PLUM: Sheet = { mozBorderTopColors: "plum" };
        static POWDERBLUE: Sheet = { mozBorderTopColors: "powderblue" };
        static PURPLE: Sheet = { mozBorderTopColors: "purple" };
        static REBECCAPURPLE: Sheet = { mozBorderTopColors: "rebeccapurple" };
        static RED: Sheet = { mozBorderTopColors: "red" };
        static ROSYBROWN: Sheet = { mozBorderTopColors: "rosybrown" };
        static ROYALBLUE: Sheet = { mozBorderTopColors: "royalblue" };
        static SADDLEBROWN: Sheet = { mozBorderTopColors: "saddlebrown" };
        static SALMON: Sheet = { mozBorderTopColors: "salmon" };
        static SANDYBROWN: Sheet = { mozBorderTopColors: "sandybrown" };
        static SEAGREEN: Sheet = { mozBorderTopColors: "seagreen" };
        static SEASHELL: Sheet = { mozBorderTopColors: "seashell" };
        static SIENNA: Sheet = { mozBorderTopColors: "sienna" };
        static SILVER: Sheet = { mozBorderTopColors: "silver" };
        static SKYBLUE: Sheet = { mozBorderTopColors: "skyblue" };
        static SLATEBLUE: Sheet = { mozBorderTopColors: "slateblue" };
        static SLATEGRAY: Sheet = { mozBorderTopColors: "slategray" };
        static SLATEGREY: Sheet = { mozBorderTopColors: "slategrey" };
        static SNOW: Sheet = { mozBorderTopColors: "snow" };
        static SPRINGGREEN: Sheet = { mozBorderTopColors: "springgreen" };
        static STEELBLUE: Sheet = { mozBorderTopColors: "steelblue" };
        static TAN: Sheet = { mozBorderTopColors: "tan" };
        static TEAL: Sheet = { mozBorderTopColors: "teal" };
        static THISTLE: Sheet = { mozBorderTopColors: "thistle" };
        static TOMATO: Sheet = { mozBorderTopColors: "tomato" };
        static TURQUOISE: Sheet = { mozBorderTopColors: "turquoise" };
        static VIOLET: Sheet = { mozBorderTopColors: "violet" };
        static WHEAT: Sheet = { mozBorderTopColors: "wheat" };
        static WHITE: Sheet = { mozBorderTopColors: "white" };
        static WHITESMOKE: Sheet = { mozBorderTopColors: "whitesmoke" };
        static YELLOW: Sheet = { mozBorderTopColors: "yellow" };
        static YELLOWGREEN: Sheet = { mozBorderTopColors: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { mozBorderTopColors: "currentcolor" };
        static ACTIVEBORDER: Sheet = { mozBorderTopColors: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { mozBorderTopColors: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { mozBorderTopColors: "AppWorkspace" };
        static BACKGROUND: Sheet = { mozBorderTopColors: "Background" };
        static BUTTONFACE: Sheet = { mozBorderTopColors: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { mozBorderTopColors: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { mozBorderTopColors: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { mozBorderTopColors: "ButtonText" };
        static CAPTIONTEXT: Sheet = { mozBorderTopColors: "CaptionText" };
        static GRAYTEXT: Sheet = { mozBorderTopColors: "GrayText" };
        static HIGHLIGHT: Sheet = { mozBorderTopColors: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { mozBorderTopColors: "HighlightText" };
        static INACTIVEBORDER: Sheet = { mozBorderTopColors: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { mozBorderTopColors: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { mozBorderTopColors: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { mozBorderTopColors: "InfoBackground" };
        static INFOTEXT: Sheet = { mozBorderTopColors: "InfoText" };
        static MENU: Sheet = { mozBorderTopColors: "Menu" };
        static MENUTEXT: Sheet = { mozBorderTopColors: "MenuText" };
        static SCROLLBAR: Sheet = { mozBorderTopColors: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { mozBorderTopColors: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { mozBorderTopColors: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { mozBorderTopColors: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { mozBorderTopColors: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { mozBorderTopColors: "ThreeDShadow" };
        static WINDOW: Sheet = { mozBorderTopColors: "Window" };
        static WINDOWFRAME: Sheet = { mozBorderTopColors: "WindowFrame" };
        static WINDOWTEXT: Sheet = { mozBorderTopColors: "WindowText" };
        static NONE: Sheet = { mozBorderTopColors: "none" };
    }
    export class MozContextProperties {
        static set = (...params: Param[]): Sheet => ({ mozContextProperties: buildProperty(params) });
        static NONE: Sheet = { mozContextProperties: "none" };
        static FILL: Sheet = { mozContextProperties: "fill" };
        static FILL_OPACITY: Sheet = { mozContextProperties: "fill-opacity" };
        static STROKE: Sheet = { mozContextProperties: "stroke" };
        static STROKE_OPACITY: Sheet = { mozContextProperties: "stroke-opacity" };
    }
    export class MozFloatEdge {
        static set = (...params: Param[]): Sheet => ({ mozFloatEdge: buildProperty(params) });
        static BORDER_BOX: Sheet = { mozFloatEdge: "border-box" };
        static CONTENT_BOX: Sheet = { mozFloatEdge: "content-box" };
        static MARGIN_BOX: Sheet = { mozFloatEdge: "margin-box" };
        static PADDING_BOX: Sheet = { mozFloatEdge: "padding-box" };
    }
    export class MozForceBrokenImageIcon {
        static set = (...params: Param[]): Sheet => ({ mozForceBrokenImageIcon: buildProperty(params) });
    }
    export class MozImageRegion {
        static set = (...params: Param[]): Sheet => ({ mozImageRegion: buildProperty(params) });
        static AUTO: Sheet = { mozImageRegion: "auto" };
    }
    export class MozOrient {
        static set = (...params: Param[]): Sheet => ({ mozOrient: buildProperty(params) });
        static INLINE: Sheet = { mozOrient: "inline" };
        static BLOCK: Sheet = { mozOrient: "block" };
        static HORIZONTAL: Sheet = { mozOrient: "horizontal" };
        static VERTICAL: Sheet = { mozOrient: "vertical" };
    }
    export class MozOutlineRadius {
        static set = (...params: Param[]): Sheet => ({ mozOutlineRadius: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ mozOutlineRadius: Length.X(...params) });
    }
    export class MozOutlineRadiusBottomleft {
        static set = (...params: Param[]): Sheet => ({ mozOutlineRadiusBottomleft: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomleft: Length.X(...params) });
    }
    export class MozOutlineRadiusBottomright {
        static set = (...params: Param[]): Sheet => ({ mozOutlineRadiusBottomright: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ mozOutlineRadiusBottomright: Length.X(...params) });
    }
    export class MozOutlineRadiusTopleft {
        static set = (...params: Param[]): Sheet => ({ mozOutlineRadiusTopleft: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ mozOutlineRadiusTopleft: Length.X(...params) });
    }
    export class MozOutlineRadiusTopright {
        static set = (...params: Param[]): Sheet => ({ mozOutlineRadiusTopright: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ mozOutlineRadiusTopright: Length.X(...params) });
    }
    export class MozStackSizing {
        static set = (...params: Param[]): Sheet => ({ mozStackSizing: buildProperty(params) });
        static IGNORE: Sheet = { mozStackSizing: "ignore" };
        static STRETCH_TO_FIT: Sheet = { mozStackSizing: "stretch-to-fit" };
    }
    export class MozTextBlink {
        static set = (...params: Param[]): Sheet => ({ mozTextBlink: buildProperty(params) });
        static NONE: Sheet = { mozTextBlink: "none" };
        static BLINK: Sheet = { mozTextBlink: "blink" };
    }
    export class MozUserFocus {
        static set = (...params: Param[]): Sheet => ({ mozUserFocus: buildProperty(params) });
        static IGNORE: Sheet = { mozUserFocus: "ignore" };
        static NORMAL: Sheet = { mozUserFocus: "normal" };
        static SELECT_AFTER: Sheet = { mozUserFocus: "select-after" };
        static SELECT_BEFORE: Sheet = { mozUserFocus: "select-before" };
        static SELECT_MENU: Sheet = { mozUserFocus: "select-menu" };
        static SELECT_SAME: Sheet = { mozUserFocus: "select-same" };
        static SELECT_ALL: Sheet = { mozUserFocus: "select-all" };
        static NONE: Sheet = { mozUserFocus: "none" };
    }
    export class MozUserInput {
        static set = (...params: Param[]): Sheet => ({ mozUserInput: buildProperty(params) });
        static AUTO: Sheet = { mozUserInput: "auto" };
        static NONE: Sheet = { mozUserInput: "none" };
        static ENABLED: Sheet = { mozUserInput: "enabled" };
        static DISABLED: Sheet = { mozUserInput: "disabled" };
    }
    export class MozUserModify {
        static set = (...params: Param[]): Sheet => ({ mozUserModify: buildProperty(params) });
        static READ_ONLY: Sheet = { mozUserModify: "read-only" };
        static READ_WRITE: Sheet = { mozUserModify: "read-write" };
        static WRITE_ONLY: Sheet = { mozUserModify: "write-only" };
    }
    export class MozWindowDragging {
        static set = (...params: Param[]): Sheet => ({ mozWindowDragging: buildProperty(params) });
        static DRAG: Sheet = { mozWindowDragging: "drag" };
        static NO_DRAG: Sheet = { mozWindowDragging: "no-drag" };
    }
    export class MozWindowShadow {
        static set = (...params: Param[]): Sheet => ({ mozWindowShadow: buildProperty(params) });
        static DEFAULT: Sheet = { mozWindowShadow: "default" };
        static MENU: Sheet = { mozWindowShadow: "menu" };
        static TOOLTIP: Sheet = { mozWindowShadow: "tooltip" };
        static SHEET: Sheet = { mozWindowShadow: "sheet" };
        static NONE: Sheet = { mozWindowShadow: "none" };
    }
    export class WebkitAppearance {
        static set = (...params: Param[]): Sheet => ({ webkitAppearance: buildProperty(params) });
        static NONE: Sheet = { webkitAppearance: "none" };
        static BUTTON: Sheet = { webkitAppearance: "button" };
        static BUTTON_BEVEL: Sheet = { webkitAppearance: "button-bevel" };
        static CARET: Sheet = { webkitAppearance: "caret" };
        static CHECKBOX: Sheet = { webkitAppearance: "checkbox" };
        static DEFAULT_BUTTON: Sheet = { webkitAppearance: "default-button" };
        static INNER_SPIN_BUTTON: Sheet = { webkitAppearance: "inner-spin-button" };
        static LISTBOX: Sheet = { webkitAppearance: "listbox" };
        static LISTITEM: Sheet = { webkitAppearance: "listitem" };
        static MEDIA_CONTROLS_BACKGROUND: Sheet = { webkitAppearance: "media-controls-background" };
        static MEDIA_CONTROLS_FULLSCREEN_BACKGROUND: Sheet = {
            webkitAppearance: "media-controls-fullscreen-background"
        };
        static MEDIA_CURRENT_TIME_DISPLAY: Sheet = { webkitAppearance: "media-current-time-display" };
        static MEDIA_ENTER_FULLSCREEN_BUTTON: Sheet = { webkitAppearance: "media-enter-fullscreen-button" };
        static MEDIA_EXIT_FULLSCREEN_BUTTON: Sheet = { webkitAppearance: "media-exit-fullscreen-button" };
        static MEDIA_FULLSCREEN_BUTTON: Sheet = { webkitAppearance: "media-fullscreen-button" };
        static MEDIA_MUTE_BUTTON: Sheet = { webkitAppearance: "media-mute-button" };
        static MEDIA_OVERLAY_PLAY_BUTTON: Sheet = { webkitAppearance: "media-overlay-play-button" };
        static MEDIA_PLAY_BUTTON: Sheet = { webkitAppearance: "media-play-button" };
        static MEDIA_SEEK_BACK_BUTTON: Sheet = { webkitAppearance: "media-seek-back-button" };
        static MEDIA_SEEK_FORWARD_BUTTON: Sheet = { webkitAppearance: "media-seek-forward-button" };
        static MEDIA_SLIDER: Sheet = { webkitAppearance: "media-slider" };
        static MEDIA_SLIDERTHUMB: Sheet = { webkitAppearance: "media-sliderthumb" };
        static MEDIA_TIME_REMAINING_DISPLAY: Sheet = { webkitAppearance: "media-time-remaining-display" };
        static MEDIA_TOGGLE_CLOSED_CAPTIONS_BUTTON: Sheet = { webkitAppearance: "media-toggle-closed-captions-button" };
        static MEDIA_VOLUME_SLIDER: Sheet = { webkitAppearance: "media-volume-slider" };
        static MEDIA_VOLUME_SLIDER_CONTAINER: Sheet = { webkitAppearance: "media-volume-slider-container" };
        static MEDIA_VOLUME_SLIDERTHUMB: Sheet = { webkitAppearance: "media-volume-sliderthumb" };
        static MENULIST: Sheet = { webkitAppearance: "menulist" };
        static MENULIST_BUTTON: Sheet = { webkitAppearance: "menulist-button" };
        static MENULIST_TEXT: Sheet = { webkitAppearance: "menulist-text" };
        static MENULIST_TEXTFIELD: Sheet = { webkitAppearance: "menulist-textfield" };
        static METER: Sheet = { webkitAppearance: "meter" };
        static PROGRESS_BAR: Sheet = { webkitAppearance: "progress-bar" };
        static PROGRESS_BAR_VALUE: Sheet = { webkitAppearance: "progress-bar-value" };
        static PUSH_BUTTON: Sheet = { webkitAppearance: "push-button" };
        static RADIO: Sheet = { webkitAppearance: "radio" };
        static SEARCHFIELD: Sheet = { webkitAppearance: "searchfield" };
        static SEARCHFIELD_CANCEL_BUTTON: Sheet = { webkitAppearance: "searchfield-cancel-button" };
        static SEARCHFIELD_DECORATION: Sheet = { webkitAppearance: "searchfield-decoration" };
        static SEARCHFIELD_RESULTS_BUTTON: Sheet = { webkitAppearance: "searchfield-results-button" };
        static SEARCHFIELD_RESULTS_DECORATION: Sheet = { webkitAppearance: "searchfield-results-decoration" };
        static SLIDER_HORIZONTAL: Sheet = { webkitAppearance: "slider-horizontal" };
        static SLIDER_VERTICAL: Sheet = { webkitAppearance: "slider-vertical" };
        static SLIDERTHUMB_HORIZONTAL: Sheet = { webkitAppearance: "sliderthumb-horizontal" };
        static SLIDERTHUMB_VERTICAL: Sheet = { webkitAppearance: "sliderthumb-vertical" };
        static SQUARE_BUTTON: Sheet = { webkitAppearance: "square-button" };
        static TEXTAREA: Sheet = { webkitAppearance: "textarea" };
        static TEXTFIELD: Sheet = { webkitAppearance: "textfield" };
    }
    export class WebkitBorderBefore {
        static set = (...params: Param[]): Sheet => ({ webkitBorderBefore: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitBorderBefore: Length.fr(...params) });
        static THIN: Sheet = { webkitBorderBefore: "thin" };
        static MEDIUM: Sheet = { webkitBorderBefore: "medium" };
        static THICK: Sheet = { webkitBorderBefore: "thick" };
        static NONE: Sheet = { webkitBorderBefore: "none" };
        static HIDDEN: Sheet = { webkitBorderBefore: "hidden" };
        static DOTTED: Sheet = { webkitBorderBefore: "dotted" };
        static DASHED: Sheet = { webkitBorderBefore: "dashed" };
        static SOLID: Sheet = { webkitBorderBefore: "solid" };
        static DOUBLE: Sheet = { webkitBorderBefore: "double" };
        static GROOVE: Sheet = { webkitBorderBefore: "groove" };
        static RIDGE: Sheet = { webkitBorderBefore: "ridge" };
        static INSET: Sheet = { webkitBorderBefore: "inset" };
        static OUTSET: Sheet = { webkitBorderBefore: "outset" };
    }
    export class WebkitBorderBeforeColor {
        static set = (...params: Param[]): Sheet => ({ webkitBorderBeforeColor: buildProperty(params) });
    }
    export class WebkitBorderBeforeStyle {
        static set = (...params: Param[]): Sheet => ({ webkitBorderBeforeStyle: buildProperty(params) });
        static NONE: Sheet = { webkitBorderBeforeStyle: "none" };
        static HIDDEN: Sheet = { webkitBorderBeforeStyle: "hidden" };
        static DOTTED: Sheet = { webkitBorderBeforeStyle: "dotted" };
        static DASHED: Sheet = { webkitBorderBeforeStyle: "dashed" };
        static SOLID: Sheet = { webkitBorderBeforeStyle: "solid" };
        static DOUBLE: Sheet = { webkitBorderBeforeStyle: "double" };
        static GROOVE: Sheet = { webkitBorderBeforeStyle: "groove" };
        static RIDGE: Sheet = { webkitBorderBeforeStyle: "ridge" };
        static INSET: Sheet = { webkitBorderBeforeStyle: "inset" };
        static OUTSET: Sheet = { webkitBorderBeforeStyle: "outset" };
    }
    export class WebkitBorderBeforeWidth {
        static set = (...params: Param[]): Sheet => ({ webkitBorderBeforeWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitBorderBeforeWidth: Length.fr(...params) });
        static THIN: Sheet = { webkitBorderBeforeWidth: "thin" };
        static MEDIUM: Sheet = { webkitBorderBeforeWidth: "medium" };
        static THICK: Sheet = { webkitBorderBeforeWidth: "thick" };
    }
    export class WebkitBoxReflect {
        static set = (...params: Param[]): Sheet => ({ webkitBoxReflect: buildProperty(params) });
        static ABOVE: Sheet = { webkitBoxReflect: "above" };
        static BELOW: Sheet = { webkitBoxReflect: "below" };
        static RIGHT: Sheet = { webkitBoxReflect: "right" };
        static LEFT: Sheet = { webkitBoxReflect: "left" };
        static cap = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ webkitBoxReflect: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ webkitBoxReflect: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ webkitBoxReflect: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ webkitBoxReflect: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ webkitBoxReflect: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { webkitBoxReflect: "transparent" };
        static ALICEBLUE: Sheet = { webkitBoxReflect: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { webkitBoxReflect: "antiquewhite" };
        static AQUA: Sheet = { webkitBoxReflect: "aqua" };
        static AQUAMARINE: Sheet = { webkitBoxReflect: "aquamarine" };
        static AZURE: Sheet = { webkitBoxReflect: "azure" };
        static BEIGE: Sheet = { webkitBoxReflect: "beige" };
        static BISQUE: Sheet = { webkitBoxReflect: "bisque" };
        static BLACK: Sheet = { webkitBoxReflect: "black" };
        static BLANCHEDALMOND: Sheet = { webkitBoxReflect: "blanchedalmond" };
        static BLUE: Sheet = { webkitBoxReflect: "blue" };
        static BLUEVIOLET: Sheet = { webkitBoxReflect: "blueviolet" };
        static BROWN: Sheet = { webkitBoxReflect: "brown" };
        static BURLYWOOD: Sheet = { webkitBoxReflect: "burlywood" };
        static CADETBLUE: Sheet = { webkitBoxReflect: "cadetblue" };
        static CHARTREUSE: Sheet = { webkitBoxReflect: "chartreuse" };
        static CHOCOLATE: Sheet = { webkitBoxReflect: "chocolate" };
        static CORAL: Sheet = { webkitBoxReflect: "coral" };
        static CORNFLOWERBLUE: Sheet = { webkitBoxReflect: "cornflowerblue" };
        static CORNSILK: Sheet = { webkitBoxReflect: "cornsilk" };
        static CRIMSON: Sheet = { webkitBoxReflect: "crimson" };
        static CYAN: Sheet = { webkitBoxReflect: "cyan" };
        static DARKBLUE: Sheet = { webkitBoxReflect: "darkblue" };
        static DARKCYAN: Sheet = { webkitBoxReflect: "darkcyan" };
        static DARKGOLDENROD: Sheet = { webkitBoxReflect: "darkgoldenrod" };
        static DARKGRAY: Sheet = { webkitBoxReflect: "darkgray" };
        static DARKGREEN: Sheet = { webkitBoxReflect: "darkgreen" };
        static DARKGREY: Sheet = { webkitBoxReflect: "darkgrey" };
        static DARKKHAKI: Sheet = { webkitBoxReflect: "darkkhaki" };
        static DARKMAGENTA: Sheet = { webkitBoxReflect: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { webkitBoxReflect: "darkolivegreen" };
        static DARKORANGE: Sheet = { webkitBoxReflect: "darkorange" };
        static DARKORCHID: Sheet = { webkitBoxReflect: "darkorchid" };
        static DARKRED: Sheet = { webkitBoxReflect: "darkred" };
        static DARKSALMON: Sheet = { webkitBoxReflect: "darksalmon" };
        static DARKSEAGREEN: Sheet = { webkitBoxReflect: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { webkitBoxReflect: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { webkitBoxReflect: "darkslategray" };
        static DARKSLATEGREY: Sheet = { webkitBoxReflect: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { webkitBoxReflect: "darkturquoise" };
        static DARKVIOLET: Sheet = { webkitBoxReflect: "darkviolet" };
        static DEEPPINK: Sheet = { webkitBoxReflect: "deeppink" };
        static DEEPSKYBLUE: Sheet = { webkitBoxReflect: "deepskyblue" };
        static DIMGRAY: Sheet = { webkitBoxReflect: "dimgray" };
        static DIMGREY: Sheet = { webkitBoxReflect: "dimgrey" };
        static DODGERBLUE: Sheet = { webkitBoxReflect: "dodgerblue" };
        static FIREBRICK: Sheet = { webkitBoxReflect: "firebrick" };
        static FLORALWHITE: Sheet = { webkitBoxReflect: "floralwhite" };
        static FORESTGREEN: Sheet = { webkitBoxReflect: "forestgreen" };
        static FUCHSIA: Sheet = { webkitBoxReflect: "fuchsia" };
        static GAINSBORO: Sheet = { webkitBoxReflect: "gainsboro" };
        static GHOSTWHITE: Sheet = { webkitBoxReflect: "ghostwhite" };
        static GOLD: Sheet = { webkitBoxReflect: "gold" };
        static GOLDENROD: Sheet = { webkitBoxReflect: "goldenrod" };
        static GRAY: Sheet = { webkitBoxReflect: "gray" };
        static GREEN: Sheet = { webkitBoxReflect: "green" };
        static GREENYELLOW: Sheet = { webkitBoxReflect: "greenyellow" };
        static GREY: Sheet = { webkitBoxReflect: "grey" };
        static HONEYDEW: Sheet = { webkitBoxReflect: "honeydew" };
        static HOTPINK: Sheet = { webkitBoxReflect: "hotpink" };
        static INDIANRED: Sheet = { webkitBoxReflect: "indianred" };
        static INDIGO: Sheet = { webkitBoxReflect: "indigo" };
        static IVORY: Sheet = { webkitBoxReflect: "ivory" };
        static KHAKI: Sheet = { webkitBoxReflect: "khaki" };
        static LAVENDER: Sheet = { webkitBoxReflect: "lavender" };
        static LAVENDERBLUSH: Sheet = { webkitBoxReflect: "lavenderblush" };
        static LAWNGREEN: Sheet = { webkitBoxReflect: "lawngreen" };
        static LEMONCHIFFON: Sheet = { webkitBoxReflect: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { webkitBoxReflect: "lightblue" };
        static LIGHTCORAL: Sheet = { webkitBoxReflect: "lightcoral" };
        static LIGHTCYAN: Sheet = { webkitBoxReflect: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { webkitBoxReflect: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { webkitBoxReflect: "lightgray" };
        static LIGHTGREEN: Sheet = { webkitBoxReflect: "lightgreen" };
        static LIGHTGREY: Sheet = { webkitBoxReflect: "lightgrey" };
        static LIGHTPINK: Sheet = { webkitBoxReflect: "lightpink" };
        static LIGHTSALMON: Sheet = { webkitBoxReflect: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { webkitBoxReflect: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { webkitBoxReflect: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { webkitBoxReflect: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { webkitBoxReflect: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { webkitBoxReflect: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { webkitBoxReflect: "lightyellow" };
        static LIME: Sheet = { webkitBoxReflect: "lime" };
        static LIMEGREEN: Sheet = { webkitBoxReflect: "limegreen" };
        static LINEN: Sheet = { webkitBoxReflect: "linen" };
        static MAGENTA: Sheet = { webkitBoxReflect: "magenta" };
        static MAROON: Sheet = { webkitBoxReflect: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { webkitBoxReflect: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { webkitBoxReflect: "mediumblue" };
        static MEDIUMORCHID: Sheet = { webkitBoxReflect: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { webkitBoxReflect: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { webkitBoxReflect: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { webkitBoxReflect: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { webkitBoxReflect: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { webkitBoxReflect: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { webkitBoxReflect: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { webkitBoxReflect: "midnightblue" };
        static MINTCREAM: Sheet = { webkitBoxReflect: "mintcream" };
        static MISTYROSE: Sheet = { webkitBoxReflect: "mistyrose" };
        static MOCCASIN: Sheet = { webkitBoxReflect: "moccasin" };
        static NAVAJOWHITE: Sheet = { webkitBoxReflect: "navajowhite" };
        static NAVY: Sheet = { webkitBoxReflect: "navy" };
        static OLDLACE: Sheet = { webkitBoxReflect: "oldlace" };
        static OLIVE: Sheet = { webkitBoxReflect: "olive" };
        static OLIVEDRAB: Sheet = { webkitBoxReflect: "olivedrab" };
        static ORANGE: Sheet = { webkitBoxReflect: "orange" };
        static ORANGERED: Sheet = { webkitBoxReflect: "orangered" };
        static ORCHID: Sheet = { webkitBoxReflect: "orchid" };
        static PALEGOLDENROD: Sheet = { webkitBoxReflect: "palegoldenrod" };
        static PALEGREEN: Sheet = { webkitBoxReflect: "palegreen" };
        static PALETURQUOISE: Sheet = { webkitBoxReflect: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { webkitBoxReflect: "palevioletred" };
        static PAPAYAWHIP: Sheet = { webkitBoxReflect: "papayawhip" };
        static PEACHPUFF: Sheet = { webkitBoxReflect: "peachpuff" };
        static PERU: Sheet = { webkitBoxReflect: "peru" };
        static PINK: Sheet = { webkitBoxReflect: "pink" };
        static PLUM: Sheet = { webkitBoxReflect: "plum" };
        static POWDERBLUE: Sheet = { webkitBoxReflect: "powderblue" };
        static PURPLE: Sheet = { webkitBoxReflect: "purple" };
        static REBECCAPURPLE: Sheet = { webkitBoxReflect: "rebeccapurple" };
        static RED: Sheet = { webkitBoxReflect: "red" };
        static ROSYBROWN: Sheet = { webkitBoxReflect: "rosybrown" };
        static ROYALBLUE: Sheet = { webkitBoxReflect: "royalblue" };
        static SADDLEBROWN: Sheet = { webkitBoxReflect: "saddlebrown" };
        static SALMON: Sheet = { webkitBoxReflect: "salmon" };
        static SANDYBROWN: Sheet = { webkitBoxReflect: "sandybrown" };
        static SEAGREEN: Sheet = { webkitBoxReflect: "seagreen" };
        static SEASHELL: Sheet = { webkitBoxReflect: "seashell" };
        static SIENNA: Sheet = { webkitBoxReflect: "sienna" };
        static SILVER: Sheet = { webkitBoxReflect: "silver" };
        static SKYBLUE: Sheet = { webkitBoxReflect: "skyblue" };
        static SLATEBLUE: Sheet = { webkitBoxReflect: "slateblue" };
        static SLATEGRAY: Sheet = { webkitBoxReflect: "slategray" };
        static SLATEGREY: Sheet = { webkitBoxReflect: "slategrey" };
        static SNOW: Sheet = { webkitBoxReflect: "snow" };
        static SPRINGGREEN: Sheet = { webkitBoxReflect: "springgreen" };
        static STEELBLUE: Sheet = { webkitBoxReflect: "steelblue" };
        static TAN: Sheet = { webkitBoxReflect: "tan" };
        static TEAL: Sheet = { webkitBoxReflect: "teal" };
        static THISTLE: Sheet = { webkitBoxReflect: "thistle" };
        static TOMATO: Sheet = { webkitBoxReflect: "tomato" };
        static TURQUOISE: Sheet = { webkitBoxReflect: "turquoise" };
        static VIOLET: Sheet = { webkitBoxReflect: "violet" };
        static WHEAT: Sheet = { webkitBoxReflect: "wheat" };
        static WHITE: Sheet = { webkitBoxReflect: "white" };
        static WHITESMOKE: Sheet = { webkitBoxReflect: "whitesmoke" };
        static YELLOW: Sheet = { webkitBoxReflect: "yellow" };
        static YELLOWGREEN: Sheet = { webkitBoxReflect: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { webkitBoxReflect: "currentcolor" };
        static ACTIVEBORDER: Sheet = { webkitBoxReflect: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { webkitBoxReflect: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { webkitBoxReflect: "AppWorkspace" };
        static BACKGROUND: Sheet = { webkitBoxReflect: "Background" };
        static BUTTONFACE: Sheet = { webkitBoxReflect: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { webkitBoxReflect: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { webkitBoxReflect: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { webkitBoxReflect: "ButtonText" };
        static CAPTIONTEXT: Sheet = { webkitBoxReflect: "CaptionText" };
        static GRAYTEXT: Sheet = { webkitBoxReflect: "GrayText" };
        static HIGHLIGHT: Sheet = { webkitBoxReflect: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { webkitBoxReflect: "HighlightText" };
        static INACTIVEBORDER: Sheet = { webkitBoxReflect: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { webkitBoxReflect: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { webkitBoxReflect: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { webkitBoxReflect: "InfoBackground" };
        static INFOTEXT: Sheet = { webkitBoxReflect: "InfoText" };
        static MENU: Sheet = { webkitBoxReflect: "Menu" };
        static MENUTEXT: Sheet = { webkitBoxReflect: "MenuText" };
        static SCROLLBAR: Sheet = { webkitBoxReflect: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { webkitBoxReflect: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { webkitBoxReflect: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { webkitBoxReflect: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { webkitBoxReflect: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { webkitBoxReflect: "ThreeDShadow" };
        static WINDOW: Sheet = { webkitBoxReflect: "Window" };
        static WINDOWFRAME: Sheet = { webkitBoxReflect: "WindowFrame" };
        static WINDOWTEXT: Sheet = { webkitBoxReflect: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ webkitBoxReflect: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ webkitBoxReflect: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ webkitBoxReflect: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ webkitBoxReflect: Resolution.x(...params) });
        static TO: Sheet = { webkitBoxReflect: "to" };
        static TOP: Sheet = { webkitBoxReflect: "top" };
        static BOTTOM: Sheet = { webkitBoxReflect: "bottom" };
        static CIRCLE: Sheet = { webkitBoxReflect: "circle" };
        static ELLIPSE: Sheet = { webkitBoxReflect: "ellipse" };
        static CLOSEST_SIDE: Sheet = { webkitBoxReflect: "closest-side" };
        static FARTHEST_SIDE: Sheet = { webkitBoxReflect: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { webkitBoxReflect: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { webkitBoxReflect: "farthest-corner" };
        static AT: Sheet = { webkitBoxReflect: "at" };
        static CENTER: Sheet = { webkitBoxReflect: "center" };
    }
    export class WebkitMask {
        static set = (...params: Param[]): Sheet => ({ webkitMask: buildProperty(params) });
        static NONE: Sheet = { webkitMask: "none" };
        static X = (...params: number[]): Sheet => ({ webkitMask: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ webkitMask: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ webkitMask: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ webkitMask: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ webkitMask: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { webkitMask: "transparent" };
        static ALICEBLUE: Sheet = { webkitMask: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { webkitMask: "antiquewhite" };
        static AQUA: Sheet = { webkitMask: "aqua" };
        static AQUAMARINE: Sheet = { webkitMask: "aquamarine" };
        static AZURE: Sheet = { webkitMask: "azure" };
        static BEIGE: Sheet = { webkitMask: "beige" };
        static BISQUE: Sheet = { webkitMask: "bisque" };
        static BLACK: Sheet = { webkitMask: "black" };
        static BLANCHEDALMOND: Sheet = { webkitMask: "blanchedalmond" };
        static BLUE: Sheet = { webkitMask: "blue" };
        static BLUEVIOLET: Sheet = { webkitMask: "blueviolet" };
        static BROWN: Sheet = { webkitMask: "brown" };
        static BURLYWOOD: Sheet = { webkitMask: "burlywood" };
        static CADETBLUE: Sheet = { webkitMask: "cadetblue" };
        static CHARTREUSE: Sheet = { webkitMask: "chartreuse" };
        static CHOCOLATE: Sheet = { webkitMask: "chocolate" };
        static CORAL: Sheet = { webkitMask: "coral" };
        static CORNFLOWERBLUE: Sheet = { webkitMask: "cornflowerblue" };
        static CORNSILK: Sheet = { webkitMask: "cornsilk" };
        static CRIMSON: Sheet = { webkitMask: "crimson" };
        static CYAN: Sheet = { webkitMask: "cyan" };
        static DARKBLUE: Sheet = { webkitMask: "darkblue" };
        static DARKCYAN: Sheet = { webkitMask: "darkcyan" };
        static DARKGOLDENROD: Sheet = { webkitMask: "darkgoldenrod" };
        static DARKGRAY: Sheet = { webkitMask: "darkgray" };
        static DARKGREEN: Sheet = { webkitMask: "darkgreen" };
        static DARKGREY: Sheet = { webkitMask: "darkgrey" };
        static DARKKHAKI: Sheet = { webkitMask: "darkkhaki" };
        static DARKMAGENTA: Sheet = { webkitMask: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { webkitMask: "darkolivegreen" };
        static DARKORANGE: Sheet = { webkitMask: "darkorange" };
        static DARKORCHID: Sheet = { webkitMask: "darkorchid" };
        static DARKRED: Sheet = { webkitMask: "darkred" };
        static DARKSALMON: Sheet = { webkitMask: "darksalmon" };
        static DARKSEAGREEN: Sheet = { webkitMask: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { webkitMask: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { webkitMask: "darkslategray" };
        static DARKSLATEGREY: Sheet = { webkitMask: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { webkitMask: "darkturquoise" };
        static DARKVIOLET: Sheet = { webkitMask: "darkviolet" };
        static DEEPPINK: Sheet = { webkitMask: "deeppink" };
        static DEEPSKYBLUE: Sheet = { webkitMask: "deepskyblue" };
        static DIMGRAY: Sheet = { webkitMask: "dimgray" };
        static DIMGREY: Sheet = { webkitMask: "dimgrey" };
        static DODGERBLUE: Sheet = { webkitMask: "dodgerblue" };
        static FIREBRICK: Sheet = { webkitMask: "firebrick" };
        static FLORALWHITE: Sheet = { webkitMask: "floralwhite" };
        static FORESTGREEN: Sheet = { webkitMask: "forestgreen" };
        static FUCHSIA: Sheet = { webkitMask: "fuchsia" };
        static GAINSBORO: Sheet = { webkitMask: "gainsboro" };
        static GHOSTWHITE: Sheet = { webkitMask: "ghostwhite" };
        static GOLD: Sheet = { webkitMask: "gold" };
        static GOLDENROD: Sheet = { webkitMask: "goldenrod" };
        static GRAY: Sheet = { webkitMask: "gray" };
        static GREEN: Sheet = { webkitMask: "green" };
        static GREENYELLOW: Sheet = { webkitMask: "greenyellow" };
        static GREY: Sheet = { webkitMask: "grey" };
        static HONEYDEW: Sheet = { webkitMask: "honeydew" };
        static HOTPINK: Sheet = { webkitMask: "hotpink" };
        static INDIANRED: Sheet = { webkitMask: "indianred" };
        static INDIGO: Sheet = { webkitMask: "indigo" };
        static IVORY: Sheet = { webkitMask: "ivory" };
        static KHAKI: Sheet = { webkitMask: "khaki" };
        static LAVENDER: Sheet = { webkitMask: "lavender" };
        static LAVENDERBLUSH: Sheet = { webkitMask: "lavenderblush" };
        static LAWNGREEN: Sheet = { webkitMask: "lawngreen" };
        static LEMONCHIFFON: Sheet = { webkitMask: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { webkitMask: "lightblue" };
        static LIGHTCORAL: Sheet = { webkitMask: "lightcoral" };
        static LIGHTCYAN: Sheet = { webkitMask: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { webkitMask: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { webkitMask: "lightgray" };
        static LIGHTGREEN: Sheet = { webkitMask: "lightgreen" };
        static LIGHTGREY: Sheet = { webkitMask: "lightgrey" };
        static LIGHTPINK: Sheet = { webkitMask: "lightpink" };
        static LIGHTSALMON: Sheet = { webkitMask: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { webkitMask: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { webkitMask: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { webkitMask: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { webkitMask: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { webkitMask: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { webkitMask: "lightyellow" };
        static LIME: Sheet = { webkitMask: "lime" };
        static LIMEGREEN: Sheet = { webkitMask: "limegreen" };
        static LINEN: Sheet = { webkitMask: "linen" };
        static MAGENTA: Sheet = { webkitMask: "magenta" };
        static MAROON: Sheet = { webkitMask: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { webkitMask: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { webkitMask: "mediumblue" };
        static MEDIUMORCHID: Sheet = { webkitMask: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { webkitMask: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { webkitMask: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { webkitMask: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { webkitMask: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { webkitMask: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { webkitMask: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { webkitMask: "midnightblue" };
        static MINTCREAM: Sheet = { webkitMask: "mintcream" };
        static MISTYROSE: Sheet = { webkitMask: "mistyrose" };
        static MOCCASIN: Sheet = { webkitMask: "moccasin" };
        static NAVAJOWHITE: Sheet = { webkitMask: "navajowhite" };
        static NAVY: Sheet = { webkitMask: "navy" };
        static OLDLACE: Sheet = { webkitMask: "oldlace" };
        static OLIVE: Sheet = { webkitMask: "olive" };
        static OLIVEDRAB: Sheet = { webkitMask: "olivedrab" };
        static ORANGE: Sheet = { webkitMask: "orange" };
        static ORANGERED: Sheet = { webkitMask: "orangered" };
        static ORCHID: Sheet = { webkitMask: "orchid" };
        static PALEGOLDENROD: Sheet = { webkitMask: "palegoldenrod" };
        static PALEGREEN: Sheet = { webkitMask: "palegreen" };
        static PALETURQUOISE: Sheet = { webkitMask: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { webkitMask: "palevioletred" };
        static PAPAYAWHIP: Sheet = { webkitMask: "papayawhip" };
        static PEACHPUFF: Sheet = { webkitMask: "peachpuff" };
        static PERU: Sheet = { webkitMask: "peru" };
        static PINK: Sheet = { webkitMask: "pink" };
        static PLUM: Sheet = { webkitMask: "plum" };
        static POWDERBLUE: Sheet = { webkitMask: "powderblue" };
        static PURPLE: Sheet = { webkitMask: "purple" };
        static REBECCAPURPLE: Sheet = { webkitMask: "rebeccapurple" };
        static RED: Sheet = { webkitMask: "red" };
        static ROSYBROWN: Sheet = { webkitMask: "rosybrown" };
        static ROYALBLUE: Sheet = { webkitMask: "royalblue" };
        static SADDLEBROWN: Sheet = { webkitMask: "saddlebrown" };
        static SALMON: Sheet = { webkitMask: "salmon" };
        static SANDYBROWN: Sheet = { webkitMask: "sandybrown" };
        static SEAGREEN: Sheet = { webkitMask: "seagreen" };
        static SEASHELL: Sheet = { webkitMask: "seashell" };
        static SIENNA: Sheet = { webkitMask: "sienna" };
        static SILVER: Sheet = { webkitMask: "silver" };
        static SKYBLUE: Sheet = { webkitMask: "skyblue" };
        static SLATEBLUE: Sheet = { webkitMask: "slateblue" };
        static SLATEGRAY: Sheet = { webkitMask: "slategray" };
        static SLATEGREY: Sheet = { webkitMask: "slategrey" };
        static SNOW: Sheet = { webkitMask: "snow" };
        static SPRINGGREEN: Sheet = { webkitMask: "springgreen" };
        static STEELBLUE: Sheet = { webkitMask: "steelblue" };
        static TAN: Sheet = { webkitMask: "tan" };
        static TEAL: Sheet = { webkitMask: "teal" };
        static THISTLE: Sheet = { webkitMask: "thistle" };
        static TOMATO: Sheet = { webkitMask: "tomato" };
        static TURQUOISE: Sheet = { webkitMask: "turquoise" };
        static VIOLET: Sheet = { webkitMask: "violet" };
        static WHEAT: Sheet = { webkitMask: "wheat" };
        static WHITE: Sheet = { webkitMask: "white" };
        static WHITESMOKE: Sheet = { webkitMask: "whitesmoke" };
        static YELLOW: Sheet = { webkitMask: "yellow" };
        static YELLOWGREEN: Sheet = { webkitMask: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { webkitMask: "currentcolor" };
        static ACTIVEBORDER: Sheet = { webkitMask: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { webkitMask: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { webkitMask: "AppWorkspace" };
        static BACKGROUND: Sheet = { webkitMask: "Background" };
        static BUTTONFACE: Sheet = { webkitMask: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { webkitMask: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { webkitMask: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { webkitMask: "ButtonText" };
        static CAPTIONTEXT: Sheet = { webkitMask: "CaptionText" };
        static GRAYTEXT: Sheet = { webkitMask: "GrayText" };
        static HIGHLIGHT: Sheet = { webkitMask: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { webkitMask: "HighlightText" };
        static INACTIVEBORDER: Sheet = { webkitMask: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { webkitMask: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { webkitMask: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { webkitMask: "InfoBackground" };
        static INFOTEXT: Sheet = { webkitMask: "InfoText" };
        static MENU: Sheet = { webkitMask: "Menu" };
        static MENUTEXT: Sheet = { webkitMask: "MenuText" };
        static SCROLLBAR: Sheet = { webkitMask: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { webkitMask: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { webkitMask: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { webkitMask: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { webkitMask: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { webkitMask: "ThreeDShadow" };
        static WINDOW: Sheet = { webkitMask: "Window" };
        static WINDOWFRAME: Sheet = { webkitMask: "WindowFrame" };
        static WINDOWTEXT: Sheet = { webkitMask: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ webkitMask: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ webkitMask: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ webkitMask: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ webkitMask: Resolution.x(...params) });
        static TO: Sheet = { webkitMask: "to" };
        static LEFT: Sheet = { webkitMask: "left" };
        static RIGHT: Sheet = { webkitMask: "right" };
        static TOP: Sheet = { webkitMask: "top" };
        static BOTTOM: Sheet = { webkitMask: "bottom" };
        static cap = (...params: number[]): Sheet => ({ webkitMask: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitMask: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitMask: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitMask: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitMask: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitMask: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitMask: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitMask: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitMask: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitMask: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitMask: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitMask: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitMask: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitMask: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitMask: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitMask: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitMask: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitMask: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitMask: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitMask: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitMask: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitMask: Length.fr(...params) });
        static CIRCLE: Sheet = { webkitMask: "circle" };
        static ELLIPSE: Sheet = { webkitMask: "ellipse" };
        static CLOSEST_SIDE: Sheet = { webkitMask: "closest-side" };
        static FARTHEST_SIDE: Sheet = { webkitMask: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { webkitMask: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { webkitMask: "farthest-corner" };
        static AT: Sheet = { webkitMask: "at" };
        static CENTER: Sheet = { webkitMask: "center" };
        static AUTO: Sheet = { webkitMask: "auto" };
        static COVER: Sheet = { webkitMask: "cover" };
        static CONTAIN: Sheet = { webkitMask: "contain" };
        static REPEAT_X: Sheet = { webkitMask: "repeat-x" };
        static REPEAT_Y: Sheet = { webkitMask: "repeat-y" };
        static REPEAT: Sheet = { webkitMask: "repeat" };
        static SPACE: Sheet = { webkitMask: "space" };
        static ROUND: Sheet = { webkitMask: "round" };
        static NO_REPEAT: Sheet = { webkitMask: "no-repeat" };
        static BORDER_BOX: Sheet = { webkitMask: "border-box" };
        static PADDING_BOX: Sheet = { webkitMask: "padding-box" };
        static CONTENT_BOX: Sheet = { webkitMask: "content-box" };
        static BORDER: Sheet = { webkitMask: "border" };
        static PADDING: Sheet = { webkitMask: "padding" };
        static CONTENT: Sheet = { webkitMask: "content" };
        static TEXT: Sheet = { webkitMask: "text" };
    }
    export class WebkitMaskAttachment {
        static set = (...params: Param[]): Sheet => ({ webkitMaskAttachment: buildProperty(params) });
        static SCROLL: Sheet = { webkitMaskAttachment: "scroll" };
        static FIXED: Sheet = { webkitMaskAttachment: "fixed" };
        static LOCAL: Sheet = { webkitMaskAttachment: "local" };
    }
    export class WebkitMaskClip {
        static set = (...params: Param[]): Sheet => ({ webkitMaskClip: buildProperty(params) });
        static BORDER_BOX: Sheet = { webkitMaskClip: "border-box" };
        static PADDING_BOX: Sheet = { webkitMaskClip: "padding-box" };
        static CONTENT_BOX: Sheet = { webkitMaskClip: "content-box" };
        static BORDER: Sheet = { webkitMaskClip: "border" };
        static PADDING: Sheet = { webkitMaskClip: "padding" };
        static CONTENT: Sheet = { webkitMaskClip: "content" };
        static TEXT: Sheet = { webkitMaskClip: "text" };
    }
    export class WebkitMaskComposite {
        static set = (...params: Param[]): Sheet => ({ webkitMaskComposite: buildProperty(params) });
        static CLEAR: Sheet = { webkitMaskComposite: "clear" };
        static COPY: Sheet = { webkitMaskComposite: "copy" };
        static SOURCE_OVER: Sheet = { webkitMaskComposite: "source-over" };
        static SOURCE_IN: Sheet = { webkitMaskComposite: "source-in" };
        static SOURCE_OUT: Sheet = { webkitMaskComposite: "source-out" };
        static SOURCE_ATOP: Sheet = { webkitMaskComposite: "source-atop" };
        static DESTINATION_OVER: Sheet = { webkitMaskComposite: "destination-over" };
        static DESTINATION_IN: Sheet = { webkitMaskComposite: "destination-in" };
        static DESTINATION_OUT: Sheet = { webkitMaskComposite: "destination-out" };
        static DESTINATION_ATOP: Sheet = { webkitMaskComposite: "destination-atop" };
        static XOR: Sheet = { webkitMaskComposite: "xor" };
    }
    export class WebkitMaskImage {
        static set = (...params: Param[]): Sheet => ({ webkitMaskImage: buildProperty(params) });
        static NONE: Sheet = { webkitMaskImage: "none" };
        static X = (...params: number[]): Sheet => ({ webkitMaskImage: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ webkitMaskImage: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ webkitMaskImage: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ webkitMaskImage: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ webkitMaskImage: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { webkitMaskImage: "transparent" };
        static ALICEBLUE: Sheet = { webkitMaskImage: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { webkitMaskImage: "antiquewhite" };
        static AQUA: Sheet = { webkitMaskImage: "aqua" };
        static AQUAMARINE: Sheet = { webkitMaskImage: "aquamarine" };
        static AZURE: Sheet = { webkitMaskImage: "azure" };
        static BEIGE: Sheet = { webkitMaskImage: "beige" };
        static BISQUE: Sheet = { webkitMaskImage: "bisque" };
        static BLACK: Sheet = { webkitMaskImage: "black" };
        static BLANCHEDALMOND: Sheet = { webkitMaskImage: "blanchedalmond" };
        static BLUE: Sheet = { webkitMaskImage: "blue" };
        static BLUEVIOLET: Sheet = { webkitMaskImage: "blueviolet" };
        static BROWN: Sheet = { webkitMaskImage: "brown" };
        static BURLYWOOD: Sheet = { webkitMaskImage: "burlywood" };
        static CADETBLUE: Sheet = { webkitMaskImage: "cadetblue" };
        static CHARTREUSE: Sheet = { webkitMaskImage: "chartreuse" };
        static CHOCOLATE: Sheet = { webkitMaskImage: "chocolate" };
        static CORAL: Sheet = { webkitMaskImage: "coral" };
        static CORNFLOWERBLUE: Sheet = { webkitMaskImage: "cornflowerblue" };
        static CORNSILK: Sheet = { webkitMaskImage: "cornsilk" };
        static CRIMSON: Sheet = { webkitMaskImage: "crimson" };
        static CYAN: Sheet = { webkitMaskImage: "cyan" };
        static DARKBLUE: Sheet = { webkitMaskImage: "darkblue" };
        static DARKCYAN: Sheet = { webkitMaskImage: "darkcyan" };
        static DARKGOLDENROD: Sheet = { webkitMaskImage: "darkgoldenrod" };
        static DARKGRAY: Sheet = { webkitMaskImage: "darkgray" };
        static DARKGREEN: Sheet = { webkitMaskImage: "darkgreen" };
        static DARKGREY: Sheet = { webkitMaskImage: "darkgrey" };
        static DARKKHAKI: Sheet = { webkitMaskImage: "darkkhaki" };
        static DARKMAGENTA: Sheet = { webkitMaskImage: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { webkitMaskImage: "darkolivegreen" };
        static DARKORANGE: Sheet = { webkitMaskImage: "darkorange" };
        static DARKORCHID: Sheet = { webkitMaskImage: "darkorchid" };
        static DARKRED: Sheet = { webkitMaskImage: "darkred" };
        static DARKSALMON: Sheet = { webkitMaskImage: "darksalmon" };
        static DARKSEAGREEN: Sheet = { webkitMaskImage: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { webkitMaskImage: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { webkitMaskImage: "darkslategray" };
        static DARKSLATEGREY: Sheet = { webkitMaskImage: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { webkitMaskImage: "darkturquoise" };
        static DARKVIOLET: Sheet = { webkitMaskImage: "darkviolet" };
        static DEEPPINK: Sheet = { webkitMaskImage: "deeppink" };
        static DEEPSKYBLUE: Sheet = { webkitMaskImage: "deepskyblue" };
        static DIMGRAY: Sheet = { webkitMaskImage: "dimgray" };
        static DIMGREY: Sheet = { webkitMaskImage: "dimgrey" };
        static DODGERBLUE: Sheet = { webkitMaskImage: "dodgerblue" };
        static FIREBRICK: Sheet = { webkitMaskImage: "firebrick" };
        static FLORALWHITE: Sheet = { webkitMaskImage: "floralwhite" };
        static FORESTGREEN: Sheet = { webkitMaskImage: "forestgreen" };
        static FUCHSIA: Sheet = { webkitMaskImage: "fuchsia" };
        static GAINSBORO: Sheet = { webkitMaskImage: "gainsboro" };
        static GHOSTWHITE: Sheet = { webkitMaskImage: "ghostwhite" };
        static GOLD: Sheet = { webkitMaskImage: "gold" };
        static GOLDENROD: Sheet = { webkitMaskImage: "goldenrod" };
        static GRAY: Sheet = { webkitMaskImage: "gray" };
        static GREEN: Sheet = { webkitMaskImage: "green" };
        static GREENYELLOW: Sheet = { webkitMaskImage: "greenyellow" };
        static GREY: Sheet = { webkitMaskImage: "grey" };
        static HONEYDEW: Sheet = { webkitMaskImage: "honeydew" };
        static HOTPINK: Sheet = { webkitMaskImage: "hotpink" };
        static INDIANRED: Sheet = { webkitMaskImage: "indianred" };
        static INDIGO: Sheet = { webkitMaskImage: "indigo" };
        static IVORY: Sheet = { webkitMaskImage: "ivory" };
        static KHAKI: Sheet = { webkitMaskImage: "khaki" };
        static LAVENDER: Sheet = { webkitMaskImage: "lavender" };
        static LAVENDERBLUSH: Sheet = { webkitMaskImage: "lavenderblush" };
        static LAWNGREEN: Sheet = { webkitMaskImage: "lawngreen" };
        static LEMONCHIFFON: Sheet = { webkitMaskImage: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { webkitMaskImage: "lightblue" };
        static LIGHTCORAL: Sheet = { webkitMaskImage: "lightcoral" };
        static LIGHTCYAN: Sheet = { webkitMaskImage: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { webkitMaskImage: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { webkitMaskImage: "lightgray" };
        static LIGHTGREEN: Sheet = { webkitMaskImage: "lightgreen" };
        static LIGHTGREY: Sheet = { webkitMaskImage: "lightgrey" };
        static LIGHTPINK: Sheet = { webkitMaskImage: "lightpink" };
        static LIGHTSALMON: Sheet = { webkitMaskImage: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { webkitMaskImage: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { webkitMaskImage: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { webkitMaskImage: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { webkitMaskImage: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { webkitMaskImage: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { webkitMaskImage: "lightyellow" };
        static LIME: Sheet = { webkitMaskImage: "lime" };
        static LIMEGREEN: Sheet = { webkitMaskImage: "limegreen" };
        static LINEN: Sheet = { webkitMaskImage: "linen" };
        static MAGENTA: Sheet = { webkitMaskImage: "magenta" };
        static MAROON: Sheet = { webkitMaskImage: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { webkitMaskImage: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { webkitMaskImage: "mediumblue" };
        static MEDIUMORCHID: Sheet = { webkitMaskImage: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { webkitMaskImage: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { webkitMaskImage: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { webkitMaskImage: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { webkitMaskImage: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { webkitMaskImage: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { webkitMaskImage: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { webkitMaskImage: "midnightblue" };
        static MINTCREAM: Sheet = { webkitMaskImage: "mintcream" };
        static MISTYROSE: Sheet = { webkitMaskImage: "mistyrose" };
        static MOCCASIN: Sheet = { webkitMaskImage: "moccasin" };
        static NAVAJOWHITE: Sheet = { webkitMaskImage: "navajowhite" };
        static NAVY: Sheet = { webkitMaskImage: "navy" };
        static OLDLACE: Sheet = { webkitMaskImage: "oldlace" };
        static OLIVE: Sheet = { webkitMaskImage: "olive" };
        static OLIVEDRAB: Sheet = { webkitMaskImage: "olivedrab" };
        static ORANGE: Sheet = { webkitMaskImage: "orange" };
        static ORANGERED: Sheet = { webkitMaskImage: "orangered" };
        static ORCHID: Sheet = { webkitMaskImage: "orchid" };
        static PALEGOLDENROD: Sheet = { webkitMaskImage: "palegoldenrod" };
        static PALEGREEN: Sheet = { webkitMaskImage: "palegreen" };
        static PALETURQUOISE: Sheet = { webkitMaskImage: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { webkitMaskImage: "palevioletred" };
        static PAPAYAWHIP: Sheet = { webkitMaskImage: "papayawhip" };
        static PEACHPUFF: Sheet = { webkitMaskImage: "peachpuff" };
        static PERU: Sheet = { webkitMaskImage: "peru" };
        static PINK: Sheet = { webkitMaskImage: "pink" };
        static PLUM: Sheet = { webkitMaskImage: "plum" };
        static POWDERBLUE: Sheet = { webkitMaskImage: "powderblue" };
        static PURPLE: Sheet = { webkitMaskImage: "purple" };
        static REBECCAPURPLE: Sheet = { webkitMaskImage: "rebeccapurple" };
        static RED: Sheet = { webkitMaskImage: "red" };
        static ROSYBROWN: Sheet = { webkitMaskImage: "rosybrown" };
        static ROYALBLUE: Sheet = { webkitMaskImage: "royalblue" };
        static SADDLEBROWN: Sheet = { webkitMaskImage: "saddlebrown" };
        static SALMON: Sheet = { webkitMaskImage: "salmon" };
        static SANDYBROWN: Sheet = { webkitMaskImage: "sandybrown" };
        static SEAGREEN: Sheet = { webkitMaskImage: "seagreen" };
        static SEASHELL: Sheet = { webkitMaskImage: "seashell" };
        static SIENNA: Sheet = { webkitMaskImage: "sienna" };
        static SILVER: Sheet = { webkitMaskImage: "silver" };
        static SKYBLUE: Sheet = { webkitMaskImage: "skyblue" };
        static SLATEBLUE: Sheet = { webkitMaskImage: "slateblue" };
        static SLATEGRAY: Sheet = { webkitMaskImage: "slategray" };
        static SLATEGREY: Sheet = { webkitMaskImage: "slategrey" };
        static SNOW: Sheet = { webkitMaskImage: "snow" };
        static SPRINGGREEN: Sheet = { webkitMaskImage: "springgreen" };
        static STEELBLUE: Sheet = { webkitMaskImage: "steelblue" };
        static TAN: Sheet = { webkitMaskImage: "tan" };
        static TEAL: Sheet = { webkitMaskImage: "teal" };
        static THISTLE: Sheet = { webkitMaskImage: "thistle" };
        static TOMATO: Sheet = { webkitMaskImage: "tomato" };
        static TURQUOISE: Sheet = { webkitMaskImage: "turquoise" };
        static VIOLET: Sheet = { webkitMaskImage: "violet" };
        static WHEAT: Sheet = { webkitMaskImage: "wheat" };
        static WHITE: Sheet = { webkitMaskImage: "white" };
        static WHITESMOKE: Sheet = { webkitMaskImage: "whitesmoke" };
        static YELLOW: Sheet = { webkitMaskImage: "yellow" };
        static YELLOWGREEN: Sheet = { webkitMaskImage: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { webkitMaskImage: "currentcolor" };
        static ACTIVEBORDER: Sheet = { webkitMaskImage: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { webkitMaskImage: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { webkitMaskImage: "AppWorkspace" };
        static BACKGROUND: Sheet = { webkitMaskImage: "Background" };
        static BUTTONFACE: Sheet = { webkitMaskImage: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { webkitMaskImage: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { webkitMaskImage: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { webkitMaskImage: "ButtonText" };
        static CAPTIONTEXT: Sheet = { webkitMaskImage: "CaptionText" };
        static GRAYTEXT: Sheet = { webkitMaskImage: "GrayText" };
        static HIGHLIGHT: Sheet = { webkitMaskImage: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { webkitMaskImage: "HighlightText" };
        static INACTIVEBORDER: Sheet = { webkitMaskImage: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { webkitMaskImage: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { webkitMaskImage: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { webkitMaskImage: "InfoBackground" };
        static INFOTEXT: Sheet = { webkitMaskImage: "InfoText" };
        static MENU: Sheet = { webkitMaskImage: "Menu" };
        static MENUTEXT: Sheet = { webkitMaskImage: "MenuText" };
        static SCROLLBAR: Sheet = { webkitMaskImage: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { webkitMaskImage: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { webkitMaskImage: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { webkitMaskImage: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { webkitMaskImage: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { webkitMaskImage: "ThreeDShadow" };
        static WINDOW: Sheet = { webkitMaskImage: "Window" };
        static WINDOWFRAME: Sheet = { webkitMaskImage: "WindowFrame" };
        static WINDOWTEXT: Sheet = { webkitMaskImage: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ webkitMaskImage: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ webkitMaskImage: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ webkitMaskImage: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ webkitMaskImage: Resolution.x(...params) });
        static TO: Sheet = { webkitMaskImage: "to" };
        static LEFT: Sheet = { webkitMaskImage: "left" };
        static RIGHT: Sheet = { webkitMaskImage: "right" };
        static TOP: Sheet = { webkitMaskImage: "top" };
        static BOTTOM: Sheet = { webkitMaskImage: "bottom" };
        static cap = (...params: number[]): Sheet => ({ webkitMaskImage: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitMaskImage: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitMaskImage: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitMaskImage: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitMaskImage: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitMaskImage: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitMaskImage: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitMaskImage: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitMaskImage: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitMaskImage: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitMaskImage: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitMaskImage: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitMaskImage: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitMaskImage: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitMaskImage: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitMaskImage: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitMaskImage: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitMaskImage: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitMaskImage: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitMaskImage: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitMaskImage: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitMaskImage: Length.fr(...params) });
        static CIRCLE: Sheet = { webkitMaskImage: "circle" };
        static ELLIPSE: Sheet = { webkitMaskImage: "ellipse" };
        static CLOSEST_SIDE: Sheet = { webkitMaskImage: "closest-side" };
        static FARTHEST_SIDE: Sheet = { webkitMaskImage: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { webkitMaskImage: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { webkitMaskImage: "farthest-corner" };
        static AT: Sheet = { webkitMaskImage: "at" };
        static CENTER: Sheet = { webkitMaskImage: "center" };
    }
    export class WebkitMaskOrigin {
        static set = (...params: Param[]): Sheet => ({ webkitMaskOrigin: buildProperty(params) });
        static BORDER_BOX: Sheet = { webkitMaskOrigin: "border-box" };
        static PADDING_BOX: Sheet = { webkitMaskOrigin: "padding-box" };
        static CONTENT_BOX: Sheet = { webkitMaskOrigin: "content-box" };
        static BORDER: Sheet = { webkitMaskOrigin: "border" };
        static PADDING: Sheet = { webkitMaskOrigin: "padding" };
        static CONTENT: Sheet = { webkitMaskOrigin: "content" };
    }
    export class WebkitMaskPosition {
        static set = (...params: Param[]): Sheet => ({ webkitMaskPosition: buildProperty(params) });
        static LEFT: Sheet = { webkitMaskPosition: "left" };
        static CENTER: Sheet = { webkitMaskPosition: "center" };
        static RIGHT: Sheet = { webkitMaskPosition: "right" };
        static TOP: Sheet = { webkitMaskPosition: "top" };
        static BOTTOM: Sheet = { webkitMaskPosition: "bottom" };
        static cap = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ webkitMaskPosition: Length.X(...params) });
    }
    export class WebkitMaskPositionX {
        static set = (...params: Param[]): Sheet => ({ webkitMaskPositionX: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ webkitMaskPositionX: Length.X(...params) });
        static LEFT: Sheet = { webkitMaskPositionX: "left" };
        static CENTER: Sheet = { webkitMaskPositionX: "center" };
        static RIGHT: Sheet = { webkitMaskPositionX: "right" };
    }
    export class WebkitMaskPositionY {
        static set = (...params: Param[]): Sheet => ({ webkitMaskPositionY: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ webkitMaskPositionY: Length.X(...params) });
        static TOP: Sheet = { webkitMaskPositionY: "top" };
        static CENTER: Sheet = { webkitMaskPositionY: "center" };
        static BOTTOM: Sheet = { webkitMaskPositionY: "bottom" };
    }
    export class WebkitMaskRepeat {
        static set = (...params: Param[]): Sheet => ({ webkitMaskRepeat: buildProperty(params) });
        static REPEAT_X: Sheet = { webkitMaskRepeat: "repeat-x" };
        static REPEAT_Y: Sheet = { webkitMaskRepeat: "repeat-y" };
        static REPEAT: Sheet = { webkitMaskRepeat: "repeat" };
        static SPACE: Sheet = { webkitMaskRepeat: "space" };
        static ROUND: Sheet = { webkitMaskRepeat: "round" };
        static NO_REPEAT: Sheet = { webkitMaskRepeat: "no-repeat" };
    }
    export class WebkitMaskRepeatX {
        static set = (...params: Param[]): Sheet => ({ webkitMaskRepeatX: buildProperty(params) });
        static REPEAT: Sheet = { webkitMaskRepeatX: "repeat" };
        static NO_REPEAT: Sheet = { webkitMaskRepeatX: "no-repeat" };
        static SPACE: Sheet = { webkitMaskRepeatX: "space" };
        static ROUND: Sheet = { webkitMaskRepeatX: "round" };
    }
    export class WebkitMaskRepeatY {
        static set = (...params: Param[]): Sheet => ({ webkitMaskRepeatY: buildProperty(params) });
        static REPEAT: Sheet = { webkitMaskRepeatY: "repeat" };
        static NO_REPEAT: Sheet = { webkitMaskRepeatY: "no-repeat" };
        static SPACE: Sheet = { webkitMaskRepeatY: "space" };
        static ROUND: Sheet = { webkitMaskRepeatY: "round" };
    }
    export class WebkitMaskSize {
        static set = (...params: Param[]): Sheet => ({ webkitMaskSize: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ webkitMaskSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitMaskSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitMaskSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitMaskSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitMaskSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitMaskSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitMaskSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitMaskSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitMaskSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitMaskSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitMaskSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitMaskSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitMaskSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitMaskSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitMaskSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitMaskSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitMaskSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitMaskSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitMaskSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitMaskSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitMaskSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitMaskSize: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ webkitMaskSize: Length.X(...params) });
        static AUTO: Sheet = { webkitMaskSize: "auto" };
        static COVER: Sheet = { webkitMaskSize: "cover" };
        static CONTAIN: Sheet = { webkitMaskSize: "contain" };
    }
    export class WebkitOverflowScrolling {
        static set = (...params: Param[]): Sheet => ({ webkitOverflowScrolling: buildProperty(params) });
        static AUTO: Sheet = { webkitOverflowScrolling: "auto" };
        static TOUCH: Sheet = { webkitOverflowScrolling: "touch" };
    }
    export class WebkitTapHighlightColor {
        static set = (...params: Param[]): Sheet => ({ webkitTapHighlightColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ webkitTapHighlightColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ webkitTapHighlightColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ webkitTapHighlightColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ webkitTapHighlightColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ webkitTapHighlightColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { webkitTapHighlightColor: "transparent" };
        static ALICEBLUE: Sheet = { webkitTapHighlightColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { webkitTapHighlightColor: "antiquewhite" };
        static AQUA: Sheet = { webkitTapHighlightColor: "aqua" };
        static AQUAMARINE: Sheet = { webkitTapHighlightColor: "aquamarine" };
        static AZURE: Sheet = { webkitTapHighlightColor: "azure" };
        static BEIGE: Sheet = { webkitTapHighlightColor: "beige" };
        static BISQUE: Sheet = { webkitTapHighlightColor: "bisque" };
        static BLACK: Sheet = { webkitTapHighlightColor: "black" };
        static BLANCHEDALMOND: Sheet = { webkitTapHighlightColor: "blanchedalmond" };
        static BLUE: Sheet = { webkitTapHighlightColor: "blue" };
        static BLUEVIOLET: Sheet = { webkitTapHighlightColor: "blueviolet" };
        static BROWN: Sheet = { webkitTapHighlightColor: "brown" };
        static BURLYWOOD: Sheet = { webkitTapHighlightColor: "burlywood" };
        static CADETBLUE: Sheet = { webkitTapHighlightColor: "cadetblue" };
        static CHARTREUSE: Sheet = { webkitTapHighlightColor: "chartreuse" };
        static CHOCOLATE: Sheet = { webkitTapHighlightColor: "chocolate" };
        static CORAL: Sheet = { webkitTapHighlightColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { webkitTapHighlightColor: "cornflowerblue" };
        static CORNSILK: Sheet = { webkitTapHighlightColor: "cornsilk" };
        static CRIMSON: Sheet = { webkitTapHighlightColor: "crimson" };
        static CYAN: Sheet = { webkitTapHighlightColor: "cyan" };
        static DARKBLUE: Sheet = { webkitTapHighlightColor: "darkblue" };
        static DARKCYAN: Sheet = { webkitTapHighlightColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { webkitTapHighlightColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { webkitTapHighlightColor: "darkgray" };
        static DARKGREEN: Sheet = { webkitTapHighlightColor: "darkgreen" };
        static DARKGREY: Sheet = { webkitTapHighlightColor: "darkgrey" };
        static DARKKHAKI: Sheet = { webkitTapHighlightColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { webkitTapHighlightColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { webkitTapHighlightColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { webkitTapHighlightColor: "darkorange" };
        static DARKORCHID: Sheet = { webkitTapHighlightColor: "darkorchid" };
        static DARKRED: Sheet = { webkitTapHighlightColor: "darkred" };
        static DARKSALMON: Sheet = { webkitTapHighlightColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { webkitTapHighlightColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { webkitTapHighlightColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { webkitTapHighlightColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { webkitTapHighlightColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { webkitTapHighlightColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { webkitTapHighlightColor: "darkviolet" };
        static DEEPPINK: Sheet = { webkitTapHighlightColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { webkitTapHighlightColor: "deepskyblue" };
        static DIMGRAY: Sheet = { webkitTapHighlightColor: "dimgray" };
        static DIMGREY: Sheet = { webkitTapHighlightColor: "dimgrey" };
        static DODGERBLUE: Sheet = { webkitTapHighlightColor: "dodgerblue" };
        static FIREBRICK: Sheet = { webkitTapHighlightColor: "firebrick" };
        static FLORALWHITE: Sheet = { webkitTapHighlightColor: "floralwhite" };
        static FORESTGREEN: Sheet = { webkitTapHighlightColor: "forestgreen" };
        static FUCHSIA: Sheet = { webkitTapHighlightColor: "fuchsia" };
        static GAINSBORO: Sheet = { webkitTapHighlightColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { webkitTapHighlightColor: "ghostwhite" };
        static GOLD: Sheet = { webkitTapHighlightColor: "gold" };
        static GOLDENROD: Sheet = { webkitTapHighlightColor: "goldenrod" };
        static GRAY: Sheet = { webkitTapHighlightColor: "gray" };
        static GREEN: Sheet = { webkitTapHighlightColor: "green" };
        static GREENYELLOW: Sheet = { webkitTapHighlightColor: "greenyellow" };
        static GREY: Sheet = { webkitTapHighlightColor: "grey" };
        static HONEYDEW: Sheet = { webkitTapHighlightColor: "honeydew" };
        static HOTPINK: Sheet = { webkitTapHighlightColor: "hotpink" };
        static INDIANRED: Sheet = { webkitTapHighlightColor: "indianred" };
        static INDIGO: Sheet = { webkitTapHighlightColor: "indigo" };
        static IVORY: Sheet = { webkitTapHighlightColor: "ivory" };
        static KHAKI: Sheet = { webkitTapHighlightColor: "khaki" };
        static LAVENDER: Sheet = { webkitTapHighlightColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { webkitTapHighlightColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { webkitTapHighlightColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { webkitTapHighlightColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { webkitTapHighlightColor: "lightblue" };
        static LIGHTCORAL: Sheet = { webkitTapHighlightColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { webkitTapHighlightColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { webkitTapHighlightColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { webkitTapHighlightColor: "lightgray" };
        static LIGHTGREEN: Sheet = { webkitTapHighlightColor: "lightgreen" };
        static LIGHTGREY: Sheet = { webkitTapHighlightColor: "lightgrey" };
        static LIGHTPINK: Sheet = { webkitTapHighlightColor: "lightpink" };
        static LIGHTSALMON: Sheet = { webkitTapHighlightColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { webkitTapHighlightColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { webkitTapHighlightColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { webkitTapHighlightColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { webkitTapHighlightColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { webkitTapHighlightColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { webkitTapHighlightColor: "lightyellow" };
        static LIME: Sheet = { webkitTapHighlightColor: "lime" };
        static LIMEGREEN: Sheet = { webkitTapHighlightColor: "limegreen" };
        static LINEN: Sheet = { webkitTapHighlightColor: "linen" };
        static MAGENTA: Sheet = { webkitTapHighlightColor: "magenta" };
        static MAROON: Sheet = { webkitTapHighlightColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { webkitTapHighlightColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { webkitTapHighlightColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { webkitTapHighlightColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { webkitTapHighlightColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { webkitTapHighlightColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { webkitTapHighlightColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { webkitTapHighlightColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { webkitTapHighlightColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { webkitTapHighlightColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { webkitTapHighlightColor: "midnightblue" };
        static MINTCREAM: Sheet = { webkitTapHighlightColor: "mintcream" };
        static MISTYROSE: Sheet = { webkitTapHighlightColor: "mistyrose" };
        static MOCCASIN: Sheet = { webkitTapHighlightColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { webkitTapHighlightColor: "navajowhite" };
        static NAVY: Sheet = { webkitTapHighlightColor: "navy" };
        static OLDLACE: Sheet = { webkitTapHighlightColor: "oldlace" };
        static OLIVE: Sheet = { webkitTapHighlightColor: "olive" };
        static OLIVEDRAB: Sheet = { webkitTapHighlightColor: "olivedrab" };
        static ORANGE: Sheet = { webkitTapHighlightColor: "orange" };
        static ORANGERED: Sheet = { webkitTapHighlightColor: "orangered" };
        static ORCHID: Sheet = { webkitTapHighlightColor: "orchid" };
        static PALEGOLDENROD: Sheet = { webkitTapHighlightColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { webkitTapHighlightColor: "palegreen" };
        static PALETURQUOISE: Sheet = { webkitTapHighlightColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { webkitTapHighlightColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { webkitTapHighlightColor: "papayawhip" };
        static PEACHPUFF: Sheet = { webkitTapHighlightColor: "peachpuff" };
        static PERU: Sheet = { webkitTapHighlightColor: "peru" };
        static PINK: Sheet = { webkitTapHighlightColor: "pink" };
        static PLUM: Sheet = { webkitTapHighlightColor: "plum" };
        static POWDERBLUE: Sheet = { webkitTapHighlightColor: "powderblue" };
        static PURPLE: Sheet = { webkitTapHighlightColor: "purple" };
        static REBECCAPURPLE: Sheet = { webkitTapHighlightColor: "rebeccapurple" };
        static RED: Sheet = { webkitTapHighlightColor: "red" };
        static ROSYBROWN: Sheet = { webkitTapHighlightColor: "rosybrown" };
        static ROYALBLUE: Sheet = { webkitTapHighlightColor: "royalblue" };
        static SADDLEBROWN: Sheet = { webkitTapHighlightColor: "saddlebrown" };
        static SALMON: Sheet = { webkitTapHighlightColor: "salmon" };
        static SANDYBROWN: Sheet = { webkitTapHighlightColor: "sandybrown" };
        static SEAGREEN: Sheet = { webkitTapHighlightColor: "seagreen" };
        static SEASHELL: Sheet = { webkitTapHighlightColor: "seashell" };
        static SIENNA: Sheet = { webkitTapHighlightColor: "sienna" };
        static SILVER: Sheet = { webkitTapHighlightColor: "silver" };
        static SKYBLUE: Sheet = { webkitTapHighlightColor: "skyblue" };
        static SLATEBLUE: Sheet = { webkitTapHighlightColor: "slateblue" };
        static SLATEGRAY: Sheet = { webkitTapHighlightColor: "slategray" };
        static SLATEGREY: Sheet = { webkitTapHighlightColor: "slategrey" };
        static SNOW: Sheet = { webkitTapHighlightColor: "snow" };
        static SPRINGGREEN: Sheet = { webkitTapHighlightColor: "springgreen" };
        static STEELBLUE: Sheet = { webkitTapHighlightColor: "steelblue" };
        static TAN: Sheet = { webkitTapHighlightColor: "tan" };
        static TEAL: Sheet = { webkitTapHighlightColor: "teal" };
        static THISTLE: Sheet = { webkitTapHighlightColor: "thistle" };
        static TOMATO: Sheet = { webkitTapHighlightColor: "tomato" };
        static TURQUOISE: Sheet = { webkitTapHighlightColor: "turquoise" };
        static VIOLET: Sheet = { webkitTapHighlightColor: "violet" };
        static WHEAT: Sheet = { webkitTapHighlightColor: "wheat" };
        static WHITE: Sheet = { webkitTapHighlightColor: "white" };
        static WHITESMOKE: Sheet = { webkitTapHighlightColor: "whitesmoke" };
        static YELLOW: Sheet = { webkitTapHighlightColor: "yellow" };
        static YELLOWGREEN: Sheet = { webkitTapHighlightColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { webkitTapHighlightColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { webkitTapHighlightColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { webkitTapHighlightColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { webkitTapHighlightColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { webkitTapHighlightColor: "Background" };
        static BUTTONFACE: Sheet = { webkitTapHighlightColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { webkitTapHighlightColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { webkitTapHighlightColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { webkitTapHighlightColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { webkitTapHighlightColor: "CaptionText" };
        static GRAYTEXT: Sheet = { webkitTapHighlightColor: "GrayText" };
        static HIGHLIGHT: Sheet = { webkitTapHighlightColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { webkitTapHighlightColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { webkitTapHighlightColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { webkitTapHighlightColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { webkitTapHighlightColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { webkitTapHighlightColor: "InfoBackground" };
        static INFOTEXT: Sheet = { webkitTapHighlightColor: "InfoText" };
        static MENU: Sheet = { webkitTapHighlightColor: "Menu" };
        static MENUTEXT: Sheet = { webkitTapHighlightColor: "MenuText" };
        static SCROLLBAR: Sheet = { webkitTapHighlightColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { webkitTapHighlightColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { webkitTapHighlightColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { webkitTapHighlightColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { webkitTapHighlightColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { webkitTapHighlightColor: "ThreeDShadow" };
        static WINDOW: Sheet = { webkitTapHighlightColor: "Window" };
        static WINDOWFRAME: Sheet = { webkitTapHighlightColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { webkitTapHighlightColor: "WindowText" };
    }
    export class WebkitTextFillColor {
        static set = (...params: Param[]): Sheet => ({ webkitTextFillColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ webkitTextFillColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ webkitTextFillColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ webkitTextFillColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ webkitTextFillColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ webkitTextFillColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { webkitTextFillColor: "transparent" };
        static ALICEBLUE: Sheet = { webkitTextFillColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { webkitTextFillColor: "antiquewhite" };
        static AQUA: Sheet = { webkitTextFillColor: "aqua" };
        static AQUAMARINE: Sheet = { webkitTextFillColor: "aquamarine" };
        static AZURE: Sheet = { webkitTextFillColor: "azure" };
        static BEIGE: Sheet = { webkitTextFillColor: "beige" };
        static BISQUE: Sheet = { webkitTextFillColor: "bisque" };
        static BLACK: Sheet = { webkitTextFillColor: "black" };
        static BLANCHEDALMOND: Sheet = { webkitTextFillColor: "blanchedalmond" };
        static BLUE: Sheet = { webkitTextFillColor: "blue" };
        static BLUEVIOLET: Sheet = { webkitTextFillColor: "blueviolet" };
        static BROWN: Sheet = { webkitTextFillColor: "brown" };
        static BURLYWOOD: Sheet = { webkitTextFillColor: "burlywood" };
        static CADETBLUE: Sheet = { webkitTextFillColor: "cadetblue" };
        static CHARTREUSE: Sheet = { webkitTextFillColor: "chartreuse" };
        static CHOCOLATE: Sheet = { webkitTextFillColor: "chocolate" };
        static CORAL: Sheet = { webkitTextFillColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { webkitTextFillColor: "cornflowerblue" };
        static CORNSILK: Sheet = { webkitTextFillColor: "cornsilk" };
        static CRIMSON: Sheet = { webkitTextFillColor: "crimson" };
        static CYAN: Sheet = { webkitTextFillColor: "cyan" };
        static DARKBLUE: Sheet = { webkitTextFillColor: "darkblue" };
        static DARKCYAN: Sheet = { webkitTextFillColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { webkitTextFillColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { webkitTextFillColor: "darkgray" };
        static DARKGREEN: Sheet = { webkitTextFillColor: "darkgreen" };
        static DARKGREY: Sheet = { webkitTextFillColor: "darkgrey" };
        static DARKKHAKI: Sheet = { webkitTextFillColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { webkitTextFillColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { webkitTextFillColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { webkitTextFillColor: "darkorange" };
        static DARKORCHID: Sheet = { webkitTextFillColor: "darkorchid" };
        static DARKRED: Sheet = { webkitTextFillColor: "darkred" };
        static DARKSALMON: Sheet = { webkitTextFillColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { webkitTextFillColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { webkitTextFillColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { webkitTextFillColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { webkitTextFillColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { webkitTextFillColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { webkitTextFillColor: "darkviolet" };
        static DEEPPINK: Sheet = { webkitTextFillColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { webkitTextFillColor: "deepskyblue" };
        static DIMGRAY: Sheet = { webkitTextFillColor: "dimgray" };
        static DIMGREY: Sheet = { webkitTextFillColor: "dimgrey" };
        static DODGERBLUE: Sheet = { webkitTextFillColor: "dodgerblue" };
        static FIREBRICK: Sheet = { webkitTextFillColor: "firebrick" };
        static FLORALWHITE: Sheet = { webkitTextFillColor: "floralwhite" };
        static FORESTGREEN: Sheet = { webkitTextFillColor: "forestgreen" };
        static FUCHSIA: Sheet = { webkitTextFillColor: "fuchsia" };
        static GAINSBORO: Sheet = { webkitTextFillColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { webkitTextFillColor: "ghostwhite" };
        static GOLD: Sheet = { webkitTextFillColor: "gold" };
        static GOLDENROD: Sheet = { webkitTextFillColor: "goldenrod" };
        static GRAY: Sheet = { webkitTextFillColor: "gray" };
        static GREEN: Sheet = { webkitTextFillColor: "green" };
        static GREENYELLOW: Sheet = { webkitTextFillColor: "greenyellow" };
        static GREY: Sheet = { webkitTextFillColor: "grey" };
        static HONEYDEW: Sheet = { webkitTextFillColor: "honeydew" };
        static HOTPINK: Sheet = { webkitTextFillColor: "hotpink" };
        static INDIANRED: Sheet = { webkitTextFillColor: "indianred" };
        static INDIGO: Sheet = { webkitTextFillColor: "indigo" };
        static IVORY: Sheet = { webkitTextFillColor: "ivory" };
        static KHAKI: Sheet = { webkitTextFillColor: "khaki" };
        static LAVENDER: Sheet = { webkitTextFillColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { webkitTextFillColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { webkitTextFillColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { webkitTextFillColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { webkitTextFillColor: "lightblue" };
        static LIGHTCORAL: Sheet = { webkitTextFillColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { webkitTextFillColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { webkitTextFillColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { webkitTextFillColor: "lightgray" };
        static LIGHTGREEN: Sheet = { webkitTextFillColor: "lightgreen" };
        static LIGHTGREY: Sheet = { webkitTextFillColor: "lightgrey" };
        static LIGHTPINK: Sheet = { webkitTextFillColor: "lightpink" };
        static LIGHTSALMON: Sheet = { webkitTextFillColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { webkitTextFillColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { webkitTextFillColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { webkitTextFillColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { webkitTextFillColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { webkitTextFillColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { webkitTextFillColor: "lightyellow" };
        static LIME: Sheet = { webkitTextFillColor: "lime" };
        static LIMEGREEN: Sheet = { webkitTextFillColor: "limegreen" };
        static LINEN: Sheet = { webkitTextFillColor: "linen" };
        static MAGENTA: Sheet = { webkitTextFillColor: "magenta" };
        static MAROON: Sheet = { webkitTextFillColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { webkitTextFillColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { webkitTextFillColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { webkitTextFillColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { webkitTextFillColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { webkitTextFillColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { webkitTextFillColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { webkitTextFillColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { webkitTextFillColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { webkitTextFillColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { webkitTextFillColor: "midnightblue" };
        static MINTCREAM: Sheet = { webkitTextFillColor: "mintcream" };
        static MISTYROSE: Sheet = { webkitTextFillColor: "mistyrose" };
        static MOCCASIN: Sheet = { webkitTextFillColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { webkitTextFillColor: "navajowhite" };
        static NAVY: Sheet = { webkitTextFillColor: "navy" };
        static OLDLACE: Sheet = { webkitTextFillColor: "oldlace" };
        static OLIVE: Sheet = { webkitTextFillColor: "olive" };
        static OLIVEDRAB: Sheet = { webkitTextFillColor: "olivedrab" };
        static ORANGE: Sheet = { webkitTextFillColor: "orange" };
        static ORANGERED: Sheet = { webkitTextFillColor: "orangered" };
        static ORCHID: Sheet = { webkitTextFillColor: "orchid" };
        static PALEGOLDENROD: Sheet = { webkitTextFillColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { webkitTextFillColor: "palegreen" };
        static PALETURQUOISE: Sheet = { webkitTextFillColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { webkitTextFillColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { webkitTextFillColor: "papayawhip" };
        static PEACHPUFF: Sheet = { webkitTextFillColor: "peachpuff" };
        static PERU: Sheet = { webkitTextFillColor: "peru" };
        static PINK: Sheet = { webkitTextFillColor: "pink" };
        static PLUM: Sheet = { webkitTextFillColor: "plum" };
        static POWDERBLUE: Sheet = { webkitTextFillColor: "powderblue" };
        static PURPLE: Sheet = { webkitTextFillColor: "purple" };
        static REBECCAPURPLE: Sheet = { webkitTextFillColor: "rebeccapurple" };
        static RED: Sheet = { webkitTextFillColor: "red" };
        static ROSYBROWN: Sheet = { webkitTextFillColor: "rosybrown" };
        static ROYALBLUE: Sheet = { webkitTextFillColor: "royalblue" };
        static SADDLEBROWN: Sheet = { webkitTextFillColor: "saddlebrown" };
        static SALMON: Sheet = { webkitTextFillColor: "salmon" };
        static SANDYBROWN: Sheet = { webkitTextFillColor: "sandybrown" };
        static SEAGREEN: Sheet = { webkitTextFillColor: "seagreen" };
        static SEASHELL: Sheet = { webkitTextFillColor: "seashell" };
        static SIENNA: Sheet = { webkitTextFillColor: "sienna" };
        static SILVER: Sheet = { webkitTextFillColor: "silver" };
        static SKYBLUE: Sheet = { webkitTextFillColor: "skyblue" };
        static SLATEBLUE: Sheet = { webkitTextFillColor: "slateblue" };
        static SLATEGRAY: Sheet = { webkitTextFillColor: "slategray" };
        static SLATEGREY: Sheet = { webkitTextFillColor: "slategrey" };
        static SNOW: Sheet = { webkitTextFillColor: "snow" };
        static SPRINGGREEN: Sheet = { webkitTextFillColor: "springgreen" };
        static STEELBLUE: Sheet = { webkitTextFillColor: "steelblue" };
        static TAN: Sheet = { webkitTextFillColor: "tan" };
        static TEAL: Sheet = { webkitTextFillColor: "teal" };
        static THISTLE: Sheet = { webkitTextFillColor: "thistle" };
        static TOMATO: Sheet = { webkitTextFillColor: "tomato" };
        static TURQUOISE: Sheet = { webkitTextFillColor: "turquoise" };
        static VIOLET: Sheet = { webkitTextFillColor: "violet" };
        static WHEAT: Sheet = { webkitTextFillColor: "wheat" };
        static WHITE: Sheet = { webkitTextFillColor: "white" };
        static WHITESMOKE: Sheet = { webkitTextFillColor: "whitesmoke" };
        static YELLOW: Sheet = { webkitTextFillColor: "yellow" };
        static YELLOWGREEN: Sheet = { webkitTextFillColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { webkitTextFillColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { webkitTextFillColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { webkitTextFillColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { webkitTextFillColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { webkitTextFillColor: "Background" };
        static BUTTONFACE: Sheet = { webkitTextFillColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { webkitTextFillColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { webkitTextFillColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { webkitTextFillColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { webkitTextFillColor: "CaptionText" };
        static GRAYTEXT: Sheet = { webkitTextFillColor: "GrayText" };
        static HIGHLIGHT: Sheet = { webkitTextFillColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { webkitTextFillColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { webkitTextFillColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { webkitTextFillColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { webkitTextFillColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { webkitTextFillColor: "InfoBackground" };
        static INFOTEXT: Sheet = { webkitTextFillColor: "InfoText" };
        static MENU: Sheet = { webkitTextFillColor: "Menu" };
        static MENUTEXT: Sheet = { webkitTextFillColor: "MenuText" };
        static SCROLLBAR: Sheet = { webkitTextFillColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { webkitTextFillColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { webkitTextFillColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { webkitTextFillColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { webkitTextFillColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { webkitTextFillColor: "ThreeDShadow" };
        static WINDOW: Sheet = { webkitTextFillColor: "Window" };
        static WINDOWFRAME: Sheet = { webkitTextFillColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { webkitTextFillColor: "WindowText" };
    }
    export class WebkitTextStroke {
        static set = (...params: Param[]): Sheet => ({ webkitTextStroke: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ webkitTextStroke: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitTextStroke: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitTextStroke: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitTextStroke: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitTextStroke: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitTextStroke: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitTextStroke: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitTextStroke: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitTextStroke: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitTextStroke: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitTextStroke: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitTextStroke: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitTextStroke: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitTextStroke: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitTextStroke: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitTextStroke: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitTextStroke: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitTextStroke: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitTextStroke: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitTextStroke: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitTextStroke: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitTextStroke: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ webkitTextStroke: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ webkitTextStroke: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ webkitTextStroke: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ webkitTextStroke: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ webkitTextStroke: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { webkitTextStroke: "transparent" };
        static ALICEBLUE: Sheet = { webkitTextStroke: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { webkitTextStroke: "antiquewhite" };
        static AQUA: Sheet = { webkitTextStroke: "aqua" };
        static AQUAMARINE: Sheet = { webkitTextStroke: "aquamarine" };
        static AZURE: Sheet = { webkitTextStroke: "azure" };
        static BEIGE: Sheet = { webkitTextStroke: "beige" };
        static BISQUE: Sheet = { webkitTextStroke: "bisque" };
        static BLACK: Sheet = { webkitTextStroke: "black" };
        static BLANCHEDALMOND: Sheet = { webkitTextStroke: "blanchedalmond" };
        static BLUE: Sheet = { webkitTextStroke: "blue" };
        static BLUEVIOLET: Sheet = { webkitTextStroke: "blueviolet" };
        static BROWN: Sheet = { webkitTextStroke: "brown" };
        static BURLYWOOD: Sheet = { webkitTextStroke: "burlywood" };
        static CADETBLUE: Sheet = { webkitTextStroke: "cadetblue" };
        static CHARTREUSE: Sheet = { webkitTextStroke: "chartreuse" };
        static CHOCOLATE: Sheet = { webkitTextStroke: "chocolate" };
        static CORAL: Sheet = { webkitTextStroke: "coral" };
        static CORNFLOWERBLUE: Sheet = { webkitTextStroke: "cornflowerblue" };
        static CORNSILK: Sheet = { webkitTextStroke: "cornsilk" };
        static CRIMSON: Sheet = { webkitTextStroke: "crimson" };
        static CYAN: Sheet = { webkitTextStroke: "cyan" };
        static DARKBLUE: Sheet = { webkitTextStroke: "darkblue" };
        static DARKCYAN: Sheet = { webkitTextStroke: "darkcyan" };
        static DARKGOLDENROD: Sheet = { webkitTextStroke: "darkgoldenrod" };
        static DARKGRAY: Sheet = { webkitTextStroke: "darkgray" };
        static DARKGREEN: Sheet = { webkitTextStroke: "darkgreen" };
        static DARKGREY: Sheet = { webkitTextStroke: "darkgrey" };
        static DARKKHAKI: Sheet = { webkitTextStroke: "darkkhaki" };
        static DARKMAGENTA: Sheet = { webkitTextStroke: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { webkitTextStroke: "darkolivegreen" };
        static DARKORANGE: Sheet = { webkitTextStroke: "darkorange" };
        static DARKORCHID: Sheet = { webkitTextStroke: "darkorchid" };
        static DARKRED: Sheet = { webkitTextStroke: "darkred" };
        static DARKSALMON: Sheet = { webkitTextStroke: "darksalmon" };
        static DARKSEAGREEN: Sheet = { webkitTextStroke: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { webkitTextStroke: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { webkitTextStroke: "darkslategray" };
        static DARKSLATEGREY: Sheet = { webkitTextStroke: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { webkitTextStroke: "darkturquoise" };
        static DARKVIOLET: Sheet = { webkitTextStroke: "darkviolet" };
        static DEEPPINK: Sheet = { webkitTextStroke: "deeppink" };
        static DEEPSKYBLUE: Sheet = { webkitTextStroke: "deepskyblue" };
        static DIMGRAY: Sheet = { webkitTextStroke: "dimgray" };
        static DIMGREY: Sheet = { webkitTextStroke: "dimgrey" };
        static DODGERBLUE: Sheet = { webkitTextStroke: "dodgerblue" };
        static FIREBRICK: Sheet = { webkitTextStroke: "firebrick" };
        static FLORALWHITE: Sheet = { webkitTextStroke: "floralwhite" };
        static FORESTGREEN: Sheet = { webkitTextStroke: "forestgreen" };
        static FUCHSIA: Sheet = { webkitTextStroke: "fuchsia" };
        static GAINSBORO: Sheet = { webkitTextStroke: "gainsboro" };
        static GHOSTWHITE: Sheet = { webkitTextStroke: "ghostwhite" };
        static GOLD: Sheet = { webkitTextStroke: "gold" };
        static GOLDENROD: Sheet = { webkitTextStroke: "goldenrod" };
        static GRAY: Sheet = { webkitTextStroke: "gray" };
        static GREEN: Sheet = { webkitTextStroke: "green" };
        static GREENYELLOW: Sheet = { webkitTextStroke: "greenyellow" };
        static GREY: Sheet = { webkitTextStroke: "grey" };
        static HONEYDEW: Sheet = { webkitTextStroke: "honeydew" };
        static HOTPINK: Sheet = { webkitTextStroke: "hotpink" };
        static INDIANRED: Sheet = { webkitTextStroke: "indianred" };
        static INDIGO: Sheet = { webkitTextStroke: "indigo" };
        static IVORY: Sheet = { webkitTextStroke: "ivory" };
        static KHAKI: Sheet = { webkitTextStroke: "khaki" };
        static LAVENDER: Sheet = { webkitTextStroke: "lavender" };
        static LAVENDERBLUSH: Sheet = { webkitTextStroke: "lavenderblush" };
        static LAWNGREEN: Sheet = { webkitTextStroke: "lawngreen" };
        static LEMONCHIFFON: Sheet = { webkitTextStroke: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { webkitTextStroke: "lightblue" };
        static LIGHTCORAL: Sheet = { webkitTextStroke: "lightcoral" };
        static LIGHTCYAN: Sheet = { webkitTextStroke: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { webkitTextStroke: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { webkitTextStroke: "lightgray" };
        static LIGHTGREEN: Sheet = { webkitTextStroke: "lightgreen" };
        static LIGHTGREY: Sheet = { webkitTextStroke: "lightgrey" };
        static LIGHTPINK: Sheet = { webkitTextStroke: "lightpink" };
        static LIGHTSALMON: Sheet = { webkitTextStroke: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { webkitTextStroke: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { webkitTextStroke: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { webkitTextStroke: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { webkitTextStroke: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { webkitTextStroke: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { webkitTextStroke: "lightyellow" };
        static LIME: Sheet = { webkitTextStroke: "lime" };
        static LIMEGREEN: Sheet = { webkitTextStroke: "limegreen" };
        static LINEN: Sheet = { webkitTextStroke: "linen" };
        static MAGENTA: Sheet = { webkitTextStroke: "magenta" };
        static MAROON: Sheet = { webkitTextStroke: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { webkitTextStroke: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { webkitTextStroke: "mediumblue" };
        static MEDIUMORCHID: Sheet = { webkitTextStroke: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { webkitTextStroke: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { webkitTextStroke: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { webkitTextStroke: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { webkitTextStroke: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { webkitTextStroke: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { webkitTextStroke: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { webkitTextStroke: "midnightblue" };
        static MINTCREAM: Sheet = { webkitTextStroke: "mintcream" };
        static MISTYROSE: Sheet = { webkitTextStroke: "mistyrose" };
        static MOCCASIN: Sheet = { webkitTextStroke: "moccasin" };
        static NAVAJOWHITE: Sheet = { webkitTextStroke: "navajowhite" };
        static NAVY: Sheet = { webkitTextStroke: "navy" };
        static OLDLACE: Sheet = { webkitTextStroke: "oldlace" };
        static OLIVE: Sheet = { webkitTextStroke: "olive" };
        static OLIVEDRAB: Sheet = { webkitTextStroke: "olivedrab" };
        static ORANGE: Sheet = { webkitTextStroke: "orange" };
        static ORANGERED: Sheet = { webkitTextStroke: "orangered" };
        static ORCHID: Sheet = { webkitTextStroke: "orchid" };
        static PALEGOLDENROD: Sheet = { webkitTextStroke: "palegoldenrod" };
        static PALEGREEN: Sheet = { webkitTextStroke: "palegreen" };
        static PALETURQUOISE: Sheet = { webkitTextStroke: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { webkitTextStroke: "palevioletred" };
        static PAPAYAWHIP: Sheet = { webkitTextStroke: "papayawhip" };
        static PEACHPUFF: Sheet = { webkitTextStroke: "peachpuff" };
        static PERU: Sheet = { webkitTextStroke: "peru" };
        static PINK: Sheet = { webkitTextStroke: "pink" };
        static PLUM: Sheet = { webkitTextStroke: "plum" };
        static POWDERBLUE: Sheet = { webkitTextStroke: "powderblue" };
        static PURPLE: Sheet = { webkitTextStroke: "purple" };
        static REBECCAPURPLE: Sheet = { webkitTextStroke: "rebeccapurple" };
        static RED: Sheet = { webkitTextStroke: "red" };
        static ROSYBROWN: Sheet = { webkitTextStroke: "rosybrown" };
        static ROYALBLUE: Sheet = { webkitTextStroke: "royalblue" };
        static SADDLEBROWN: Sheet = { webkitTextStroke: "saddlebrown" };
        static SALMON: Sheet = { webkitTextStroke: "salmon" };
        static SANDYBROWN: Sheet = { webkitTextStroke: "sandybrown" };
        static SEAGREEN: Sheet = { webkitTextStroke: "seagreen" };
        static SEASHELL: Sheet = { webkitTextStroke: "seashell" };
        static SIENNA: Sheet = { webkitTextStroke: "sienna" };
        static SILVER: Sheet = { webkitTextStroke: "silver" };
        static SKYBLUE: Sheet = { webkitTextStroke: "skyblue" };
        static SLATEBLUE: Sheet = { webkitTextStroke: "slateblue" };
        static SLATEGRAY: Sheet = { webkitTextStroke: "slategray" };
        static SLATEGREY: Sheet = { webkitTextStroke: "slategrey" };
        static SNOW: Sheet = { webkitTextStroke: "snow" };
        static SPRINGGREEN: Sheet = { webkitTextStroke: "springgreen" };
        static STEELBLUE: Sheet = { webkitTextStroke: "steelblue" };
        static TAN: Sheet = { webkitTextStroke: "tan" };
        static TEAL: Sheet = { webkitTextStroke: "teal" };
        static THISTLE: Sheet = { webkitTextStroke: "thistle" };
        static TOMATO: Sheet = { webkitTextStroke: "tomato" };
        static TURQUOISE: Sheet = { webkitTextStroke: "turquoise" };
        static VIOLET: Sheet = { webkitTextStroke: "violet" };
        static WHEAT: Sheet = { webkitTextStroke: "wheat" };
        static WHITE: Sheet = { webkitTextStroke: "white" };
        static WHITESMOKE: Sheet = { webkitTextStroke: "whitesmoke" };
        static YELLOW: Sheet = { webkitTextStroke: "yellow" };
        static YELLOWGREEN: Sheet = { webkitTextStroke: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { webkitTextStroke: "currentcolor" };
        static ACTIVEBORDER: Sheet = { webkitTextStroke: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { webkitTextStroke: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { webkitTextStroke: "AppWorkspace" };
        static BACKGROUND: Sheet = { webkitTextStroke: "Background" };
        static BUTTONFACE: Sheet = { webkitTextStroke: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { webkitTextStroke: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { webkitTextStroke: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { webkitTextStroke: "ButtonText" };
        static CAPTIONTEXT: Sheet = { webkitTextStroke: "CaptionText" };
        static GRAYTEXT: Sheet = { webkitTextStroke: "GrayText" };
        static HIGHLIGHT: Sheet = { webkitTextStroke: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { webkitTextStroke: "HighlightText" };
        static INACTIVEBORDER: Sheet = { webkitTextStroke: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { webkitTextStroke: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { webkitTextStroke: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { webkitTextStroke: "InfoBackground" };
        static INFOTEXT: Sheet = { webkitTextStroke: "InfoText" };
        static MENU: Sheet = { webkitTextStroke: "Menu" };
        static MENUTEXT: Sheet = { webkitTextStroke: "MenuText" };
        static SCROLLBAR: Sheet = { webkitTextStroke: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { webkitTextStroke: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { webkitTextStroke: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { webkitTextStroke: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { webkitTextStroke: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { webkitTextStroke: "ThreeDShadow" };
        static WINDOW: Sheet = { webkitTextStroke: "Window" };
        static WINDOWFRAME: Sheet = { webkitTextStroke: "WindowFrame" };
        static WINDOWTEXT: Sheet = { webkitTextStroke: "WindowText" };
    }
    export class WebkitTextStrokeColor {
        static set = (...params: Param[]): Sheet => ({ webkitTextStrokeColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ webkitTextStrokeColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ webkitTextStrokeColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ webkitTextStrokeColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ webkitTextStrokeColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ webkitTextStrokeColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { webkitTextStrokeColor: "transparent" };
        static ALICEBLUE: Sheet = { webkitTextStrokeColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { webkitTextStrokeColor: "antiquewhite" };
        static AQUA: Sheet = { webkitTextStrokeColor: "aqua" };
        static AQUAMARINE: Sheet = { webkitTextStrokeColor: "aquamarine" };
        static AZURE: Sheet = { webkitTextStrokeColor: "azure" };
        static BEIGE: Sheet = { webkitTextStrokeColor: "beige" };
        static BISQUE: Sheet = { webkitTextStrokeColor: "bisque" };
        static BLACK: Sheet = { webkitTextStrokeColor: "black" };
        static BLANCHEDALMOND: Sheet = { webkitTextStrokeColor: "blanchedalmond" };
        static BLUE: Sheet = { webkitTextStrokeColor: "blue" };
        static BLUEVIOLET: Sheet = { webkitTextStrokeColor: "blueviolet" };
        static BROWN: Sheet = { webkitTextStrokeColor: "brown" };
        static BURLYWOOD: Sheet = { webkitTextStrokeColor: "burlywood" };
        static CADETBLUE: Sheet = { webkitTextStrokeColor: "cadetblue" };
        static CHARTREUSE: Sheet = { webkitTextStrokeColor: "chartreuse" };
        static CHOCOLATE: Sheet = { webkitTextStrokeColor: "chocolate" };
        static CORAL: Sheet = { webkitTextStrokeColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { webkitTextStrokeColor: "cornflowerblue" };
        static CORNSILK: Sheet = { webkitTextStrokeColor: "cornsilk" };
        static CRIMSON: Sheet = { webkitTextStrokeColor: "crimson" };
        static CYAN: Sheet = { webkitTextStrokeColor: "cyan" };
        static DARKBLUE: Sheet = { webkitTextStrokeColor: "darkblue" };
        static DARKCYAN: Sheet = { webkitTextStrokeColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { webkitTextStrokeColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { webkitTextStrokeColor: "darkgray" };
        static DARKGREEN: Sheet = { webkitTextStrokeColor: "darkgreen" };
        static DARKGREY: Sheet = { webkitTextStrokeColor: "darkgrey" };
        static DARKKHAKI: Sheet = { webkitTextStrokeColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { webkitTextStrokeColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { webkitTextStrokeColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { webkitTextStrokeColor: "darkorange" };
        static DARKORCHID: Sheet = { webkitTextStrokeColor: "darkorchid" };
        static DARKRED: Sheet = { webkitTextStrokeColor: "darkred" };
        static DARKSALMON: Sheet = { webkitTextStrokeColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { webkitTextStrokeColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { webkitTextStrokeColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { webkitTextStrokeColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { webkitTextStrokeColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { webkitTextStrokeColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { webkitTextStrokeColor: "darkviolet" };
        static DEEPPINK: Sheet = { webkitTextStrokeColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { webkitTextStrokeColor: "deepskyblue" };
        static DIMGRAY: Sheet = { webkitTextStrokeColor: "dimgray" };
        static DIMGREY: Sheet = { webkitTextStrokeColor: "dimgrey" };
        static DODGERBLUE: Sheet = { webkitTextStrokeColor: "dodgerblue" };
        static FIREBRICK: Sheet = { webkitTextStrokeColor: "firebrick" };
        static FLORALWHITE: Sheet = { webkitTextStrokeColor: "floralwhite" };
        static FORESTGREEN: Sheet = { webkitTextStrokeColor: "forestgreen" };
        static FUCHSIA: Sheet = { webkitTextStrokeColor: "fuchsia" };
        static GAINSBORO: Sheet = { webkitTextStrokeColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { webkitTextStrokeColor: "ghostwhite" };
        static GOLD: Sheet = { webkitTextStrokeColor: "gold" };
        static GOLDENROD: Sheet = { webkitTextStrokeColor: "goldenrod" };
        static GRAY: Sheet = { webkitTextStrokeColor: "gray" };
        static GREEN: Sheet = { webkitTextStrokeColor: "green" };
        static GREENYELLOW: Sheet = { webkitTextStrokeColor: "greenyellow" };
        static GREY: Sheet = { webkitTextStrokeColor: "grey" };
        static HONEYDEW: Sheet = { webkitTextStrokeColor: "honeydew" };
        static HOTPINK: Sheet = { webkitTextStrokeColor: "hotpink" };
        static INDIANRED: Sheet = { webkitTextStrokeColor: "indianred" };
        static INDIGO: Sheet = { webkitTextStrokeColor: "indigo" };
        static IVORY: Sheet = { webkitTextStrokeColor: "ivory" };
        static KHAKI: Sheet = { webkitTextStrokeColor: "khaki" };
        static LAVENDER: Sheet = { webkitTextStrokeColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { webkitTextStrokeColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { webkitTextStrokeColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { webkitTextStrokeColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { webkitTextStrokeColor: "lightblue" };
        static LIGHTCORAL: Sheet = { webkitTextStrokeColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { webkitTextStrokeColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { webkitTextStrokeColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { webkitTextStrokeColor: "lightgray" };
        static LIGHTGREEN: Sheet = { webkitTextStrokeColor: "lightgreen" };
        static LIGHTGREY: Sheet = { webkitTextStrokeColor: "lightgrey" };
        static LIGHTPINK: Sheet = { webkitTextStrokeColor: "lightpink" };
        static LIGHTSALMON: Sheet = { webkitTextStrokeColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { webkitTextStrokeColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { webkitTextStrokeColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { webkitTextStrokeColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { webkitTextStrokeColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { webkitTextStrokeColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { webkitTextStrokeColor: "lightyellow" };
        static LIME: Sheet = { webkitTextStrokeColor: "lime" };
        static LIMEGREEN: Sheet = { webkitTextStrokeColor: "limegreen" };
        static LINEN: Sheet = { webkitTextStrokeColor: "linen" };
        static MAGENTA: Sheet = { webkitTextStrokeColor: "magenta" };
        static MAROON: Sheet = { webkitTextStrokeColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { webkitTextStrokeColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { webkitTextStrokeColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { webkitTextStrokeColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { webkitTextStrokeColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { webkitTextStrokeColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { webkitTextStrokeColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { webkitTextStrokeColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { webkitTextStrokeColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { webkitTextStrokeColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { webkitTextStrokeColor: "midnightblue" };
        static MINTCREAM: Sheet = { webkitTextStrokeColor: "mintcream" };
        static MISTYROSE: Sheet = { webkitTextStrokeColor: "mistyrose" };
        static MOCCASIN: Sheet = { webkitTextStrokeColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { webkitTextStrokeColor: "navajowhite" };
        static NAVY: Sheet = { webkitTextStrokeColor: "navy" };
        static OLDLACE: Sheet = { webkitTextStrokeColor: "oldlace" };
        static OLIVE: Sheet = { webkitTextStrokeColor: "olive" };
        static OLIVEDRAB: Sheet = { webkitTextStrokeColor: "olivedrab" };
        static ORANGE: Sheet = { webkitTextStrokeColor: "orange" };
        static ORANGERED: Sheet = { webkitTextStrokeColor: "orangered" };
        static ORCHID: Sheet = { webkitTextStrokeColor: "orchid" };
        static PALEGOLDENROD: Sheet = { webkitTextStrokeColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { webkitTextStrokeColor: "palegreen" };
        static PALETURQUOISE: Sheet = { webkitTextStrokeColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { webkitTextStrokeColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { webkitTextStrokeColor: "papayawhip" };
        static PEACHPUFF: Sheet = { webkitTextStrokeColor: "peachpuff" };
        static PERU: Sheet = { webkitTextStrokeColor: "peru" };
        static PINK: Sheet = { webkitTextStrokeColor: "pink" };
        static PLUM: Sheet = { webkitTextStrokeColor: "plum" };
        static POWDERBLUE: Sheet = { webkitTextStrokeColor: "powderblue" };
        static PURPLE: Sheet = { webkitTextStrokeColor: "purple" };
        static REBECCAPURPLE: Sheet = { webkitTextStrokeColor: "rebeccapurple" };
        static RED: Sheet = { webkitTextStrokeColor: "red" };
        static ROSYBROWN: Sheet = { webkitTextStrokeColor: "rosybrown" };
        static ROYALBLUE: Sheet = { webkitTextStrokeColor: "royalblue" };
        static SADDLEBROWN: Sheet = { webkitTextStrokeColor: "saddlebrown" };
        static SALMON: Sheet = { webkitTextStrokeColor: "salmon" };
        static SANDYBROWN: Sheet = { webkitTextStrokeColor: "sandybrown" };
        static SEAGREEN: Sheet = { webkitTextStrokeColor: "seagreen" };
        static SEASHELL: Sheet = { webkitTextStrokeColor: "seashell" };
        static SIENNA: Sheet = { webkitTextStrokeColor: "sienna" };
        static SILVER: Sheet = { webkitTextStrokeColor: "silver" };
        static SKYBLUE: Sheet = { webkitTextStrokeColor: "skyblue" };
        static SLATEBLUE: Sheet = { webkitTextStrokeColor: "slateblue" };
        static SLATEGRAY: Sheet = { webkitTextStrokeColor: "slategray" };
        static SLATEGREY: Sheet = { webkitTextStrokeColor: "slategrey" };
        static SNOW: Sheet = { webkitTextStrokeColor: "snow" };
        static SPRINGGREEN: Sheet = { webkitTextStrokeColor: "springgreen" };
        static STEELBLUE: Sheet = { webkitTextStrokeColor: "steelblue" };
        static TAN: Sheet = { webkitTextStrokeColor: "tan" };
        static TEAL: Sheet = { webkitTextStrokeColor: "teal" };
        static THISTLE: Sheet = { webkitTextStrokeColor: "thistle" };
        static TOMATO: Sheet = { webkitTextStrokeColor: "tomato" };
        static TURQUOISE: Sheet = { webkitTextStrokeColor: "turquoise" };
        static VIOLET: Sheet = { webkitTextStrokeColor: "violet" };
        static WHEAT: Sheet = { webkitTextStrokeColor: "wheat" };
        static WHITE: Sheet = { webkitTextStrokeColor: "white" };
        static WHITESMOKE: Sheet = { webkitTextStrokeColor: "whitesmoke" };
        static YELLOW: Sheet = { webkitTextStrokeColor: "yellow" };
        static YELLOWGREEN: Sheet = { webkitTextStrokeColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { webkitTextStrokeColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { webkitTextStrokeColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { webkitTextStrokeColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { webkitTextStrokeColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { webkitTextStrokeColor: "Background" };
        static BUTTONFACE: Sheet = { webkitTextStrokeColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { webkitTextStrokeColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { webkitTextStrokeColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { webkitTextStrokeColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { webkitTextStrokeColor: "CaptionText" };
        static GRAYTEXT: Sheet = { webkitTextStrokeColor: "GrayText" };
        static HIGHLIGHT: Sheet = { webkitTextStrokeColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { webkitTextStrokeColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { webkitTextStrokeColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { webkitTextStrokeColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { webkitTextStrokeColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { webkitTextStrokeColor: "InfoBackground" };
        static INFOTEXT: Sheet = { webkitTextStrokeColor: "InfoText" };
        static MENU: Sheet = { webkitTextStrokeColor: "Menu" };
        static MENUTEXT: Sheet = { webkitTextStrokeColor: "MenuText" };
        static SCROLLBAR: Sheet = { webkitTextStrokeColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { webkitTextStrokeColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { webkitTextStrokeColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { webkitTextStrokeColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { webkitTextStrokeColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { webkitTextStrokeColor: "ThreeDShadow" };
        static WINDOW: Sheet = { webkitTextStrokeColor: "Window" };
        static WINDOWFRAME: Sheet = { webkitTextStrokeColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { webkitTextStrokeColor: "WindowText" };
    }
    export class WebkitTextStrokeWidth {
        static set = (...params: Param[]): Sheet => ({ webkitTextStrokeWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ webkitTextStrokeWidth: Length.fr(...params) });
    }
    export class WebkitTouchCallout {
        static set = (...params: Param[]): Sheet => ({ webkitTouchCallout: buildProperty(params) });
        static DEFAULT: Sheet = { webkitTouchCallout: "default" };
        static NONE: Sheet = { webkitTouchCallout: "none" };
    }
    export class WebkitUserModify {
        static set = (...params: Param[]): Sheet => ({ webkitUserModify: buildProperty(params) });
        static READ_ONLY: Sheet = { webkitUserModify: "read-only" };
        static READ_WRITE: Sheet = { webkitUserModify: "read-write" };
        static READ_WRITE_PLAINTEXT_ONLY: Sheet = { webkitUserModify: "read-write-plaintext-only" };
    }
    export class AlignContent {
        static set = (...params: Param[]): Sheet => ({ alignContent: buildProperty(params) });
        static NORMAL: Sheet = { alignContent: "normal" };
        static FIRST: Sheet = { alignContent: "first" };
        static LAST: Sheet = { alignContent: "last" };
        static BASELINE: Sheet = { alignContent: "baseline" };
        static SPACE_BETWEEN: Sheet = { alignContent: "space-between" };
        static SPACE_AROUND: Sheet = { alignContent: "space-around" };
        static SPACE_EVENLY: Sheet = { alignContent: "space-evenly" };
        static STRETCH: Sheet = { alignContent: "stretch" };
        static UNSAFE: Sheet = { alignContent: "unsafe" };
        static SAFE: Sheet = { alignContent: "safe" };
        static CENTER: Sheet = { alignContent: "center" };
        static START: Sheet = { alignContent: "start" };
        static END: Sheet = { alignContent: "end" };
        static FLEX_START: Sheet = { alignContent: "flex-start" };
        static FLEX_END: Sheet = { alignContent: "flex-end" };
    }
    export class AlignItems {
        static set = (...params: Param[]): Sheet => ({ alignItems: buildProperty(params) });
        static NORMAL: Sheet = { alignItems: "normal" };
        static STRETCH: Sheet = { alignItems: "stretch" };
        static FIRST: Sheet = { alignItems: "first" };
        static LAST: Sheet = { alignItems: "last" };
        static BASELINE: Sheet = { alignItems: "baseline" };
        static UNSAFE: Sheet = { alignItems: "unsafe" };
        static SAFE: Sheet = { alignItems: "safe" };
        static CENTER: Sheet = { alignItems: "center" };
        static START: Sheet = { alignItems: "start" };
        static END: Sheet = { alignItems: "end" };
        static SELF_START: Sheet = { alignItems: "self-start" };
        static SELF_END: Sheet = { alignItems: "self-end" };
        static FLEX_START: Sheet = { alignItems: "flex-start" };
        static FLEX_END: Sheet = { alignItems: "flex-end" };
    }
    export class AlignSelf {
        static set = (...params: Param[]): Sheet => ({ alignSelf: buildProperty(params) });
        static AUTO: Sheet = { alignSelf: "auto" };
        static NORMAL: Sheet = { alignSelf: "normal" };
        static STRETCH: Sheet = { alignSelf: "stretch" };
        static FIRST: Sheet = { alignSelf: "first" };
        static LAST: Sheet = { alignSelf: "last" };
        static BASELINE: Sheet = { alignSelf: "baseline" };
        static UNSAFE: Sheet = { alignSelf: "unsafe" };
        static SAFE: Sheet = { alignSelf: "safe" };
        static CENTER: Sheet = { alignSelf: "center" };
        static START: Sheet = { alignSelf: "start" };
        static END: Sheet = { alignSelf: "end" };
        static SELF_START: Sheet = { alignSelf: "self-start" };
        static SELF_END: Sheet = { alignSelf: "self-end" };
        static FLEX_START: Sheet = { alignSelf: "flex-start" };
        static FLEX_END: Sheet = { alignSelf: "flex-end" };
    }
    export class All {
        static set = (...params: Param[]): Sheet => ({ all: buildProperty(params) });
        static INITIAL: Sheet = { all: "initial" };
        static INHERIT: Sheet = { all: "inherit" };
        static UNSET: Sheet = { all: "unset" };
        static REVERT: Sheet = { all: "revert" };
    }
    export class Animation {
        static set = (...params: Param[]): Sheet => ({ animation: buildProperty(params) });
        static s = (...params: number[]): Sheet => ({ animation: Time.s(...params) });
        static ms = (...params: number[]): Sheet => ({ animation: Time.ms(...params) });
        static LINEAR: Sheet = { animation: "linear" };
        static EASE: Sheet = { animation: "ease" };
        static EASE_IN: Sheet = { animation: "ease-in" };
        static EASE_OUT: Sheet = { animation: "ease-out" };
        static EASE_IN_OUT: Sheet = { animation: "ease-in-out" };
        static STEP_START: Sheet = { animation: "step-start" };
        static STEP_END: Sheet = { animation: "step-end" };
        static START: Sheet = { animation: "start" };
        static END: Sheet = { animation: "end" };
        static INFINITE: Sheet = { animation: "infinite" };
        static NORMAL: Sheet = { animation: "normal" };
        static REVERSE: Sheet = { animation: "reverse" };
        static ALTERNATE: Sheet = { animation: "alternate" };
        static ALTERNATE_REVERSE: Sheet = { animation: "alternate-reverse" };
        static NONE: Sheet = { animation: "none" };
        static FORWARDS: Sheet = { animation: "forwards" };
        static BACKWARDS: Sheet = { animation: "backwards" };
        static BOTH: Sheet = { animation: "both" };
        static RUNNING: Sheet = { animation: "running" };
        static PAUSED: Sheet = { animation: "paused" };
    }
    export class AnimationDelay {
        static set = (...params: Param[]): Sheet => ({ animationDelay: buildProperty(params) });
        static s = (...params: number[]): Sheet => ({ animationDelay: Time.s(...params) });
        static ms = (...params: number[]): Sheet => ({ animationDelay: Time.ms(...params) });
    }
    export class AnimationDirection {
        static set = (...params: Param[]): Sheet => ({ animationDirection: buildProperty(params) });
        static NORMAL: Sheet = { animationDirection: "normal" };
        static REVERSE: Sheet = { animationDirection: "reverse" };
        static ALTERNATE: Sheet = { animationDirection: "alternate" };
        static ALTERNATE_REVERSE: Sheet = { animationDirection: "alternate-reverse" };
    }
    export class AnimationDuration {
        static set = (...params: Param[]): Sheet => ({ animationDuration: buildProperty(params) });
        static s = (...params: number[]): Sheet => ({ animationDuration: Time.s(...params) });
        static ms = (...params: number[]): Sheet => ({ animationDuration: Time.ms(...params) });
    }
    export class AnimationFillMode {
        static set = (...params: Param[]): Sheet => ({ animationFillMode: buildProperty(params) });
        static NONE: Sheet = { animationFillMode: "none" };
        static FORWARDS: Sheet = { animationFillMode: "forwards" };
        static BACKWARDS: Sheet = { animationFillMode: "backwards" };
        static BOTH: Sheet = { animationFillMode: "both" };
    }
    export class AnimationIterationCount {
        static set = (...params: Param[]): Sheet => ({ animationIterationCount: buildProperty(params) });
        static INFINITE: Sheet = { animationIterationCount: "infinite" };
    }
    export class AnimationName {
        static set = (...params: Param[]): Sheet => ({ animationName: buildProperty(params) });
        static NONE: Sheet = { animationName: "none" };
    }
    export class AnimationPlayState {
        static set = (...params: Param[]): Sheet => ({ animationPlayState: buildProperty(params) });
        static RUNNING: Sheet = { animationPlayState: "running" };
        static PAUSED: Sheet = { animationPlayState: "paused" };
    }
    export class AnimationTimingFunction {
        static set = (...params: Param[]): Sheet => ({ animationTimingFunction: buildProperty(params) });
        static LINEAR: Sheet = { animationTimingFunction: "linear" };
        static EASE: Sheet = { animationTimingFunction: "ease" };
        static EASE_IN: Sheet = { animationTimingFunction: "ease-in" };
        static EASE_OUT: Sheet = { animationTimingFunction: "ease-out" };
        static EASE_IN_OUT: Sheet = { animationTimingFunction: "ease-in-out" };
        static STEP_START: Sheet = { animationTimingFunction: "step-start" };
        static STEP_END: Sheet = { animationTimingFunction: "step-end" };
        static START: Sheet = { animationTimingFunction: "start" };
        static END: Sheet = { animationTimingFunction: "end" };
    }
    export class Appearance {
        static set = (...params: Param[]): Sheet => ({ appearance: buildProperty(params) });
        static AUTO: Sheet = { appearance: "auto" };
        static NONE: Sheet = { appearance: "none" };
    }
    export class Azimuth {
        static set = (...params: Param[]): Sheet => ({ azimuth: buildProperty(params) });
        static deg = (...params: number[]): Sheet => ({ azimuth: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ azimuth: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ azimuth: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ azimuth: Angle.turn(...params) });
        static LEFT_SIDE: Sheet = { azimuth: "left-side" };
        static FAR_LEFT: Sheet = { azimuth: "far-left" };
        static LEFT: Sheet = { azimuth: "left" };
        static CENTER_LEFT: Sheet = { azimuth: "center-left" };
        static CENTER: Sheet = { azimuth: "center" };
        static CENTER_RIGHT: Sheet = { azimuth: "center-right" };
        static RIGHT: Sheet = { azimuth: "right" };
        static FAR_RIGHT: Sheet = { azimuth: "far-right" };
        static RIGHT_SIDE: Sheet = { azimuth: "right-side" };
        static BEHIND: Sheet = { azimuth: "behind" };
        static LEFTWARDS: Sheet = { azimuth: "leftwards" };
        static RIGHTWARDS: Sheet = { azimuth: "rightwards" };
    }
    export class BackdropFilter {
        static set = (...params: Param[]): Sheet => ({ backdropFilter: buildProperty(params) });
        static NONE: Sheet = { backdropFilter: "none" };
        static cap = (...params: number[]): Sheet => ({ backdropFilter: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ backdropFilter: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ backdropFilter: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ backdropFilter: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ backdropFilter: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ backdropFilter: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ backdropFilter: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ backdropFilter: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ backdropFilter: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ backdropFilter: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ backdropFilter: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ backdropFilter: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ backdropFilter: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ backdropFilter: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ backdropFilter: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ backdropFilter: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ backdropFilter: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ backdropFilter: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ backdropFilter: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ backdropFilter: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ backdropFilter: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ backdropFilter: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ backdropFilter: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ backdropFilter: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ backdropFilter: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ backdropFilter: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ backdropFilter: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { backdropFilter: "transparent" };
        static ALICEBLUE: Sheet = { backdropFilter: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { backdropFilter: "antiquewhite" };
        static AQUA: Sheet = { backdropFilter: "aqua" };
        static AQUAMARINE: Sheet = { backdropFilter: "aquamarine" };
        static AZURE: Sheet = { backdropFilter: "azure" };
        static BEIGE: Sheet = { backdropFilter: "beige" };
        static BISQUE: Sheet = { backdropFilter: "bisque" };
        static BLACK: Sheet = { backdropFilter: "black" };
        static BLANCHEDALMOND: Sheet = { backdropFilter: "blanchedalmond" };
        static BLUE: Sheet = { backdropFilter: "blue" };
        static BLUEVIOLET: Sheet = { backdropFilter: "blueviolet" };
        static BROWN: Sheet = { backdropFilter: "brown" };
        static BURLYWOOD: Sheet = { backdropFilter: "burlywood" };
        static CADETBLUE: Sheet = { backdropFilter: "cadetblue" };
        static CHARTREUSE: Sheet = { backdropFilter: "chartreuse" };
        static CHOCOLATE: Sheet = { backdropFilter: "chocolate" };
        static CORAL: Sheet = { backdropFilter: "coral" };
        static CORNFLOWERBLUE: Sheet = { backdropFilter: "cornflowerblue" };
        static CORNSILK: Sheet = { backdropFilter: "cornsilk" };
        static CRIMSON: Sheet = { backdropFilter: "crimson" };
        static CYAN: Sheet = { backdropFilter: "cyan" };
        static DARKBLUE: Sheet = { backdropFilter: "darkblue" };
        static DARKCYAN: Sheet = { backdropFilter: "darkcyan" };
        static DARKGOLDENROD: Sheet = { backdropFilter: "darkgoldenrod" };
        static DARKGRAY: Sheet = { backdropFilter: "darkgray" };
        static DARKGREEN: Sheet = { backdropFilter: "darkgreen" };
        static DARKGREY: Sheet = { backdropFilter: "darkgrey" };
        static DARKKHAKI: Sheet = { backdropFilter: "darkkhaki" };
        static DARKMAGENTA: Sheet = { backdropFilter: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { backdropFilter: "darkolivegreen" };
        static DARKORANGE: Sheet = { backdropFilter: "darkorange" };
        static DARKORCHID: Sheet = { backdropFilter: "darkorchid" };
        static DARKRED: Sheet = { backdropFilter: "darkred" };
        static DARKSALMON: Sheet = { backdropFilter: "darksalmon" };
        static DARKSEAGREEN: Sheet = { backdropFilter: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { backdropFilter: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { backdropFilter: "darkslategray" };
        static DARKSLATEGREY: Sheet = { backdropFilter: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { backdropFilter: "darkturquoise" };
        static DARKVIOLET: Sheet = { backdropFilter: "darkviolet" };
        static DEEPPINK: Sheet = { backdropFilter: "deeppink" };
        static DEEPSKYBLUE: Sheet = { backdropFilter: "deepskyblue" };
        static DIMGRAY: Sheet = { backdropFilter: "dimgray" };
        static DIMGREY: Sheet = { backdropFilter: "dimgrey" };
        static DODGERBLUE: Sheet = { backdropFilter: "dodgerblue" };
        static FIREBRICK: Sheet = { backdropFilter: "firebrick" };
        static FLORALWHITE: Sheet = { backdropFilter: "floralwhite" };
        static FORESTGREEN: Sheet = { backdropFilter: "forestgreen" };
        static FUCHSIA: Sheet = { backdropFilter: "fuchsia" };
        static GAINSBORO: Sheet = { backdropFilter: "gainsboro" };
        static GHOSTWHITE: Sheet = { backdropFilter: "ghostwhite" };
        static GOLD: Sheet = { backdropFilter: "gold" };
        static GOLDENROD: Sheet = { backdropFilter: "goldenrod" };
        static GRAY: Sheet = { backdropFilter: "gray" };
        static GREEN: Sheet = { backdropFilter: "green" };
        static GREENYELLOW: Sheet = { backdropFilter: "greenyellow" };
        static GREY: Sheet = { backdropFilter: "grey" };
        static HONEYDEW: Sheet = { backdropFilter: "honeydew" };
        static HOTPINK: Sheet = { backdropFilter: "hotpink" };
        static INDIANRED: Sheet = { backdropFilter: "indianred" };
        static INDIGO: Sheet = { backdropFilter: "indigo" };
        static IVORY: Sheet = { backdropFilter: "ivory" };
        static KHAKI: Sheet = { backdropFilter: "khaki" };
        static LAVENDER: Sheet = { backdropFilter: "lavender" };
        static LAVENDERBLUSH: Sheet = { backdropFilter: "lavenderblush" };
        static LAWNGREEN: Sheet = { backdropFilter: "lawngreen" };
        static LEMONCHIFFON: Sheet = { backdropFilter: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { backdropFilter: "lightblue" };
        static LIGHTCORAL: Sheet = { backdropFilter: "lightcoral" };
        static LIGHTCYAN: Sheet = { backdropFilter: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { backdropFilter: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { backdropFilter: "lightgray" };
        static LIGHTGREEN: Sheet = { backdropFilter: "lightgreen" };
        static LIGHTGREY: Sheet = { backdropFilter: "lightgrey" };
        static LIGHTPINK: Sheet = { backdropFilter: "lightpink" };
        static LIGHTSALMON: Sheet = { backdropFilter: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { backdropFilter: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { backdropFilter: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { backdropFilter: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { backdropFilter: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { backdropFilter: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { backdropFilter: "lightyellow" };
        static LIME: Sheet = { backdropFilter: "lime" };
        static LIMEGREEN: Sheet = { backdropFilter: "limegreen" };
        static LINEN: Sheet = { backdropFilter: "linen" };
        static MAGENTA: Sheet = { backdropFilter: "magenta" };
        static MAROON: Sheet = { backdropFilter: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { backdropFilter: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { backdropFilter: "mediumblue" };
        static MEDIUMORCHID: Sheet = { backdropFilter: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { backdropFilter: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { backdropFilter: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { backdropFilter: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { backdropFilter: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { backdropFilter: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { backdropFilter: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { backdropFilter: "midnightblue" };
        static MINTCREAM: Sheet = { backdropFilter: "mintcream" };
        static MISTYROSE: Sheet = { backdropFilter: "mistyrose" };
        static MOCCASIN: Sheet = { backdropFilter: "moccasin" };
        static NAVAJOWHITE: Sheet = { backdropFilter: "navajowhite" };
        static NAVY: Sheet = { backdropFilter: "navy" };
        static OLDLACE: Sheet = { backdropFilter: "oldlace" };
        static OLIVE: Sheet = { backdropFilter: "olive" };
        static OLIVEDRAB: Sheet = { backdropFilter: "olivedrab" };
        static ORANGE: Sheet = { backdropFilter: "orange" };
        static ORANGERED: Sheet = { backdropFilter: "orangered" };
        static ORCHID: Sheet = { backdropFilter: "orchid" };
        static PALEGOLDENROD: Sheet = { backdropFilter: "palegoldenrod" };
        static PALEGREEN: Sheet = { backdropFilter: "palegreen" };
        static PALETURQUOISE: Sheet = { backdropFilter: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { backdropFilter: "palevioletred" };
        static PAPAYAWHIP: Sheet = { backdropFilter: "papayawhip" };
        static PEACHPUFF: Sheet = { backdropFilter: "peachpuff" };
        static PERU: Sheet = { backdropFilter: "peru" };
        static PINK: Sheet = { backdropFilter: "pink" };
        static PLUM: Sheet = { backdropFilter: "plum" };
        static POWDERBLUE: Sheet = { backdropFilter: "powderblue" };
        static PURPLE: Sheet = { backdropFilter: "purple" };
        static REBECCAPURPLE: Sheet = { backdropFilter: "rebeccapurple" };
        static RED: Sheet = { backdropFilter: "red" };
        static ROSYBROWN: Sheet = { backdropFilter: "rosybrown" };
        static ROYALBLUE: Sheet = { backdropFilter: "royalblue" };
        static SADDLEBROWN: Sheet = { backdropFilter: "saddlebrown" };
        static SALMON: Sheet = { backdropFilter: "salmon" };
        static SANDYBROWN: Sheet = { backdropFilter: "sandybrown" };
        static SEAGREEN: Sheet = { backdropFilter: "seagreen" };
        static SEASHELL: Sheet = { backdropFilter: "seashell" };
        static SIENNA: Sheet = { backdropFilter: "sienna" };
        static SILVER: Sheet = { backdropFilter: "silver" };
        static SKYBLUE: Sheet = { backdropFilter: "skyblue" };
        static SLATEBLUE: Sheet = { backdropFilter: "slateblue" };
        static SLATEGRAY: Sheet = { backdropFilter: "slategray" };
        static SLATEGREY: Sheet = { backdropFilter: "slategrey" };
        static SNOW: Sheet = { backdropFilter: "snow" };
        static SPRINGGREEN: Sheet = { backdropFilter: "springgreen" };
        static STEELBLUE: Sheet = { backdropFilter: "steelblue" };
        static TAN: Sheet = { backdropFilter: "tan" };
        static TEAL: Sheet = { backdropFilter: "teal" };
        static THISTLE: Sheet = { backdropFilter: "thistle" };
        static TOMATO: Sheet = { backdropFilter: "tomato" };
        static TURQUOISE: Sheet = { backdropFilter: "turquoise" };
        static VIOLET: Sheet = { backdropFilter: "violet" };
        static WHEAT: Sheet = { backdropFilter: "wheat" };
        static WHITE: Sheet = { backdropFilter: "white" };
        static WHITESMOKE: Sheet = { backdropFilter: "whitesmoke" };
        static YELLOW: Sheet = { backdropFilter: "yellow" };
        static YELLOWGREEN: Sheet = { backdropFilter: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { backdropFilter: "currentcolor" };
        static ACTIVEBORDER: Sheet = { backdropFilter: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { backdropFilter: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { backdropFilter: "AppWorkspace" };
        static BACKGROUND: Sheet = { backdropFilter: "Background" };
        static BUTTONFACE: Sheet = { backdropFilter: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { backdropFilter: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { backdropFilter: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { backdropFilter: "ButtonText" };
        static CAPTIONTEXT: Sheet = { backdropFilter: "CaptionText" };
        static GRAYTEXT: Sheet = { backdropFilter: "GrayText" };
        static HIGHLIGHT: Sheet = { backdropFilter: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { backdropFilter: "HighlightText" };
        static INACTIVEBORDER: Sheet = { backdropFilter: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { backdropFilter: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { backdropFilter: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { backdropFilter: "InfoBackground" };
        static INFOTEXT: Sheet = { backdropFilter: "InfoText" };
        static MENU: Sheet = { backdropFilter: "Menu" };
        static MENUTEXT: Sheet = { backdropFilter: "MenuText" };
        static SCROLLBAR: Sheet = { backdropFilter: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { backdropFilter: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { backdropFilter: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { backdropFilter: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { backdropFilter: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { backdropFilter: "ThreeDShadow" };
        static WINDOW: Sheet = { backdropFilter: "Window" };
        static WINDOWFRAME: Sheet = { backdropFilter: "WindowFrame" };
        static WINDOWTEXT: Sheet = { backdropFilter: "WindowText" };
    }
    export class BackfaceVisibility {
        static set = (...params: Param[]): Sheet => ({ backfaceVisibility: buildProperty(params) });
        static VISIBLE: Sheet = { backfaceVisibility: "visible" };
        static HIDDEN: Sheet = { backfaceVisibility: "hidden" };
    }
    export class Background {
        static set = (...params: Param[]): Sheet => ({ background: buildProperty(params) });
        static NONE: Sheet = { background: "none" };
        static X = (...params: number[]): Sheet => ({ background: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ background: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ background: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ background: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ background: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { background: "transparent" };
        static ALICEBLUE: Sheet = { background: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { background: "antiquewhite" };
        static AQUA: Sheet = { background: "aqua" };
        static AQUAMARINE: Sheet = { background: "aquamarine" };
        static AZURE: Sheet = { background: "azure" };
        static BEIGE: Sheet = { background: "beige" };
        static BISQUE: Sheet = { background: "bisque" };
        static BLACK: Sheet = { background: "black" };
        static BLANCHEDALMOND: Sheet = { background: "blanchedalmond" };
        static BLUE: Sheet = { background: "blue" };
        static BLUEVIOLET: Sheet = { background: "blueviolet" };
        static BROWN: Sheet = { background: "brown" };
        static BURLYWOOD: Sheet = { background: "burlywood" };
        static CADETBLUE: Sheet = { background: "cadetblue" };
        static CHARTREUSE: Sheet = { background: "chartreuse" };
        static CHOCOLATE: Sheet = { background: "chocolate" };
        static CORAL: Sheet = { background: "coral" };
        static CORNFLOWERBLUE: Sheet = { background: "cornflowerblue" };
        static CORNSILK: Sheet = { background: "cornsilk" };
        static CRIMSON: Sheet = { background: "crimson" };
        static CYAN: Sheet = { background: "cyan" };
        static DARKBLUE: Sheet = { background: "darkblue" };
        static DARKCYAN: Sheet = { background: "darkcyan" };
        static DARKGOLDENROD: Sheet = { background: "darkgoldenrod" };
        static DARKGRAY: Sheet = { background: "darkgray" };
        static DARKGREEN: Sheet = { background: "darkgreen" };
        static DARKGREY: Sheet = { background: "darkgrey" };
        static DARKKHAKI: Sheet = { background: "darkkhaki" };
        static DARKMAGENTA: Sheet = { background: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { background: "darkolivegreen" };
        static DARKORANGE: Sheet = { background: "darkorange" };
        static DARKORCHID: Sheet = { background: "darkorchid" };
        static DARKRED: Sheet = { background: "darkred" };
        static DARKSALMON: Sheet = { background: "darksalmon" };
        static DARKSEAGREEN: Sheet = { background: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { background: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { background: "darkslategray" };
        static DARKSLATEGREY: Sheet = { background: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { background: "darkturquoise" };
        static DARKVIOLET: Sheet = { background: "darkviolet" };
        static DEEPPINK: Sheet = { background: "deeppink" };
        static DEEPSKYBLUE: Sheet = { background: "deepskyblue" };
        static DIMGRAY: Sheet = { background: "dimgray" };
        static DIMGREY: Sheet = { background: "dimgrey" };
        static DODGERBLUE: Sheet = { background: "dodgerblue" };
        static FIREBRICK: Sheet = { background: "firebrick" };
        static FLORALWHITE: Sheet = { background: "floralwhite" };
        static FORESTGREEN: Sheet = { background: "forestgreen" };
        static FUCHSIA: Sheet = { background: "fuchsia" };
        static GAINSBORO: Sheet = { background: "gainsboro" };
        static GHOSTWHITE: Sheet = { background: "ghostwhite" };
        static GOLD: Sheet = { background: "gold" };
        static GOLDENROD: Sheet = { background: "goldenrod" };
        static GRAY: Sheet = { background: "gray" };
        static GREEN: Sheet = { background: "green" };
        static GREENYELLOW: Sheet = { background: "greenyellow" };
        static GREY: Sheet = { background: "grey" };
        static HONEYDEW: Sheet = { background: "honeydew" };
        static HOTPINK: Sheet = { background: "hotpink" };
        static INDIANRED: Sheet = { background: "indianred" };
        static INDIGO: Sheet = { background: "indigo" };
        static IVORY: Sheet = { background: "ivory" };
        static KHAKI: Sheet = { background: "khaki" };
        static LAVENDER: Sheet = { background: "lavender" };
        static LAVENDERBLUSH: Sheet = { background: "lavenderblush" };
        static LAWNGREEN: Sheet = { background: "lawngreen" };
        static LEMONCHIFFON: Sheet = { background: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { background: "lightblue" };
        static LIGHTCORAL: Sheet = { background: "lightcoral" };
        static LIGHTCYAN: Sheet = { background: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { background: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { background: "lightgray" };
        static LIGHTGREEN: Sheet = { background: "lightgreen" };
        static LIGHTGREY: Sheet = { background: "lightgrey" };
        static LIGHTPINK: Sheet = { background: "lightpink" };
        static LIGHTSALMON: Sheet = { background: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { background: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { background: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { background: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { background: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { background: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { background: "lightyellow" };
        static LIME: Sheet = { background: "lime" };
        static LIMEGREEN: Sheet = { background: "limegreen" };
        static LINEN: Sheet = { background: "linen" };
        static MAGENTA: Sheet = { background: "magenta" };
        static MAROON: Sheet = { background: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { background: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { background: "mediumblue" };
        static MEDIUMORCHID: Sheet = { background: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { background: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { background: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { background: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { background: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { background: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { background: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { background: "midnightblue" };
        static MINTCREAM: Sheet = { background: "mintcream" };
        static MISTYROSE: Sheet = { background: "mistyrose" };
        static MOCCASIN: Sheet = { background: "moccasin" };
        static NAVAJOWHITE: Sheet = { background: "navajowhite" };
        static NAVY: Sheet = { background: "navy" };
        static OLDLACE: Sheet = { background: "oldlace" };
        static OLIVE: Sheet = { background: "olive" };
        static OLIVEDRAB: Sheet = { background: "olivedrab" };
        static ORANGE: Sheet = { background: "orange" };
        static ORANGERED: Sheet = { background: "orangered" };
        static ORCHID: Sheet = { background: "orchid" };
        static PALEGOLDENROD: Sheet = { background: "palegoldenrod" };
        static PALEGREEN: Sheet = { background: "palegreen" };
        static PALETURQUOISE: Sheet = { background: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { background: "palevioletred" };
        static PAPAYAWHIP: Sheet = { background: "papayawhip" };
        static PEACHPUFF: Sheet = { background: "peachpuff" };
        static PERU: Sheet = { background: "peru" };
        static PINK: Sheet = { background: "pink" };
        static PLUM: Sheet = { background: "plum" };
        static POWDERBLUE: Sheet = { background: "powderblue" };
        static PURPLE: Sheet = { background: "purple" };
        static REBECCAPURPLE: Sheet = { background: "rebeccapurple" };
        static RED: Sheet = { background: "red" };
        static ROSYBROWN: Sheet = { background: "rosybrown" };
        static ROYALBLUE: Sheet = { background: "royalblue" };
        static SADDLEBROWN: Sheet = { background: "saddlebrown" };
        static SALMON: Sheet = { background: "salmon" };
        static SANDYBROWN: Sheet = { background: "sandybrown" };
        static SEAGREEN: Sheet = { background: "seagreen" };
        static SEASHELL: Sheet = { background: "seashell" };
        static SIENNA: Sheet = { background: "sienna" };
        static SILVER: Sheet = { background: "silver" };
        static SKYBLUE: Sheet = { background: "skyblue" };
        static SLATEBLUE: Sheet = { background: "slateblue" };
        static SLATEGRAY: Sheet = { background: "slategray" };
        static SLATEGREY: Sheet = { background: "slategrey" };
        static SNOW: Sheet = { background: "snow" };
        static SPRINGGREEN: Sheet = { background: "springgreen" };
        static STEELBLUE: Sheet = { background: "steelblue" };
        static TAN: Sheet = { background: "tan" };
        static TEAL: Sheet = { background: "teal" };
        static THISTLE: Sheet = { background: "thistle" };
        static TOMATO: Sheet = { background: "tomato" };
        static TURQUOISE: Sheet = { background: "turquoise" };
        static VIOLET: Sheet = { background: "violet" };
        static WHEAT: Sheet = { background: "wheat" };
        static WHITE: Sheet = { background: "white" };
        static WHITESMOKE: Sheet = { background: "whitesmoke" };
        static YELLOW: Sheet = { background: "yellow" };
        static YELLOWGREEN: Sheet = { background: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { background: "currentcolor" };
        static ACTIVEBORDER: Sheet = { background: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { background: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { background: "AppWorkspace" };
        static BACKGROUND: Sheet = { background: "Background" };
        static BUTTONFACE: Sheet = { background: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { background: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { background: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { background: "ButtonText" };
        static CAPTIONTEXT: Sheet = { background: "CaptionText" };
        static GRAYTEXT: Sheet = { background: "GrayText" };
        static HIGHLIGHT: Sheet = { background: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { background: "HighlightText" };
        static INACTIVEBORDER: Sheet = { background: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { background: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { background: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { background: "InfoBackground" };
        static INFOTEXT: Sheet = { background: "InfoText" };
        static MENU: Sheet = { background: "Menu" };
        static MENUTEXT: Sheet = { background: "MenuText" };
        static SCROLLBAR: Sheet = { background: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { background: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { background: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { background: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { background: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { background: "ThreeDShadow" };
        static WINDOW: Sheet = { background: "Window" };
        static WINDOWFRAME: Sheet = { background: "WindowFrame" };
        static WINDOWTEXT: Sheet = { background: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ background: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ background: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ background: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ background: Resolution.x(...params) });
        static TO: Sheet = { background: "to" };
        static LEFT: Sheet = { background: "left" };
        static RIGHT: Sheet = { background: "right" };
        static TOP: Sheet = { background: "top" };
        static BOTTOM: Sheet = { background: "bottom" };
        static cap = (...params: number[]): Sheet => ({ background: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ background: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ background: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ background: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ background: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ background: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ background: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ background: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ background: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ background: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ background: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ background: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ background: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ background: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ background: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ background: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ background: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ background: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ background: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ background: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ background: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ background: Length.fr(...params) });
        static CIRCLE: Sheet = { background: "circle" };
        static ELLIPSE: Sheet = { background: "ellipse" };
        static CLOSEST_SIDE: Sheet = { background: "closest-side" };
        static FARTHEST_SIDE: Sheet = { background: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { background: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { background: "farthest-corner" };
        static AT: Sheet = { background: "at" };
        static CENTER: Sheet = { background: "center" };
        static AUTO: Sheet = { background: "auto" };
        static COVER: Sheet = { background: "cover" };
        static CONTAIN: Sheet = { background: "contain" };
        static REPEAT_X: Sheet = { background: "repeat-x" };
        static REPEAT_Y: Sheet = { background: "repeat-y" };
        static REPEAT: Sheet = { background: "repeat" };
        static SPACE: Sheet = { background: "space" };
        static ROUND: Sheet = { background: "round" };
        static NO_REPEAT: Sheet = { background: "no-repeat" };
        static SCROLL: Sheet = { background: "scroll" };
        static FIXED: Sheet = { background: "fixed" };
        static LOCAL: Sheet = { background: "local" };
        static BORDER_BOX: Sheet = { background: "border-box" };
        static PADDING_BOX: Sheet = { background: "padding-box" };
        static CONTENT_BOX: Sheet = { background: "content-box" };
    }
    export class BackgroundAttachment {
        static set = (...params: Param[]): Sheet => ({ backgroundAttachment: buildProperty(params) });
        static SCROLL: Sheet = { backgroundAttachment: "scroll" };
        static FIXED: Sheet = { backgroundAttachment: "fixed" };
        static LOCAL: Sheet = { backgroundAttachment: "local" };
    }
    export class BackgroundBlendMode {
        static set = (...params: Param[]): Sheet => ({ backgroundBlendMode: buildProperty(params) });
        static NORMAL: Sheet = { backgroundBlendMode: "normal" };
        static MULTIPLY: Sheet = { backgroundBlendMode: "multiply" };
        static SCREEN: Sheet = { backgroundBlendMode: "screen" };
        static OVERLAY: Sheet = { backgroundBlendMode: "overlay" };
        static DARKEN: Sheet = { backgroundBlendMode: "darken" };
        static LIGHTEN: Sheet = { backgroundBlendMode: "lighten" };
        static COLOR_DODGE: Sheet = { backgroundBlendMode: "color-dodge" };
        static COLOR_BURN: Sheet = { backgroundBlendMode: "color-burn" };
        static HARD_LIGHT: Sheet = { backgroundBlendMode: "hard-light" };
        static SOFT_LIGHT: Sheet = { backgroundBlendMode: "soft-light" };
        static DIFFERENCE: Sheet = { backgroundBlendMode: "difference" };
        static EXCLUSION: Sheet = { backgroundBlendMode: "exclusion" };
        static HUE: Sheet = { backgroundBlendMode: "hue" };
        static SATURATION: Sheet = { backgroundBlendMode: "saturation" };
        static COLOR: Sheet = { backgroundBlendMode: "color" };
        static LUMINOSITY: Sheet = { backgroundBlendMode: "luminosity" };
    }
    export class BackgroundClip {
        static set = (...params: Param[]): Sheet => ({ backgroundClip: buildProperty(params) });
        static BORDER_BOX: Sheet = { backgroundClip: "border-box" };
        static PADDING_BOX: Sheet = { backgroundClip: "padding-box" };
        static CONTENT_BOX: Sheet = { backgroundClip: "content-box" };
    }
    export class BackgroundColor {
        static set = (...params: Param[]): Sheet => ({ backgroundColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ backgroundColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ backgroundColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ backgroundColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ backgroundColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ backgroundColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { backgroundColor: "transparent" };
        static ALICEBLUE: Sheet = { backgroundColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { backgroundColor: "antiquewhite" };
        static AQUA: Sheet = { backgroundColor: "aqua" };
        static AQUAMARINE: Sheet = { backgroundColor: "aquamarine" };
        static AZURE: Sheet = { backgroundColor: "azure" };
        static BEIGE: Sheet = { backgroundColor: "beige" };
        static BISQUE: Sheet = { backgroundColor: "bisque" };
        static BLACK: Sheet = { backgroundColor: "black" };
        static BLANCHEDALMOND: Sheet = { backgroundColor: "blanchedalmond" };
        static BLUE: Sheet = { backgroundColor: "blue" };
        static BLUEVIOLET: Sheet = { backgroundColor: "blueviolet" };
        static BROWN: Sheet = { backgroundColor: "brown" };
        static BURLYWOOD: Sheet = { backgroundColor: "burlywood" };
        static CADETBLUE: Sheet = { backgroundColor: "cadetblue" };
        static CHARTREUSE: Sheet = { backgroundColor: "chartreuse" };
        static CHOCOLATE: Sheet = { backgroundColor: "chocolate" };
        static CORAL: Sheet = { backgroundColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { backgroundColor: "cornflowerblue" };
        static CORNSILK: Sheet = { backgroundColor: "cornsilk" };
        static CRIMSON: Sheet = { backgroundColor: "crimson" };
        static CYAN: Sheet = { backgroundColor: "cyan" };
        static DARKBLUE: Sheet = { backgroundColor: "darkblue" };
        static DARKCYAN: Sheet = { backgroundColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { backgroundColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { backgroundColor: "darkgray" };
        static DARKGREEN: Sheet = { backgroundColor: "darkgreen" };
        static DARKGREY: Sheet = { backgroundColor: "darkgrey" };
        static DARKKHAKI: Sheet = { backgroundColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { backgroundColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { backgroundColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { backgroundColor: "darkorange" };
        static DARKORCHID: Sheet = { backgroundColor: "darkorchid" };
        static DARKRED: Sheet = { backgroundColor: "darkred" };
        static DARKSALMON: Sheet = { backgroundColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { backgroundColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { backgroundColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { backgroundColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { backgroundColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { backgroundColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { backgroundColor: "darkviolet" };
        static DEEPPINK: Sheet = { backgroundColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { backgroundColor: "deepskyblue" };
        static DIMGRAY: Sheet = { backgroundColor: "dimgray" };
        static DIMGREY: Sheet = { backgroundColor: "dimgrey" };
        static DODGERBLUE: Sheet = { backgroundColor: "dodgerblue" };
        static FIREBRICK: Sheet = { backgroundColor: "firebrick" };
        static FLORALWHITE: Sheet = { backgroundColor: "floralwhite" };
        static FORESTGREEN: Sheet = { backgroundColor: "forestgreen" };
        static FUCHSIA: Sheet = { backgroundColor: "fuchsia" };
        static GAINSBORO: Sheet = { backgroundColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { backgroundColor: "ghostwhite" };
        static GOLD: Sheet = { backgroundColor: "gold" };
        static GOLDENROD: Sheet = { backgroundColor: "goldenrod" };
        static GRAY: Sheet = { backgroundColor: "gray" };
        static GREEN: Sheet = { backgroundColor: "green" };
        static GREENYELLOW: Sheet = { backgroundColor: "greenyellow" };
        static GREY: Sheet = { backgroundColor: "grey" };
        static HONEYDEW: Sheet = { backgroundColor: "honeydew" };
        static HOTPINK: Sheet = { backgroundColor: "hotpink" };
        static INDIANRED: Sheet = { backgroundColor: "indianred" };
        static INDIGO: Sheet = { backgroundColor: "indigo" };
        static IVORY: Sheet = { backgroundColor: "ivory" };
        static KHAKI: Sheet = { backgroundColor: "khaki" };
        static LAVENDER: Sheet = { backgroundColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { backgroundColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { backgroundColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { backgroundColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { backgroundColor: "lightblue" };
        static LIGHTCORAL: Sheet = { backgroundColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { backgroundColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { backgroundColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { backgroundColor: "lightgray" };
        static LIGHTGREEN: Sheet = { backgroundColor: "lightgreen" };
        static LIGHTGREY: Sheet = { backgroundColor: "lightgrey" };
        static LIGHTPINK: Sheet = { backgroundColor: "lightpink" };
        static LIGHTSALMON: Sheet = { backgroundColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { backgroundColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { backgroundColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { backgroundColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { backgroundColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { backgroundColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { backgroundColor: "lightyellow" };
        static LIME: Sheet = { backgroundColor: "lime" };
        static LIMEGREEN: Sheet = { backgroundColor: "limegreen" };
        static LINEN: Sheet = { backgroundColor: "linen" };
        static MAGENTA: Sheet = { backgroundColor: "magenta" };
        static MAROON: Sheet = { backgroundColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { backgroundColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { backgroundColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { backgroundColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { backgroundColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { backgroundColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { backgroundColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { backgroundColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { backgroundColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { backgroundColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { backgroundColor: "midnightblue" };
        static MINTCREAM: Sheet = { backgroundColor: "mintcream" };
        static MISTYROSE: Sheet = { backgroundColor: "mistyrose" };
        static MOCCASIN: Sheet = { backgroundColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { backgroundColor: "navajowhite" };
        static NAVY: Sheet = { backgroundColor: "navy" };
        static OLDLACE: Sheet = { backgroundColor: "oldlace" };
        static OLIVE: Sheet = { backgroundColor: "olive" };
        static OLIVEDRAB: Sheet = { backgroundColor: "olivedrab" };
        static ORANGE: Sheet = { backgroundColor: "orange" };
        static ORANGERED: Sheet = { backgroundColor: "orangered" };
        static ORCHID: Sheet = { backgroundColor: "orchid" };
        static PALEGOLDENROD: Sheet = { backgroundColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { backgroundColor: "palegreen" };
        static PALETURQUOISE: Sheet = { backgroundColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { backgroundColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { backgroundColor: "papayawhip" };
        static PEACHPUFF: Sheet = { backgroundColor: "peachpuff" };
        static PERU: Sheet = { backgroundColor: "peru" };
        static PINK: Sheet = { backgroundColor: "pink" };
        static PLUM: Sheet = { backgroundColor: "plum" };
        static POWDERBLUE: Sheet = { backgroundColor: "powderblue" };
        static PURPLE: Sheet = { backgroundColor: "purple" };
        static REBECCAPURPLE: Sheet = { backgroundColor: "rebeccapurple" };
        static RED: Sheet = { backgroundColor: "red" };
        static ROSYBROWN: Sheet = { backgroundColor: "rosybrown" };
        static ROYALBLUE: Sheet = { backgroundColor: "royalblue" };
        static SADDLEBROWN: Sheet = { backgroundColor: "saddlebrown" };
        static SALMON: Sheet = { backgroundColor: "salmon" };
        static SANDYBROWN: Sheet = { backgroundColor: "sandybrown" };
        static SEAGREEN: Sheet = { backgroundColor: "seagreen" };
        static SEASHELL: Sheet = { backgroundColor: "seashell" };
        static SIENNA: Sheet = { backgroundColor: "sienna" };
        static SILVER: Sheet = { backgroundColor: "silver" };
        static SKYBLUE: Sheet = { backgroundColor: "skyblue" };
        static SLATEBLUE: Sheet = { backgroundColor: "slateblue" };
        static SLATEGRAY: Sheet = { backgroundColor: "slategray" };
        static SLATEGREY: Sheet = { backgroundColor: "slategrey" };
        static SNOW: Sheet = { backgroundColor: "snow" };
        static SPRINGGREEN: Sheet = { backgroundColor: "springgreen" };
        static STEELBLUE: Sheet = { backgroundColor: "steelblue" };
        static TAN: Sheet = { backgroundColor: "tan" };
        static TEAL: Sheet = { backgroundColor: "teal" };
        static THISTLE: Sheet = { backgroundColor: "thistle" };
        static TOMATO: Sheet = { backgroundColor: "tomato" };
        static TURQUOISE: Sheet = { backgroundColor: "turquoise" };
        static VIOLET: Sheet = { backgroundColor: "violet" };
        static WHEAT: Sheet = { backgroundColor: "wheat" };
        static WHITE: Sheet = { backgroundColor: "white" };
        static WHITESMOKE: Sheet = { backgroundColor: "whitesmoke" };
        static YELLOW: Sheet = { backgroundColor: "yellow" };
        static YELLOWGREEN: Sheet = { backgroundColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { backgroundColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { backgroundColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { backgroundColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { backgroundColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { backgroundColor: "Background" };
        static BUTTONFACE: Sheet = { backgroundColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { backgroundColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { backgroundColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { backgroundColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { backgroundColor: "CaptionText" };
        static GRAYTEXT: Sheet = { backgroundColor: "GrayText" };
        static HIGHLIGHT: Sheet = { backgroundColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { backgroundColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { backgroundColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { backgroundColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { backgroundColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { backgroundColor: "InfoBackground" };
        static INFOTEXT: Sheet = { backgroundColor: "InfoText" };
        static MENU: Sheet = { backgroundColor: "Menu" };
        static MENUTEXT: Sheet = { backgroundColor: "MenuText" };
        static SCROLLBAR: Sheet = { backgroundColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { backgroundColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { backgroundColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { backgroundColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { backgroundColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { backgroundColor: "ThreeDShadow" };
        static WINDOW: Sheet = { backgroundColor: "Window" };
        static WINDOWFRAME: Sheet = { backgroundColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { backgroundColor: "WindowText" };
    }
    export class BackgroundImage {
        static set = (...params: Param[]): Sheet => ({ backgroundImage: buildProperty(params) });
        static NONE: Sheet = { backgroundImage: "none" };
        static X = (...params: number[]): Sheet => ({ backgroundImage: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ backgroundImage: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ backgroundImage: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ backgroundImage: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ backgroundImage: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { backgroundImage: "transparent" };
        static ALICEBLUE: Sheet = { backgroundImage: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { backgroundImage: "antiquewhite" };
        static AQUA: Sheet = { backgroundImage: "aqua" };
        static AQUAMARINE: Sheet = { backgroundImage: "aquamarine" };
        static AZURE: Sheet = { backgroundImage: "azure" };
        static BEIGE: Sheet = { backgroundImage: "beige" };
        static BISQUE: Sheet = { backgroundImage: "bisque" };
        static BLACK: Sheet = { backgroundImage: "black" };
        static BLANCHEDALMOND: Sheet = { backgroundImage: "blanchedalmond" };
        static BLUE: Sheet = { backgroundImage: "blue" };
        static BLUEVIOLET: Sheet = { backgroundImage: "blueviolet" };
        static BROWN: Sheet = { backgroundImage: "brown" };
        static BURLYWOOD: Sheet = { backgroundImage: "burlywood" };
        static CADETBLUE: Sheet = { backgroundImage: "cadetblue" };
        static CHARTREUSE: Sheet = { backgroundImage: "chartreuse" };
        static CHOCOLATE: Sheet = { backgroundImage: "chocolate" };
        static CORAL: Sheet = { backgroundImage: "coral" };
        static CORNFLOWERBLUE: Sheet = { backgroundImage: "cornflowerblue" };
        static CORNSILK: Sheet = { backgroundImage: "cornsilk" };
        static CRIMSON: Sheet = { backgroundImage: "crimson" };
        static CYAN: Sheet = { backgroundImage: "cyan" };
        static DARKBLUE: Sheet = { backgroundImage: "darkblue" };
        static DARKCYAN: Sheet = { backgroundImage: "darkcyan" };
        static DARKGOLDENROD: Sheet = { backgroundImage: "darkgoldenrod" };
        static DARKGRAY: Sheet = { backgroundImage: "darkgray" };
        static DARKGREEN: Sheet = { backgroundImage: "darkgreen" };
        static DARKGREY: Sheet = { backgroundImage: "darkgrey" };
        static DARKKHAKI: Sheet = { backgroundImage: "darkkhaki" };
        static DARKMAGENTA: Sheet = { backgroundImage: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { backgroundImage: "darkolivegreen" };
        static DARKORANGE: Sheet = { backgroundImage: "darkorange" };
        static DARKORCHID: Sheet = { backgroundImage: "darkorchid" };
        static DARKRED: Sheet = { backgroundImage: "darkred" };
        static DARKSALMON: Sheet = { backgroundImage: "darksalmon" };
        static DARKSEAGREEN: Sheet = { backgroundImage: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { backgroundImage: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { backgroundImage: "darkslategray" };
        static DARKSLATEGREY: Sheet = { backgroundImage: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { backgroundImage: "darkturquoise" };
        static DARKVIOLET: Sheet = { backgroundImage: "darkviolet" };
        static DEEPPINK: Sheet = { backgroundImage: "deeppink" };
        static DEEPSKYBLUE: Sheet = { backgroundImage: "deepskyblue" };
        static DIMGRAY: Sheet = { backgroundImage: "dimgray" };
        static DIMGREY: Sheet = { backgroundImage: "dimgrey" };
        static DODGERBLUE: Sheet = { backgroundImage: "dodgerblue" };
        static FIREBRICK: Sheet = { backgroundImage: "firebrick" };
        static FLORALWHITE: Sheet = { backgroundImage: "floralwhite" };
        static FORESTGREEN: Sheet = { backgroundImage: "forestgreen" };
        static FUCHSIA: Sheet = { backgroundImage: "fuchsia" };
        static GAINSBORO: Sheet = { backgroundImage: "gainsboro" };
        static GHOSTWHITE: Sheet = { backgroundImage: "ghostwhite" };
        static GOLD: Sheet = { backgroundImage: "gold" };
        static GOLDENROD: Sheet = { backgroundImage: "goldenrod" };
        static GRAY: Sheet = { backgroundImage: "gray" };
        static GREEN: Sheet = { backgroundImage: "green" };
        static GREENYELLOW: Sheet = { backgroundImage: "greenyellow" };
        static GREY: Sheet = { backgroundImage: "grey" };
        static HONEYDEW: Sheet = { backgroundImage: "honeydew" };
        static HOTPINK: Sheet = { backgroundImage: "hotpink" };
        static INDIANRED: Sheet = { backgroundImage: "indianred" };
        static INDIGO: Sheet = { backgroundImage: "indigo" };
        static IVORY: Sheet = { backgroundImage: "ivory" };
        static KHAKI: Sheet = { backgroundImage: "khaki" };
        static LAVENDER: Sheet = { backgroundImage: "lavender" };
        static LAVENDERBLUSH: Sheet = { backgroundImage: "lavenderblush" };
        static LAWNGREEN: Sheet = { backgroundImage: "lawngreen" };
        static LEMONCHIFFON: Sheet = { backgroundImage: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { backgroundImage: "lightblue" };
        static LIGHTCORAL: Sheet = { backgroundImage: "lightcoral" };
        static LIGHTCYAN: Sheet = { backgroundImage: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { backgroundImage: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { backgroundImage: "lightgray" };
        static LIGHTGREEN: Sheet = { backgroundImage: "lightgreen" };
        static LIGHTGREY: Sheet = { backgroundImage: "lightgrey" };
        static LIGHTPINK: Sheet = { backgroundImage: "lightpink" };
        static LIGHTSALMON: Sheet = { backgroundImage: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { backgroundImage: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { backgroundImage: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { backgroundImage: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { backgroundImage: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { backgroundImage: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { backgroundImage: "lightyellow" };
        static LIME: Sheet = { backgroundImage: "lime" };
        static LIMEGREEN: Sheet = { backgroundImage: "limegreen" };
        static LINEN: Sheet = { backgroundImage: "linen" };
        static MAGENTA: Sheet = { backgroundImage: "magenta" };
        static MAROON: Sheet = { backgroundImage: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { backgroundImage: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { backgroundImage: "mediumblue" };
        static MEDIUMORCHID: Sheet = { backgroundImage: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { backgroundImage: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { backgroundImage: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { backgroundImage: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { backgroundImage: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { backgroundImage: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { backgroundImage: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { backgroundImage: "midnightblue" };
        static MINTCREAM: Sheet = { backgroundImage: "mintcream" };
        static MISTYROSE: Sheet = { backgroundImage: "mistyrose" };
        static MOCCASIN: Sheet = { backgroundImage: "moccasin" };
        static NAVAJOWHITE: Sheet = { backgroundImage: "navajowhite" };
        static NAVY: Sheet = { backgroundImage: "navy" };
        static OLDLACE: Sheet = { backgroundImage: "oldlace" };
        static OLIVE: Sheet = { backgroundImage: "olive" };
        static OLIVEDRAB: Sheet = { backgroundImage: "olivedrab" };
        static ORANGE: Sheet = { backgroundImage: "orange" };
        static ORANGERED: Sheet = { backgroundImage: "orangered" };
        static ORCHID: Sheet = { backgroundImage: "orchid" };
        static PALEGOLDENROD: Sheet = { backgroundImage: "palegoldenrod" };
        static PALEGREEN: Sheet = { backgroundImage: "palegreen" };
        static PALETURQUOISE: Sheet = { backgroundImage: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { backgroundImage: "palevioletred" };
        static PAPAYAWHIP: Sheet = { backgroundImage: "papayawhip" };
        static PEACHPUFF: Sheet = { backgroundImage: "peachpuff" };
        static PERU: Sheet = { backgroundImage: "peru" };
        static PINK: Sheet = { backgroundImage: "pink" };
        static PLUM: Sheet = { backgroundImage: "plum" };
        static POWDERBLUE: Sheet = { backgroundImage: "powderblue" };
        static PURPLE: Sheet = { backgroundImage: "purple" };
        static REBECCAPURPLE: Sheet = { backgroundImage: "rebeccapurple" };
        static RED: Sheet = { backgroundImage: "red" };
        static ROSYBROWN: Sheet = { backgroundImage: "rosybrown" };
        static ROYALBLUE: Sheet = { backgroundImage: "royalblue" };
        static SADDLEBROWN: Sheet = { backgroundImage: "saddlebrown" };
        static SALMON: Sheet = { backgroundImage: "salmon" };
        static SANDYBROWN: Sheet = { backgroundImage: "sandybrown" };
        static SEAGREEN: Sheet = { backgroundImage: "seagreen" };
        static SEASHELL: Sheet = { backgroundImage: "seashell" };
        static SIENNA: Sheet = { backgroundImage: "sienna" };
        static SILVER: Sheet = { backgroundImage: "silver" };
        static SKYBLUE: Sheet = { backgroundImage: "skyblue" };
        static SLATEBLUE: Sheet = { backgroundImage: "slateblue" };
        static SLATEGRAY: Sheet = { backgroundImage: "slategray" };
        static SLATEGREY: Sheet = { backgroundImage: "slategrey" };
        static SNOW: Sheet = { backgroundImage: "snow" };
        static SPRINGGREEN: Sheet = { backgroundImage: "springgreen" };
        static STEELBLUE: Sheet = { backgroundImage: "steelblue" };
        static TAN: Sheet = { backgroundImage: "tan" };
        static TEAL: Sheet = { backgroundImage: "teal" };
        static THISTLE: Sheet = { backgroundImage: "thistle" };
        static TOMATO: Sheet = { backgroundImage: "tomato" };
        static TURQUOISE: Sheet = { backgroundImage: "turquoise" };
        static VIOLET: Sheet = { backgroundImage: "violet" };
        static WHEAT: Sheet = { backgroundImage: "wheat" };
        static WHITE: Sheet = { backgroundImage: "white" };
        static WHITESMOKE: Sheet = { backgroundImage: "whitesmoke" };
        static YELLOW: Sheet = { backgroundImage: "yellow" };
        static YELLOWGREEN: Sheet = { backgroundImage: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { backgroundImage: "currentcolor" };
        static ACTIVEBORDER: Sheet = { backgroundImage: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { backgroundImage: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { backgroundImage: "AppWorkspace" };
        static BACKGROUND: Sheet = { backgroundImage: "Background" };
        static BUTTONFACE: Sheet = { backgroundImage: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { backgroundImage: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { backgroundImage: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { backgroundImage: "ButtonText" };
        static CAPTIONTEXT: Sheet = { backgroundImage: "CaptionText" };
        static GRAYTEXT: Sheet = { backgroundImage: "GrayText" };
        static HIGHLIGHT: Sheet = { backgroundImage: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { backgroundImage: "HighlightText" };
        static INACTIVEBORDER: Sheet = { backgroundImage: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { backgroundImage: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { backgroundImage: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { backgroundImage: "InfoBackground" };
        static INFOTEXT: Sheet = { backgroundImage: "InfoText" };
        static MENU: Sheet = { backgroundImage: "Menu" };
        static MENUTEXT: Sheet = { backgroundImage: "MenuText" };
        static SCROLLBAR: Sheet = { backgroundImage: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { backgroundImage: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { backgroundImage: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { backgroundImage: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { backgroundImage: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { backgroundImage: "ThreeDShadow" };
        static WINDOW: Sheet = { backgroundImage: "Window" };
        static WINDOWFRAME: Sheet = { backgroundImage: "WindowFrame" };
        static WINDOWTEXT: Sheet = { backgroundImage: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ backgroundImage: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ backgroundImage: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ backgroundImage: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ backgroundImage: Resolution.x(...params) });
        static TO: Sheet = { backgroundImage: "to" };
        static LEFT: Sheet = { backgroundImage: "left" };
        static RIGHT: Sheet = { backgroundImage: "right" };
        static TOP: Sheet = { backgroundImage: "top" };
        static BOTTOM: Sheet = { backgroundImage: "bottom" };
        static cap = (...params: number[]): Sheet => ({ backgroundImage: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ backgroundImage: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ backgroundImage: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ backgroundImage: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ backgroundImage: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ backgroundImage: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ backgroundImage: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ backgroundImage: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ backgroundImage: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ backgroundImage: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ backgroundImage: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ backgroundImage: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ backgroundImage: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ backgroundImage: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ backgroundImage: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ backgroundImage: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ backgroundImage: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ backgroundImage: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ backgroundImage: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ backgroundImage: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ backgroundImage: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ backgroundImage: Length.fr(...params) });
        static CIRCLE: Sheet = { backgroundImage: "circle" };
        static ELLIPSE: Sheet = { backgroundImage: "ellipse" };
        static CLOSEST_SIDE: Sheet = { backgroundImage: "closest-side" };
        static FARTHEST_SIDE: Sheet = { backgroundImage: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { backgroundImage: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { backgroundImage: "farthest-corner" };
        static AT: Sheet = { backgroundImage: "at" };
        static CENTER: Sheet = { backgroundImage: "center" };
    }
    export class BackgroundOrigin {
        static set = (...params: Param[]): Sheet => ({ backgroundOrigin: buildProperty(params) });
        static BORDER_BOX: Sheet = { backgroundOrigin: "border-box" };
        static PADDING_BOX: Sheet = { backgroundOrigin: "padding-box" };
        static CONTENT_BOX: Sheet = { backgroundOrigin: "content-box" };
    }
    export class BackgroundPosition {
        static set = (...params: Param[]): Sheet => ({ backgroundPosition: buildProperty(params) });
        static LEFT: Sheet = { backgroundPosition: "left" };
        static CENTER: Sheet = { backgroundPosition: "center" };
        static RIGHT: Sheet = { backgroundPosition: "right" };
        static TOP: Sheet = { backgroundPosition: "top" };
        static BOTTOM: Sheet = { backgroundPosition: "bottom" };
        static cap = (...params: number[]): Sheet => ({ backgroundPosition: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ backgroundPosition: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ backgroundPosition: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ backgroundPosition: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ backgroundPosition: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ backgroundPosition: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ backgroundPosition: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ backgroundPosition: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ backgroundPosition: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ backgroundPosition: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ backgroundPosition: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ backgroundPosition: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ backgroundPosition: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ backgroundPosition: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ backgroundPosition: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ backgroundPosition: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ backgroundPosition: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ backgroundPosition: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ backgroundPosition: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ backgroundPosition: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ backgroundPosition: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ backgroundPosition: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ backgroundPosition: Length.X(...params) });
    }
    export class BackgroundPositionX {
        static set = (...params: Param[]): Sheet => ({ backgroundPositionX: buildProperty(params) });
        static CENTER: Sheet = { backgroundPositionX: "center" };
        static LEFT: Sheet = { backgroundPositionX: "left" };
        static RIGHT: Sheet = { backgroundPositionX: "right" };
        static X_START: Sheet = { backgroundPositionX: "x-start" };
        static X_END: Sheet = { backgroundPositionX: "x-end" };
        static cap = (...params: number[]): Sheet => ({ backgroundPositionX: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ backgroundPositionX: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ backgroundPositionX: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ backgroundPositionX: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ backgroundPositionX: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ backgroundPositionX: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ backgroundPositionX: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ backgroundPositionX: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ backgroundPositionX: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ backgroundPositionX: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ backgroundPositionX: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ backgroundPositionX: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ backgroundPositionX: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ backgroundPositionX: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ backgroundPositionX: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ backgroundPositionX: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ backgroundPositionX: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ backgroundPositionX: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ backgroundPositionX: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ backgroundPositionX: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ backgroundPositionX: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ backgroundPositionX: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ backgroundPositionX: Length.X(...params) });
    }
    export class BackgroundPositionY {
        static set = (...params: Param[]): Sheet => ({ backgroundPositionY: buildProperty(params) });
        static CENTER: Sheet = { backgroundPositionY: "center" };
        static TOP: Sheet = { backgroundPositionY: "top" };
        static BOTTOM: Sheet = { backgroundPositionY: "bottom" };
        static Y_START: Sheet = { backgroundPositionY: "y-start" };
        static Y_END: Sheet = { backgroundPositionY: "y-end" };
        static cap = (...params: number[]): Sheet => ({ backgroundPositionY: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ backgroundPositionY: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ backgroundPositionY: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ backgroundPositionY: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ backgroundPositionY: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ backgroundPositionY: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ backgroundPositionY: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ backgroundPositionY: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ backgroundPositionY: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ backgroundPositionY: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ backgroundPositionY: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ backgroundPositionY: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ backgroundPositionY: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ backgroundPositionY: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ backgroundPositionY: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ backgroundPositionY: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ backgroundPositionY: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ backgroundPositionY: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ backgroundPositionY: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ backgroundPositionY: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ backgroundPositionY: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ backgroundPositionY: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ backgroundPositionY: Length.X(...params) });
    }
    export class BackgroundRepeat {
        static set = (...params: Param[]): Sheet => ({ backgroundRepeat: buildProperty(params) });
        static REPEAT_X: Sheet = { backgroundRepeat: "repeat-x" };
        static REPEAT_Y: Sheet = { backgroundRepeat: "repeat-y" };
        static REPEAT: Sheet = { backgroundRepeat: "repeat" };
        static SPACE: Sheet = { backgroundRepeat: "space" };
        static ROUND: Sheet = { backgroundRepeat: "round" };
        static NO_REPEAT: Sheet = { backgroundRepeat: "no-repeat" };
    }
    export class BackgroundSize {
        static set = (...params: Param[]): Sheet => ({ backgroundSize: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ backgroundSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ backgroundSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ backgroundSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ backgroundSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ backgroundSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ backgroundSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ backgroundSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ backgroundSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ backgroundSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ backgroundSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ backgroundSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ backgroundSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ backgroundSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ backgroundSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ backgroundSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ backgroundSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ backgroundSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ backgroundSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ backgroundSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ backgroundSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ backgroundSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ backgroundSize: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ backgroundSize: Length.X(...params) });
        static AUTO: Sheet = { backgroundSize: "auto" };
        static COVER: Sheet = { backgroundSize: "cover" };
        static CONTAIN: Sheet = { backgroundSize: "contain" };
    }
    export class BlockOverflow {
        static set = (...params: Param[]): Sheet => ({ blockOverflow: buildProperty(params) });
        static CLIP: Sheet = { blockOverflow: "clip" };
        static ELLIPSIS: Sheet = { blockOverflow: "ellipsis" };
    }
    export class BlockSize {
        static set = (...params: Param[]): Sheet => ({ blockSize: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ blockSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ blockSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ blockSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ blockSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ blockSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ blockSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ blockSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ blockSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ blockSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ blockSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ blockSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ blockSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ blockSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ blockSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ blockSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ blockSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ blockSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ blockSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ blockSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ blockSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ blockSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ blockSize: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ blockSize: Length.X(...params) });
        static BORDER_BOX: Sheet = { blockSize: "border-box" };
        static CONTENT_BOX: Sheet = { blockSize: "content-box" };
        static AVAILABLE: Sheet = { blockSize: "available" };
        static MIN_CONTENT: Sheet = { blockSize: "min-content" };
        static MAX_CONTENT: Sheet = { blockSize: "max-content" };
        static FIT_CONTENT: Sheet = { blockSize: "fit-content" };
        static AUTO: Sheet = { blockSize: "auto" };
    }
    export class Border {
        static set = (...params: Param[]): Sheet => ({ border: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ border: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ border: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ border: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ border: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ border: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ border: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ border: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ border: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ border: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ border: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ border: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ border: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ border: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ border: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ border: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ border: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ border: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ border: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ border: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ border: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ border: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ border: Length.fr(...params) });
        static THIN: Sheet = { border: "thin" };
        static MEDIUM: Sheet = { border: "medium" };
        static THICK: Sheet = { border: "thick" };
        static NONE: Sheet = { border: "none" };
        static HIDDEN: Sheet = { border: "hidden" };
        static DOTTED: Sheet = { border: "dotted" };
        static DASHED: Sheet = { border: "dashed" };
        static SOLID: Sheet = { border: "solid" };
        static DOUBLE: Sheet = { border: "double" };
        static GROOVE: Sheet = { border: "groove" };
        static RIDGE: Sheet = { border: "ridge" };
        static INSET: Sheet = { border: "inset" };
        static OUTSET: Sheet = { border: "outset" };
        static X = (...params: number[]): Sheet => ({ border: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ border: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ border: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ border: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ border: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { border: "transparent" };
        static ALICEBLUE: Sheet = { border: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { border: "antiquewhite" };
        static AQUA: Sheet = { border: "aqua" };
        static AQUAMARINE: Sheet = { border: "aquamarine" };
        static AZURE: Sheet = { border: "azure" };
        static BEIGE: Sheet = { border: "beige" };
        static BISQUE: Sheet = { border: "bisque" };
        static BLACK: Sheet = { border: "black" };
        static BLANCHEDALMOND: Sheet = { border: "blanchedalmond" };
        static BLUE: Sheet = { border: "blue" };
        static BLUEVIOLET: Sheet = { border: "blueviolet" };
        static BROWN: Sheet = { border: "brown" };
        static BURLYWOOD: Sheet = { border: "burlywood" };
        static CADETBLUE: Sheet = { border: "cadetblue" };
        static CHARTREUSE: Sheet = { border: "chartreuse" };
        static CHOCOLATE: Sheet = { border: "chocolate" };
        static CORAL: Sheet = { border: "coral" };
        static CORNFLOWERBLUE: Sheet = { border: "cornflowerblue" };
        static CORNSILK: Sheet = { border: "cornsilk" };
        static CRIMSON: Sheet = { border: "crimson" };
        static CYAN: Sheet = { border: "cyan" };
        static DARKBLUE: Sheet = { border: "darkblue" };
        static DARKCYAN: Sheet = { border: "darkcyan" };
        static DARKGOLDENROD: Sheet = { border: "darkgoldenrod" };
        static DARKGRAY: Sheet = { border: "darkgray" };
        static DARKGREEN: Sheet = { border: "darkgreen" };
        static DARKGREY: Sheet = { border: "darkgrey" };
        static DARKKHAKI: Sheet = { border: "darkkhaki" };
        static DARKMAGENTA: Sheet = { border: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { border: "darkolivegreen" };
        static DARKORANGE: Sheet = { border: "darkorange" };
        static DARKORCHID: Sheet = { border: "darkorchid" };
        static DARKRED: Sheet = { border: "darkred" };
        static DARKSALMON: Sheet = { border: "darksalmon" };
        static DARKSEAGREEN: Sheet = { border: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { border: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { border: "darkslategray" };
        static DARKSLATEGREY: Sheet = { border: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { border: "darkturquoise" };
        static DARKVIOLET: Sheet = { border: "darkviolet" };
        static DEEPPINK: Sheet = { border: "deeppink" };
        static DEEPSKYBLUE: Sheet = { border: "deepskyblue" };
        static DIMGRAY: Sheet = { border: "dimgray" };
        static DIMGREY: Sheet = { border: "dimgrey" };
        static DODGERBLUE: Sheet = { border: "dodgerblue" };
        static FIREBRICK: Sheet = { border: "firebrick" };
        static FLORALWHITE: Sheet = { border: "floralwhite" };
        static FORESTGREEN: Sheet = { border: "forestgreen" };
        static FUCHSIA: Sheet = { border: "fuchsia" };
        static GAINSBORO: Sheet = { border: "gainsboro" };
        static GHOSTWHITE: Sheet = { border: "ghostwhite" };
        static GOLD: Sheet = { border: "gold" };
        static GOLDENROD: Sheet = { border: "goldenrod" };
        static GRAY: Sheet = { border: "gray" };
        static GREEN: Sheet = { border: "green" };
        static GREENYELLOW: Sheet = { border: "greenyellow" };
        static GREY: Sheet = { border: "grey" };
        static HONEYDEW: Sheet = { border: "honeydew" };
        static HOTPINK: Sheet = { border: "hotpink" };
        static INDIANRED: Sheet = { border: "indianred" };
        static INDIGO: Sheet = { border: "indigo" };
        static IVORY: Sheet = { border: "ivory" };
        static KHAKI: Sheet = { border: "khaki" };
        static LAVENDER: Sheet = { border: "lavender" };
        static LAVENDERBLUSH: Sheet = { border: "lavenderblush" };
        static LAWNGREEN: Sheet = { border: "lawngreen" };
        static LEMONCHIFFON: Sheet = { border: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { border: "lightblue" };
        static LIGHTCORAL: Sheet = { border: "lightcoral" };
        static LIGHTCYAN: Sheet = { border: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { border: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { border: "lightgray" };
        static LIGHTGREEN: Sheet = { border: "lightgreen" };
        static LIGHTGREY: Sheet = { border: "lightgrey" };
        static LIGHTPINK: Sheet = { border: "lightpink" };
        static LIGHTSALMON: Sheet = { border: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { border: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { border: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { border: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { border: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { border: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { border: "lightyellow" };
        static LIME: Sheet = { border: "lime" };
        static LIMEGREEN: Sheet = { border: "limegreen" };
        static LINEN: Sheet = { border: "linen" };
        static MAGENTA: Sheet = { border: "magenta" };
        static MAROON: Sheet = { border: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { border: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { border: "mediumblue" };
        static MEDIUMORCHID: Sheet = { border: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { border: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { border: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { border: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { border: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { border: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { border: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { border: "midnightblue" };
        static MINTCREAM: Sheet = { border: "mintcream" };
        static MISTYROSE: Sheet = { border: "mistyrose" };
        static MOCCASIN: Sheet = { border: "moccasin" };
        static NAVAJOWHITE: Sheet = { border: "navajowhite" };
        static NAVY: Sheet = { border: "navy" };
        static OLDLACE: Sheet = { border: "oldlace" };
        static OLIVE: Sheet = { border: "olive" };
        static OLIVEDRAB: Sheet = { border: "olivedrab" };
        static ORANGE: Sheet = { border: "orange" };
        static ORANGERED: Sheet = { border: "orangered" };
        static ORCHID: Sheet = { border: "orchid" };
        static PALEGOLDENROD: Sheet = { border: "palegoldenrod" };
        static PALEGREEN: Sheet = { border: "palegreen" };
        static PALETURQUOISE: Sheet = { border: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { border: "palevioletred" };
        static PAPAYAWHIP: Sheet = { border: "papayawhip" };
        static PEACHPUFF: Sheet = { border: "peachpuff" };
        static PERU: Sheet = { border: "peru" };
        static PINK: Sheet = { border: "pink" };
        static PLUM: Sheet = { border: "plum" };
        static POWDERBLUE: Sheet = { border: "powderblue" };
        static PURPLE: Sheet = { border: "purple" };
        static REBECCAPURPLE: Sheet = { border: "rebeccapurple" };
        static RED: Sheet = { border: "red" };
        static ROSYBROWN: Sheet = { border: "rosybrown" };
        static ROYALBLUE: Sheet = { border: "royalblue" };
        static SADDLEBROWN: Sheet = { border: "saddlebrown" };
        static SALMON: Sheet = { border: "salmon" };
        static SANDYBROWN: Sheet = { border: "sandybrown" };
        static SEAGREEN: Sheet = { border: "seagreen" };
        static SEASHELL: Sheet = { border: "seashell" };
        static SIENNA: Sheet = { border: "sienna" };
        static SILVER: Sheet = { border: "silver" };
        static SKYBLUE: Sheet = { border: "skyblue" };
        static SLATEBLUE: Sheet = { border: "slateblue" };
        static SLATEGRAY: Sheet = { border: "slategray" };
        static SLATEGREY: Sheet = { border: "slategrey" };
        static SNOW: Sheet = { border: "snow" };
        static SPRINGGREEN: Sheet = { border: "springgreen" };
        static STEELBLUE: Sheet = { border: "steelblue" };
        static TAN: Sheet = { border: "tan" };
        static TEAL: Sheet = { border: "teal" };
        static THISTLE: Sheet = { border: "thistle" };
        static TOMATO: Sheet = { border: "tomato" };
        static TURQUOISE: Sheet = { border: "turquoise" };
        static VIOLET: Sheet = { border: "violet" };
        static WHEAT: Sheet = { border: "wheat" };
        static WHITE: Sheet = { border: "white" };
        static WHITESMOKE: Sheet = { border: "whitesmoke" };
        static YELLOW: Sheet = { border: "yellow" };
        static YELLOWGREEN: Sheet = { border: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { border: "currentcolor" };
        static ACTIVEBORDER: Sheet = { border: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { border: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { border: "AppWorkspace" };
        static BACKGROUND: Sheet = { border: "Background" };
        static BUTTONFACE: Sheet = { border: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { border: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { border: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { border: "ButtonText" };
        static CAPTIONTEXT: Sheet = { border: "CaptionText" };
        static GRAYTEXT: Sheet = { border: "GrayText" };
        static HIGHLIGHT: Sheet = { border: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { border: "HighlightText" };
        static INACTIVEBORDER: Sheet = { border: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { border: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { border: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { border: "InfoBackground" };
        static INFOTEXT: Sheet = { border: "InfoText" };
        static MENU: Sheet = { border: "Menu" };
        static MENUTEXT: Sheet = { border: "MenuText" };
        static SCROLLBAR: Sheet = { border: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { border: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { border: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { border: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { border: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { border: "ThreeDShadow" };
        static WINDOW: Sheet = { border: "Window" };
        static WINDOWFRAME: Sheet = { border: "WindowFrame" };
        static WINDOWTEXT: Sheet = { border: "WindowText" };
    }
    export class BorderBlockEnd {
        static set = (...params: Param[]): Sheet => ({ borderBlockEnd: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderBlockEnd: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderBlockEnd: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderBlockEnd: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderBlockEnd: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderBlockEnd: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderBlockEnd: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderBlockEnd: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderBlockEnd: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderBlockEnd: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderBlockEnd: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderBlockEnd: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderBlockEnd: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderBlockEnd: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderBlockEnd: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderBlockEnd: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderBlockEnd: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderBlockEnd: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderBlockEnd: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderBlockEnd: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderBlockEnd: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderBlockEnd: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderBlockEnd: Length.fr(...params) });
        static THIN: Sheet = { borderBlockEnd: "thin" };
        static MEDIUM: Sheet = { borderBlockEnd: "medium" };
        static THICK: Sheet = { borderBlockEnd: "thick" };
        static NONE: Sheet = { borderBlockEnd: "none" };
        static HIDDEN: Sheet = { borderBlockEnd: "hidden" };
        static DOTTED: Sheet = { borderBlockEnd: "dotted" };
        static DASHED: Sheet = { borderBlockEnd: "dashed" };
        static SOLID: Sheet = { borderBlockEnd: "solid" };
        static DOUBLE: Sheet = { borderBlockEnd: "double" };
        static GROOVE: Sheet = { borderBlockEnd: "groove" };
        static RIDGE: Sheet = { borderBlockEnd: "ridge" };
        static INSET: Sheet = { borderBlockEnd: "inset" };
        static OUTSET: Sheet = { borderBlockEnd: "outset" };
    }
    export class BorderBlockEndColor {
        static set = (...params: Param[]): Sheet => ({ borderBlockEndColor: buildProperty(params) });
    }
    export class BorderBlockEndStyle {
        static set = (...params: Param[]): Sheet => ({ borderBlockEndStyle: buildProperty(params) });
        static NONE: Sheet = { borderBlockEndStyle: "none" };
        static HIDDEN: Sheet = { borderBlockEndStyle: "hidden" };
        static DOTTED: Sheet = { borderBlockEndStyle: "dotted" };
        static DASHED: Sheet = { borderBlockEndStyle: "dashed" };
        static SOLID: Sheet = { borderBlockEndStyle: "solid" };
        static DOUBLE: Sheet = { borderBlockEndStyle: "double" };
        static GROOVE: Sheet = { borderBlockEndStyle: "groove" };
        static RIDGE: Sheet = { borderBlockEndStyle: "ridge" };
        static INSET: Sheet = { borderBlockEndStyle: "inset" };
        static OUTSET: Sheet = { borderBlockEndStyle: "outset" };
    }
    export class BorderBlockEndWidth {
        static set = (...params: Param[]): Sheet => ({ borderBlockEndWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderBlockEndWidth: Length.fr(...params) });
        static THIN: Sheet = { borderBlockEndWidth: "thin" };
        static MEDIUM: Sheet = { borderBlockEndWidth: "medium" };
        static THICK: Sheet = { borderBlockEndWidth: "thick" };
    }
    export class BorderBlockStart {
        static set = (...params: Param[]): Sheet => ({ borderBlockStart: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderBlockStart: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderBlockStart: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderBlockStart: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderBlockStart: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderBlockStart: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderBlockStart: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderBlockStart: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderBlockStart: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderBlockStart: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderBlockStart: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderBlockStart: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderBlockStart: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderBlockStart: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderBlockStart: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderBlockStart: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderBlockStart: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderBlockStart: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderBlockStart: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderBlockStart: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderBlockStart: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderBlockStart: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderBlockStart: Length.fr(...params) });
        static THIN: Sheet = { borderBlockStart: "thin" };
        static MEDIUM: Sheet = { borderBlockStart: "medium" };
        static THICK: Sheet = { borderBlockStart: "thick" };
        static NONE: Sheet = { borderBlockStart: "none" };
        static HIDDEN: Sheet = { borderBlockStart: "hidden" };
        static DOTTED: Sheet = { borderBlockStart: "dotted" };
        static DASHED: Sheet = { borderBlockStart: "dashed" };
        static SOLID: Sheet = { borderBlockStart: "solid" };
        static DOUBLE: Sheet = { borderBlockStart: "double" };
        static GROOVE: Sheet = { borderBlockStart: "groove" };
        static RIDGE: Sheet = { borderBlockStart: "ridge" };
        static INSET: Sheet = { borderBlockStart: "inset" };
        static OUTSET: Sheet = { borderBlockStart: "outset" };
    }
    export class BorderBlockStartColor {
        static set = (...params: Param[]): Sheet => ({ borderBlockStartColor: buildProperty(params) });
    }
    export class BorderBlockStartStyle {
        static set = (...params: Param[]): Sheet => ({ borderBlockStartStyle: buildProperty(params) });
        static NONE: Sheet = { borderBlockStartStyle: "none" };
        static HIDDEN: Sheet = { borderBlockStartStyle: "hidden" };
        static DOTTED: Sheet = { borderBlockStartStyle: "dotted" };
        static DASHED: Sheet = { borderBlockStartStyle: "dashed" };
        static SOLID: Sheet = { borderBlockStartStyle: "solid" };
        static DOUBLE: Sheet = { borderBlockStartStyle: "double" };
        static GROOVE: Sheet = { borderBlockStartStyle: "groove" };
        static RIDGE: Sheet = { borderBlockStartStyle: "ridge" };
        static INSET: Sheet = { borderBlockStartStyle: "inset" };
        static OUTSET: Sheet = { borderBlockStartStyle: "outset" };
    }
    export class BorderBlockStartWidth {
        static set = (...params: Param[]): Sheet => ({ borderBlockStartWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderBlockStartWidth: Length.fr(...params) });
        static THIN: Sheet = { borderBlockStartWidth: "thin" };
        static MEDIUM: Sheet = { borderBlockStartWidth: "medium" };
        static THICK: Sheet = { borderBlockStartWidth: "thick" };
    }
    export class BorderBottom {
        static set = (...params: Param[]): Sheet => ({ borderBottom: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderBottom: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderBottom: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderBottom: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderBottom: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderBottom: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderBottom: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderBottom: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderBottom: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderBottom: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderBottom: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderBottom: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderBottom: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderBottom: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderBottom: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderBottom: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderBottom: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderBottom: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderBottom: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderBottom: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderBottom: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderBottom: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderBottom: Length.fr(...params) });
        static THIN: Sheet = { borderBottom: "thin" };
        static MEDIUM: Sheet = { borderBottom: "medium" };
        static THICK: Sheet = { borderBottom: "thick" };
        static NONE: Sheet = { borderBottom: "none" };
        static HIDDEN: Sheet = { borderBottom: "hidden" };
        static DOTTED: Sheet = { borderBottom: "dotted" };
        static DASHED: Sheet = { borderBottom: "dashed" };
        static SOLID: Sheet = { borderBottom: "solid" };
        static DOUBLE: Sheet = { borderBottom: "double" };
        static GROOVE: Sheet = { borderBottom: "groove" };
        static RIDGE: Sheet = { borderBottom: "ridge" };
        static INSET: Sheet = { borderBottom: "inset" };
        static OUTSET: Sheet = { borderBottom: "outset" };
        static X = (...params: number[]): Sheet => ({ borderBottom: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderBottom: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderBottom: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderBottom: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderBottom: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderBottom: "transparent" };
        static ALICEBLUE: Sheet = { borderBottom: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderBottom: "antiquewhite" };
        static AQUA: Sheet = { borderBottom: "aqua" };
        static AQUAMARINE: Sheet = { borderBottom: "aquamarine" };
        static AZURE: Sheet = { borderBottom: "azure" };
        static BEIGE: Sheet = { borderBottom: "beige" };
        static BISQUE: Sheet = { borderBottom: "bisque" };
        static BLACK: Sheet = { borderBottom: "black" };
        static BLANCHEDALMOND: Sheet = { borderBottom: "blanchedalmond" };
        static BLUE: Sheet = { borderBottom: "blue" };
        static BLUEVIOLET: Sheet = { borderBottom: "blueviolet" };
        static BROWN: Sheet = { borderBottom: "brown" };
        static BURLYWOOD: Sheet = { borderBottom: "burlywood" };
        static CADETBLUE: Sheet = { borderBottom: "cadetblue" };
        static CHARTREUSE: Sheet = { borderBottom: "chartreuse" };
        static CHOCOLATE: Sheet = { borderBottom: "chocolate" };
        static CORAL: Sheet = { borderBottom: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderBottom: "cornflowerblue" };
        static CORNSILK: Sheet = { borderBottom: "cornsilk" };
        static CRIMSON: Sheet = { borderBottom: "crimson" };
        static CYAN: Sheet = { borderBottom: "cyan" };
        static DARKBLUE: Sheet = { borderBottom: "darkblue" };
        static DARKCYAN: Sheet = { borderBottom: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderBottom: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderBottom: "darkgray" };
        static DARKGREEN: Sheet = { borderBottom: "darkgreen" };
        static DARKGREY: Sheet = { borderBottom: "darkgrey" };
        static DARKKHAKI: Sheet = { borderBottom: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderBottom: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderBottom: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderBottom: "darkorange" };
        static DARKORCHID: Sheet = { borderBottom: "darkorchid" };
        static DARKRED: Sheet = { borderBottom: "darkred" };
        static DARKSALMON: Sheet = { borderBottom: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderBottom: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderBottom: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderBottom: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderBottom: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderBottom: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderBottom: "darkviolet" };
        static DEEPPINK: Sheet = { borderBottom: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderBottom: "deepskyblue" };
        static DIMGRAY: Sheet = { borderBottom: "dimgray" };
        static DIMGREY: Sheet = { borderBottom: "dimgrey" };
        static DODGERBLUE: Sheet = { borderBottom: "dodgerblue" };
        static FIREBRICK: Sheet = { borderBottom: "firebrick" };
        static FLORALWHITE: Sheet = { borderBottom: "floralwhite" };
        static FORESTGREEN: Sheet = { borderBottom: "forestgreen" };
        static FUCHSIA: Sheet = { borderBottom: "fuchsia" };
        static GAINSBORO: Sheet = { borderBottom: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderBottom: "ghostwhite" };
        static GOLD: Sheet = { borderBottom: "gold" };
        static GOLDENROD: Sheet = { borderBottom: "goldenrod" };
        static GRAY: Sheet = { borderBottom: "gray" };
        static GREEN: Sheet = { borderBottom: "green" };
        static GREENYELLOW: Sheet = { borderBottom: "greenyellow" };
        static GREY: Sheet = { borderBottom: "grey" };
        static HONEYDEW: Sheet = { borderBottom: "honeydew" };
        static HOTPINK: Sheet = { borderBottom: "hotpink" };
        static INDIANRED: Sheet = { borderBottom: "indianred" };
        static INDIGO: Sheet = { borderBottom: "indigo" };
        static IVORY: Sheet = { borderBottom: "ivory" };
        static KHAKI: Sheet = { borderBottom: "khaki" };
        static LAVENDER: Sheet = { borderBottom: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderBottom: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderBottom: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderBottom: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderBottom: "lightblue" };
        static LIGHTCORAL: Sheet = { borderBottom: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderBottom: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderBottom: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderBottom: "lightgray" };
        static LIGHTGREEN: Sheet = { borderBottom: "lightgreen" };
        static LIGHTGREY: Sheet = { borderBottom: "lightgrey" };
        static LIGHTPINK: Sheet = { borderBottom: "lightpink" };
        static LIGHTSALMON: Sheet = { borderBottom: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderBottom: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderBottom: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderBottom: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderBottom: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderBottom: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderBottom: "lightyellow" };
        static LIME: Sheet = { borderBottom: "lime" };
        static LIMEGREEN: Sheet = { borderBottom: "limegreen" };
        static LINEN: Sheet = { borderBottom: "linen" };
        static MAGENTA: Sheet = { borderBottom: "magenta" };
        static MAROON: Sheet = { borderBottom: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderBottom: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderBottom: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderBottom: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderBottom: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderBottom: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderBottom: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderBottom: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderBottom: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderBottom: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderBottom: "midnightblue" };
        static MINTCREAM: Sheet = { borderBottom: "mintcream" };
        static MISTYROSE: Sheet = { borderBottom: "mistyrose" };
        static MOCCASIN: Sheet = { borderBottom: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderBottom: "navajowhite" };
        static NAVY: Sheet = { borderBottom: "navy" };
        static OLDLACE: Sheet = { borderBottom: "oldlace" };
        static OLIVE: Sheet = { borderBottom: "olive" };
        static OLIVEDRAB: Sheet = { borderBottom: "olivedrab" };
        static ORANGE: Sheet = { borderBottom: "orange" };
        static ORANGERED: Sheet = { borderBottom: "orangered" };
        static ORCHID: Sheet = { borderBottom: "orchid" };
        static PALEGOLDENROD: Sheet = { borderBottom: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderBottom: "palegreen" };
        static PALETURQUOISE: Sheet = { borderBottom: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderBottom: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderBottom: "papayawhip" };
        static PEACHPUFF: Sheet = { borderBottom: "peachpuff" };
        static PERU: Sheet = { borderBottom: "peru" };
        static PINK: Sheet = { borderBottom: "pink" };
        static PLUM: Sheet = { borderBottom: "plum" };
        static POWDERBLUE: Sheet = { borderBottom: "powderblue" };
        static PURPLE: Sheet = { borderBottom: "purple" };
        static REBECCAPURPLE: Sheet = { borderBottom: "rebeccapurple" };
        static RED: Sheet = { borderBottom: "red" };
        static ROSYBROWN: Sheet = { borderBottom: "rosybrown" };
        static ROYALBLUE: Sheet = { borderBottom: "royalblue" };
        static SADDLEBROWN: Sheet = { borderBottom: "saddlebrown" };
        static SALMON: Sheet = { borderBottom: "salmon" };
        static SANDYBROWN: Sheet = { borderBottom: "sandybrown" };
        static SEAGREEN: Sheet = { borderBottom: "seagreen" };
        static SEASHELL: Sheet = { borderBottom: "seashell" };
        static SIENNA: Sheet = { borderBottom: "sienna" };
        static SILVER: Sheet = { borderBottom: "silver" };
        static SKYBLUE: Sheet = { borderBottom: "skyblue" };
        static SLATEBLUE: Sheet = { borderBottom: "slateblue" };
        static SLATEGRAY: Sheet = { borderBottom: "slategray" };
        static SLATEGREY: Sheet = { borderBottom: "slategrey" };
        static SNOW: Sheet = { borderBottom: "snow" };
        static SPRINGGREEN: Sheet = { borderBottom: "springgreen" };
        static STEELBLUE: Sheet = { borderBottom: "steelblue" };
        static TAN: Sheet = { borderBottom: "tan" };
        static TEAL: Sheet = { borderBottom: "teal" };
        static THISTLE: Sheet = { borderBottom: "thistle" };
        static TOMATO: Sheet = { borderBottom: "tomato" };
        static TURQUOISE: Sheet = { borderBottom: "turquoise" };
        static VIOLET: Sheet = { borderBottom: "violet" };
        static WHEAT: Sheet = { borderBottom: "wheat" };
        static WHITE: Sheet = { borderBottom: "white" };
        static WHITESMOKE: Sheet = { borderBottom: "whitesmoke" };
        static YELLOW: Sheet = { borderBottom: "yellow" };
        static YELLOWGREEN: Sheet = { borderBottom: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderBottom: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderBottom: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderBottom: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderBottom: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderBottom: "Background" };
        static BUTTONFACE: Sheet = { borderBottom: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderBottom: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderBottom: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderBottom: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderBottom: "CaptionText" };
        static GRAYTEXT: Sheet = { borderBottom: "GrayText" };
        static HIGHLIGHT: Sheet = { borderBottom: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderBottom: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderBottom: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderBottom: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderBottom: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderBottom: "InfoBackground" };
        static INFOTEXT: Sheet = { borderBottom: "InfoText" };
        static MENU: Sheet = { borderBottom: "Menu" };
        static MENUTEXT: Sheet = { borderBottom: "MenuText" };
        static SCROLLBAR: Sheet = { borderBottom: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderBottom: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderBottom: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderBottom: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderBottom: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderBottom: "ThreeDShadow" };
        static WINDOW: Sheet = { borderBottom: "Window" };
        static WINDOWFRAME: Sheet = { borderBottom: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderBottom: "WindowText" };
    }
    export class BorderBottomColor {
        static set = (...params: Param[]): Sheet => ({ borderBottomColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ borderBottomColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderBottomColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderBottomColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderBottomColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderBottomColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderBottomColor: "transparent" };
        static ALICEBLUE: Sheet = { borderBottomColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderBottomColor: "antiquewhite" };
        static AQUA: Sheet = { borderBottomColor: "aqua" };
        static AQUAMARINE: Sheet = { borderBottomColor: "aquamarine" };
        static AZURE: Sheet = { borderBottomColor: "azure" };
        static BEIGE: Sheet = { borderBottomColor: "beige" };
        static BISQUE: Sheet = { borderBottomColor: "bisque" };
        static BLACK: Sheet = { borderBottomColor: "black" };
        static BLANCHEDALMOND: Sheet = { borderBottomColor: "blanchedalmond" };
        static BLUE: Sheet = { borderBottomColor: "blue" };
        static BLUEVIOLET: Sheet = { borderBottomColor: "blueviolet" };
        static BROWN: Sheet = { borderBottomColor: "brown" };
        static BURLYWOOD: Sheet = { borderBottomColor: "burlywood" };
        static CADETBLUE: Sheet = { borderBottomColor: "cadetblue" };
        static CHARTREUSE: Sheet = { borderBottomColor: "chartreuse" };
        static CHOCOLATE: Sheet = { borderBottomColor: "chocolate" };
        static CORAL: Sheet = { borderBottomColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderBottomColor: "cornflowerblue" };
        static CORNSILK: Sheet = { borderBottomColor: "cornsilk" };
        static CRIMSON: Sheet = { borderBottomColor: "crimson" };
        static CYAN: Sheet = { borderBottomColor: "cyan" };
        static DARKBLUE: Sheet = { borderBottomColor: "darkblue" };
        static DARKCYAN: Sheet = { borderBottomColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderBottomColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderBottomColor: "darkgray" };
        static DARKGREEN: Sheet = { borderBottomColor: "darkgreen" };
        static DARKGREY: Sheet = { borderBottomColor: "darkgrey" };
        static DARKKHAKI: Sheet = { borderBottomColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderBottomColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderBottomColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderBottomColor: "darkorange" };
        static DARKORCHID: Sheet = { borderBottomColor: "darkorchid" };
        static DARKRED: Sheet = { borderBottomColor: "darkred" };
        static DARKSALMON: Sheet = { borderBottomColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderBottomColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderBottomColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderBottomColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderBottomColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderBottomColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderBottomColor: "darkviolet" };
        static DEEPPINK: Sheet = { borderBottomColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderBottomColor: "deepskyblue" };
        static DIMGRAY: Sheet = { borderBottomColor: "dimgray" };
        static DIMGREY: Sheet = { borderBottomColor: "dimgrey" };
        static DODGERBLUE: Sheet = { borderBottomColor: "dodgerblue" };
        static FIREBRICK: Sheet = { borderBottomColor: "firebrick" };
        static FLORALWHITE: Sheet = { borderBottomColor: "floralwhite" };
        static FORESTGREEN: Sheet = { borderBottomColor: "forestgreen" };
        static FUCHSIA: Sheet = { borderBottomColor: "fuchsia" };
        static GAINSBORO: Sheet = { borderBottomColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderBottomColor: "ghostwhite" };
        static GOLD: Sheet = { borderBottomColor: "gold" };
        static GOLDENROD: Sheet = { borderBottomColor: "goldenrod" };
        static GRAY: Sheet = { borderBottomColor: "gray" };
        static GREEN: Sheet = { borderBottomColor: "green" };
        static GREENYELLOW: Sheet = { borderBottomColor: "greenyellow" };
        static GREY: Sheet = { borderBottomColor: "grey" };
        static HONEYDEW: Sheet = { borderBottomColor: "honeydew" };
        static HOTPINK: Sheet = { borderBottomColor: "hotpink" };
        static INDIANRED: Sheet = { borderBottomColor: "indianred" };
        static INDIGO: Sheet = { borderBottomColor: "indigo" };
        static IVORY: Sheet = { borderBottomColor: "ivory" };
        static KHAKI: Sheet = { borderBottomColor: "khaki" };
        static LAVENDER: Sheet = { borderBottomColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderBottomColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderBottomColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderBottomColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderBottomColor: "lightblue" };
        static LIGHTCORAL: Sheet = { borderBottomColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderBottomColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderBottomColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderBottomColor: "lightgray" };
        static LIGHTGREEN: Sheet = { borderBottomColor: "lightgreen" };
        static LIGHTGREY: Sheet = { borderBottomColor: "lightgrey" };
        static LIGHTPINK: Sheet = { borderBottomColor: "lightpink" };
        static LIGHTSALMON: Sheet = { borderBottomColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderBottomColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderBottomColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderBottomColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderBottomColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderBottomColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderBottomColor: "lightyellow" };
        static LIME: Sheet = { borderBottomColor: "lime" };
        static LIMEGREEN: Sheet = { borderBottomColor: "limegreen" };
        static LINEN: Sheet = { borderBottomColor: "linen" };
        static MAGENTA: Sheet = { borderBottomColor: "magenta" };
        static MAROON: Sheet = { borderBottomColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderBottomColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderBottomColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderBottomColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderBottomColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderBottomColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderBottomColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderBottomColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderBottomColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderBottomColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderBottomColor: "midnightblue" };
        static MINTCREAM: Sheet = { borderBottomColor: "mintcream" };
        static MISTYROSE: Sheet = { borderBottomColor: "mistyrose" };
        static MOCCASIN: Sheet = { borderBottomColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderBottomColor: "navajowhite" };
        static NAVY: Sheet = { borderBottomColor: "navy" };
        static OLDLACE: Sheet = { borderBottomColor: "oldlace" };
        static OLIVE: Sheet = { borderBottomColor: "olive" };
        static OLIVEDRAB: Sheet = { borderBottomColor: "olivedrab" };
        static ORANGE: Sheet = { borderBottomColor: "orange" };
        static ORANGERED: Sheet = { borderBottomColor: "orangered" };
        static ORCHID: Sheet = { borderBottomColor: "orchid" };
        static PALEGOLDENROD: Sheet = { borderBottomColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderBottomColor: "palegreen" };
        static PALETURQUOISE: Sheet = { borderBottomColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderBottomColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderBottomColor: "papayawhip" };
        static PEACHPUFF: Sheet = { borderBottomColor: "peachpuff" };
        static PERU: Sheet = { borderBottomColor: "peru" };
        static PINK: Sheet = { borderBottomColor: "pink" };
        static PLUM: Sheet = { borderBottomColor: "plum" };
        static POWDERBLUE: Sheet = { borderBottomColor: "powderblue" };
        static PURPLE: Sheet = { borderBottomColor: "purple" };
        static REBECCAPURPLE: Sheet = { borderBottomColor: "rebeccapurple" };
        static RED: Sheet = { borderBottomColor: "red" };
        static ROSYBROWN: Sheet = { borderBottomColor: "rosybrown" };
        static ROYALBLUE: Sheet = { borderBottomColor: "royalblue" };
        static SADDLEBROWN: Sheet = { borderBottomColor: "saddlebrown" };
        static SALMON: Sheet = { borderBottomColor: "salmon" };
        static SANDYBROWN: Sheet = { borderBottomColor: "sandybrown" };
        static SEAGREEN: Sheet = { borderBottomColor: "seagreen" };
        static SEASHELL: Sheet = { borderBottomColor: "seashell" };
        static SIENNA: Sheet = { borderBottomColor: "sienna" };
        static SILVER: Sheet = { borderBottomColor: "silver" };
        static SKYBLUE: Sheet = { borderBottomColor: "skyblue" };
        static SLATEBLUE: Sheet = { borderBottomColor: "slateblue" };
        static SLATEGRAY: Sheet = { borderBottomColor: "slategray" };
        static SLATEGREY: Sheet = { borderBottomColor: "slategrey" };
        static SNOW: Sheet = { borderBottomColor: "snow" };
        static SPRINGGREEN: Sheet = { borderBottomColor: "springgreen" };
        static STEELBLUE: Sheet = { borderBottomColor: "steelblue" };
        static TAN: Sheet = { borderBottomColor: "tan" };
        static TEAL: Sheet = { borderBottomColor: "teal" };
        static THISTLE: Sheet = { borderBottomColor: "thistle" };
        static TOMATO: Sheet = { borderBottomColor: "tomato" };
        static TURQUOISE: Sheet = { borderBottomColor: "turquoise" };
        static VIOLET: Sheet = { borderBottomColor: "violet" };
        static WHEAT: Sheet = { borderBottomColor: "wheat" };
        static WHITE: Sheet = { borderBottomColor: "white" };
        static WHITESMOKE: Sheet = { borderBottomColor: "whitesmoke" };
        static YELLOW: Sheet = { borderBottomColor: "yellow" };
        static YELLOWGREEN: Sheet = { borderBottomColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderBottomColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderBottomColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderBottomColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderBottomColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderBottomColor: "Background" };
        static BUTTONFACE: Sheet = { borderBottomColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderBottomColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderBottomColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderBottomColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderBottomColor: "CaptionText" };
        static GRAYTEXT: Sheet = { borderBottomColor: "GrayText" };
        static HIGHLIGHT: Sheet = { borderBottomColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderBottomColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderBottomColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderBottomColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderBottomColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderBottomColor: "InfoBackground" };
        static INFOTEXT: Sheet = { borderBottomColor: "InfoText" };
        static MENU: Sheet = { borderBottomColor: "Menu" };
        static MENUTEXT: Sheet = { borderBottomColor: "MenuText" };
        static SCROLLBAR: Sheet = { borderBottomColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderBottomColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderBottomColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderBottomColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderBottomColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderBottomColor: "ThreeDShadow" };
        static WINDOW: Sheet = { borderBottomColor: "Window" };
        static WINDOWFRAME: Sheet = { borderBottomColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderBottomColor: "WindowText" };
    }
    export class BorderBottomLeftRadius {
        static set = (...params: Param[]): Sheet => ({ borderBottomLeftRadius: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ borderBottomLeftRadius: Length.X(...params) });
    }
    export class BorderBottomRightRadius {
        static set = (...params: Param[]): Sheet => ({ borderBottomRightRadius: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ borderBottomRightRadius: Length.X(...params) });
    }
    export class BorderBottomStyle {
        static set = (...params: Param[]): Sheet => ({ borderBottomStyle: buildProperty(params) });
        static NONE: Sheet = { borderBottomStyle: "none" };
        static HIDDEN: Sheet = { borderBottomStyle: "hidden" };
        static DOTTED: Sheet = { borderBottomStyle: "dotted" };
        static DASHED: Sheet = { borderBottomStyle: "dashed" };
        static SOLID: Sheet = { borderBottomStyle: "solid" };
        static DOUBLE: Sheet = { borderBottomStyle: "double" };
        static GROOVE: Sheet = { borderBottomStyle: "groove" };
        static RIDGE: Sheet = { borderBottomStyle: "ridge" };
        static INSET: Sheet = { borderBottomStyle: "inset" };
        static OUTSET: Sheet = { borderBottomStyle: "outset" };
    }
    export class BorderBottomWidth {
        static set = (...params: Param[]): Sheet => ({ borderBottomWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderBottomWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderBottomWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderBottomWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderBottomWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderBottomWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderBottomWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderBottomWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderBottomWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderBottomWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderBottomWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderBottomWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderBottomWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderBottomWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderBottomWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderBottomWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderBottomWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderBottomWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderBottomWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderBottomWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderBottomWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderBottomWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderBottomWidth: Length.fr(...params) });
        static THIN: Sheet = { borderBottomWidth: "thin" };
        static MEDIUM: Sheet = { borderBottomWidth: "medium" };
        static THICK: Sheet = { borderBottomWidth: "thick" };
    }
    export class BorderCollapse {
        static set = (...params: Param[]): Sheet => ({ borderCollapse: buildProperty(params) });
        static COLLAPSE: Sheet = { borderCollapse: "collapse" };
        static SEPARATE: Sheet = { borderCollapse: "separate" };
    }
    export class BorderColor {
        static set = (...params: Param[]): Sheet => ({ borderColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ borderColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderColor: "transparent" };
        static ALICEBLUE: Sheet = { borderColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderColor: "antiquewhite" };
        static AQUA: Sheet = { borderColor: "aqua" };
        static AQUAMARINE: Sheet = { borderColor: "aquamarine" };
        static AZURE: Sheet = { borderColor: "azure" };
        static BEIGE: Sheet = { borderColor: "beige" };
        static BISQUE: Sheet = { borderColor: "bisque" };
        static BLACK: Sheet = { borderColor: "black" };
        static BLANCHEDALMOND: Sheet = { borderColor: "blanchedalmond" };
        static BLUE: Sheet = { borderColor: "blue" };
        static BLUEVIOLET: Sheet = { borderColor: "blueviolet" };
        static BROWN: Sheet = { borderColor: "brown" };
        static BURLYWOOD: Sheet = { borderColor: "burlywood" };
        static CADETBLUE: Sheet = { borderColor: "cadetblue" };
        static CHARTREUSE: Sheet = { borderColor: "chartreuse" };
        static CHOCOLATE: Sheet = { borderColor: "chocolate" };
        static CORAL: Sheet = { borderColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderColor: "cornflowerblue" };
        static CORNSILK: Sheet = { borderColor: "cornsilk" };
        static CRIMSON: Sheet = { borderColor: "crimson" };
        static CYAN: Sheet = { borderColor: "cyan" };
        static DARKBLUE: Sheet = { borderColor: "darkblue" };
        static DARKCYAN: Sheet = { borderColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderColor: "darkgray" };
        static DARKGREEN: Sheet = { borderColor: "darkgreen" };
        static DARKGREY: Sheet = { borderColor: "darkgrey" };
        static DARKKHAKI: Sheet = { borderColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderColor: "darkorange" };
        static DARKORCHID: Sheet = { borderColor: "darkorchid" };
        static DARKRED: Sheet = { borderColor: "darkred" };
        static DARKSALMON: Sheet = { borderColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderColor: "darkviolet" };
        static DEEPPINK: Sheet = { borderColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderColor: "deepskyblue" };
        static DIMGRAY: Sheet = { borderColor: "dimgray" };
        static DIMGREY: Sheet = { borderColor: "dimgrey" };
        static DODGERBLUE: Sheet = { borderColor: "dodgerblue" };
        static FIREBRICK: Sheet = { borderColor: "firebrick" };
        static FLORALWHITE: Sheet = { borderColor: "floralwhite" };
        static FORESTGREEN: Sheet = { borderColor: "forestgreen" };
        static FUCHSIA: Sheet = { borderColor: "fuchsia" };
        static GAINSBORO: Sheet = { borderColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderColor: "ghostwhite" };
        static GOLD: Sheet = { borderColor: "gold" };
        static GOLDENROD: Sheet = { borderColor: "goldenrod" };
        static GRAY: Sheet = { borderColor: "gray" };
        static GREEN: Sheet = { borderColor: "green" };
        static GREENYELLOW: Sheet = { borderColor: "greenyellow" };
        static GREY: Sheet = { borderColor: "grey" };
        static HONEYDEW: Sheet = { borderColor: "honeydew" };
        static HOTPINK: Sheet = { borderColor: "hotpink" };
        static INDIANRED: Sheet = { borderColor: "indianred" };
        static INDIGO: Sheet = { borderColor: "indigo" };
        static IVORY: Sheet = { borderColor: "ivory" };
        static KHAKI: Sheet = { borderColor: "khaki" };
        static LAVENDER: Sheet = { borderColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderColor: "lightblue" };
        static LIGHTCORAL: Sheet = { borderColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderColor: "lightgray" };
        static LIGHTGREEN: Sheet = { borderColor: "lightgreen" };
        static LIGHTGREY: Sheet = { borderColor: "lightgrey" };
        static LIGHTPINK: Sheet = { borderColor: "lightpink" };
        static LIGHTSALMON: Sheet = { borderColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderColor: "lightyellow" };
        static LIME: Sheet = { borderColor: "lime" };
        static LIMEGREEN: Sheet = { borderColor: "limegreen" };
        static LINEN: Sheet = { borderColor: "linen" };
        static MAGENTA: Sheet = { borderColor: "magenta" };
        static MAROON: Sheet = { borderColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderColor: "midnightblue" };
        static MINTCREAM: Sheet = { borderColor: "mintcream" };
        static MISTYROSE: Sheet = { borderColor: "mistyrose" };
        static MOCCASIN: Sheet = { borderColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderColor: "navajowhite" };
        static NAVY: Sheet = { borderColor: "navy" };
        static OLDLACE: Sheet = { borderColor: "oldlace" };
        static OLIVE: Sheet = { borderColor: "olive" };
        static OLIVEDRAB: Sheet = { borderColor: "olivedrab" };
        static ORANGE: Sheet = { borderColor: "orange" };
        static ORANGERED: Sheet = { borderColor: "orangered" };
        static ORCHID: Sheet = { borderColor: "orchid" };
        static PALEGOLDENROD: Sheet = { borderColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderColor: "palegreen" };
        static PALETURQUOISE: Sheet = { borderColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderColor: "papayawhip" };
        static PEACHPUFF: Sheet = { borderColor: "peachpuff" };
        static PERU: Sheet = { borderColor: "peru" };
        static PINK: Sheet = { borderColor: "pink" };
        static PLUM: Sheet = { borderColor: "plum" };
        static POWDERBLUE: Sheet = { borderColor: "powderblue" };
        static PURPLE: Sheet = { borderColor: "purple" };
        static REBECCAPURPLE: Sheet = { borderColor: "rebeccapurple" };
        static RED: Sheet = { borderColor: "red" };
        static ROSYBROWN: Sheet = { borderColor: "rosybrown" };
        static ROYALBLUE: Sheet = { borderColor: "royalblue" };
        static SADDLEBROWN: Sheet = { borderColor: "saddlebrown" };
        static SALMON: Sheet = { borderColor: "salmon" };
        static SANDYBROWN: Sheet = { borderColor: "sandybrown" };
        static SEAGREEN: Sheet = { borderColor: "seagreen" };
        static SEASHELL: Sheet = { borderColor: "seashell" };
        static SIENNA: Sheet = { borderColor: "sienna" };
        static SILVER: Sheet = { borderColor: "silver" };
        static SKYBLUE: Sheet = { borderColor: "skyblue" };
        static SLATEBLUE: Sheet = { borderColor: "slateblue" };
        static SLATEGRAY: Sheet = { borderColor: "slategray" };
        static SLATEGREY: Sheet = { borderColor: "slategrey" };
        static SNOW: Sheet = { borderColor: "snow" };
        static SPRINGGREEN: Sheet = { borderColor: "springgreen" };
        static STEELBLUE: Sheet = { borderColor: "steelblue" };
        static TAN: Sheet = { borderColor: "tan" };
        static TEAL: Sheet = { borderColor: "teal" };
        static THISTLE: Sheet = { borderColor: "thistle" };
        static TOMATO: Sheet = { borderColor: "tomato" };
        static TURQUOISE: Sheet = { borderColor: "turquoise" };
        static VIOLET: Sheet = { borderColor: "violet" };
        static WHEAT: Sheet = { borderColor: "wheat" };
        static WHITE: Sheet = { borderColor: "white" };
        static WHITESMOKE: Sheet = { borderColor: "whitesmoke" };
        static YELLOW: Sheet = { borderColor: "yellow" };
        static YELLOWGREEN: Sheet = { borderColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderColor: "Background" };
        static BUTTONFACE: Sheet = { borderColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderColor: "CaptionText" };
        static GRAYTEXT: Sheet = { borderColor: "GrayText" };
        static HIGHLIGHT: Sheet = { borderColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderColor: "InfoBackground" };
        static INFOTEXT: Sheet = { borderColor: "InfoText" };
        static MENU: Sheet = { borderColor: "Menu" };
        static MENUTEXT: Sheet = { borderColor: "MenuText" };
        static SCROLLBAR: Sheet = { borderColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderColor: "ThreeDShadow" };
        static WINDOW: Sheet = { borderColor: "Window" };
        static WINDOWFRAME: Sheet = { borderColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderColor: "WindowText" };
    }
    export class BorderImage {
        static set = (...params: Param[]): Sheet => ({ borderImage: buildProperty(params) });
        static NONE: Sheet = { borderImage: "none" };
        static X = (...params: number[]): Sheet => ({ borderImage: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderImage: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderImage: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderImage: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderImage: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderImage: "transparent" };
        static ALICEBLUE: Sheet = { borderImage: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderImage: "antiquewhite" };
        static AQUA: Sheet = { borderImage: "aqua" };
        static AQUAMARINE: Sheet = { borderImage: "aquamarine" };
        static AZURE: Sheet = { borderImage: "azure" };
        static BEIGE: Sheet = { borderImage: "beige" };
        static BISQUE: Sheet = { borderImage: "bisque" };
        static BLACK: Sheet = { borderImage: "black" };
        static BLANCHEDALMOND: Sheet = { borderImage: "blanchedalmond" };
        static BLUE: Sheet = { borderImage: "blue" };
        static BLUEVIOLET: Sheet = { borderImage: "blueviolet" };
        static BROWN: Sheet = { borderImage: "brown" };
        static BURLYWOOD: Sheet = { borderImage: "burlywood" };
        static CADETBLUE: Sheet = { borderImage: "cadetblue" };
        static CHARTREUSE: Sheet = { borderImage: "chartreuse" };
        static CHOCOLATE: Sheet = { borderImage: "chocolate" };
        static CORAL: Sheet = { borderImage: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderImage: "cornflowerblue" };
        static CORNSILK: Sheet = { borderImage: "cornsilk" };
        static CRIMSON: Sheet = { borderImage: "crimson" };
        static CYAN: Sheet = { borderImage: "cyan" };
        static DARKBLUE: Sheet = { borderImage: "darkblue" };
        static DARKCYAN: Sheet = { borderImage: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderImage: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderImage: "darkgray" };
        static DARKGREEN: Sheet = { borderImage: "darkgreen" };
        static DARKGREY: Sheet = { borderImage: "darkgrey" };
        static DARKKHAKI: Sheet = { borderImage: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderImage: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderImage: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderImage: "darkorange" };
        static DARKORCHID: Sheet = { borderImage: "darkorchid" };
        static DARKRED: Sheet = { borderImage: "darkred" };
        static DARKSALMON: Sheet = { borderImage: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderImage: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderImage: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderImage: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderImage: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderImage: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderImage: "darkviolet" };
        static DEEPPINK: Sheet = { borderImage: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderImage: "deepskyblue" };
        static DIMGRAY: Sheet = { borderImage: "dimgray" };
        static DIMGREY: Sheet = { borderImage: "dimgrey" };
        static DODGERBLUE: Sheet = { borderImage: "dodgerblue" };
        static FIREBRICK: Sheet = { borderImage: "firebrick" };
        static FLORALWHITE: Sheet = { borderImage: "floralwhite" };
        static FORESTGREEN: Sheet = { borderImage: "forestgreen" };
        static FUCHSIA: Sheet = { borderImage: "fuchsia" };
        static GAINSBORO: Sheet = { borderImage: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderImage: "ghostwhite" };
        static GOLD: Sheet = { borderImage: "gold" };
        static GOLDENROD: Sheet = { borderImage: "goldenrod" };
        static GRAY: Sheet = { borderImage: "gray" };
        static GREEN: Sheet = { borderImage: "green" };
        static GREENYELLOW: Sheet = { borderImage: "greenyellow" };
        static GREY: Sheet = { borderImage: "grey" };
        static HONEYDEW: Sheet = { borderImage: "honeydew" };
        static HOTPINK: Sheet = { borderImage: "hotpink" };
        static INDIANRED: Sheet = { borderImage: "indianred" };
        static INDIGO: Sheet = { borderImage: "indigo" };
        static IVORY: Sheet = { borderImage: "ivory" };
        static KHAKI: Sheet = { borderImage: "khaki" };
        static LAVENDER: Sheet = { borderImage: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderImage: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderImage: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderImage: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderImage: "lightblue" };
        static LIGHTCORAL: Sheet = { borderImage: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderImage: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderImage: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderImage: "lightgray" };
        static LIGHTGREEN: Sheet = { borderImage: "lightgreen" };
        static LIGHTGREY: Sheet = { borderImage: "lightgrey" };
        static LIGHTPINK: Sheet = { borderImage: "lightpink" };
        static LIGHTSALMON: Sheet = { borderImage: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderImage: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderImage: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderImage: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderImage: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderImage: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderImage: "lightyellow" };
        static LIME: Sheet = { borderImage: "lime" };
        static LIMEGREEN: Sheet = { borderImage: "limegreen" };
        static LINEN: Sheet = { borderImage: "linen" };
        static MAGENTA: Sheet = { borderImage: "magenta" };
        static MAROON: Sheet = { borderImage: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderImage: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderImage: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderImage: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderImage: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderImage: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderImage: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderImage: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderImage: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderImage: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderImage: "midnightblue" };
        static MINTCREAM: Sheet = { borderImage: "mintcream" };
        static MISTYROSE: Sheet = { borderImage: "mistyrose" };
        static MOCCASIN: Sheet = { borderImage: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderImage: "navajowhite" };
        static NAVY: Sheet = { borderImage: "navy" };
        static OLDLACE: Sheet = { borderImage: "oldlace" };
        static OLIVE: Sheet = { borderImage: "olive" };
        static OLIVEDRAB: Sheet = { borderImage: "olivedrab" };
        static ORANGE: Sheet = { borderImage: "orange" };
        static ORANGERED: Sheet = { borderImage: "orangered" };
        static ORCHID: Sheet = { borderImage: "orchid" };
        static PALEGOLDENROD: Sheet = { borderImage: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderImage: "palegreen" };
        static PALETURQUOISE: Sheet = { borderImage: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderImage: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderImage: "papayawhip" };
        static PEACHPUFF: Sheet = { borderImage: "peachpuff" };
        static PERU: Sheet = { borderImage: "peru" };
        static PINK: Sheet = { borderImage: "pink" };
        static PLUM: Sheet = { borderImage: "plum" };
        static POWDERBLUE: Sheet = { borderImage: "powderblue" };
        static PURPLE: Sheet = { borderImage: "purple" };
        static REBECCAPURPLE: Sheet = { borderImage: "rebeccapurple" };
        static RED: Sheet = { borderImage: "red" };
        static ROSYBROWN: Sheet = { borderImage: "rosybrown" };
        static ROYALBLUE: Sheet = { borderImage: "royalblue" };
        static SADDLEBROWN: Sheet = { borderImage: "saddlebrown" };
        static SALMON: Sheet = { borderImage: "salmon" };
        static SANDYBROWN: Sheet = { borderImage: "sandybrown" };
        static SEAGREEN: Sheet = { borderImage: "seagreen" };
        static SEASHELL: Sheet = { borderImage: "seashell" };
        static SIENNA: Sheet = { borderImage: "sienna" };
        static SILVER: Sheet = { borderImage: "silver" };
        static SKYBLUE: Sheet = { borderImage: "skyblue" };
        static SLATEBLUE: Sheet = { borderImage: "slateblue" };
        static SLATEGRAY: Sheet = { borderImage: "slategray" };
        static SLATEGREY: Sheet = { borderImage: "slategrey" };
        static SNOW: Sheet = { borderImage: "snow" };
        static SPRINGGREEN: Sheet = { borderImage: "springgreen" };
        static STEELBLUE: Sheet = { borderImage: "steelblue" };
        static TAN: Sheet = { borderImage: "tan" };
        static TEAL: Sheet = { borderImage: "teal" };
        static THISTLE: Sheet = { borderImage: "thistle" };
        static TOMATO: Sheet = { borderImage: "tomato" };
        static TURQUOISE: Sheet = { borderImage: "turquoise" };
        static VIOLET: Sheet = { borderImage: "violet" };
        static WHEAT: Sheet = { borderImage: "wheat" };
        static WHITE: Sheet = { borderImage: "white" };
        static WHITESMOKE: Sheet = { borderImage: "whitesmoke" };
        static YELLOW: Sheet = { borderImage: "yellow" };
        static YELLOWGREEN: Sheet = { borderImage: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderImage: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderImage: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderImage: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderImage: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderImage: "Background" };
        static BUTTONFACE: Sheet = { borderImage: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderImage: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderImage: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderImage: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderImage: "CaptionText" };
        static GRAYTEXT: Sheet = { borderImage: "GrayText" };
        static HIGHLIGHT: Sheet = { borderImage: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderImage: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderImage: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderImage: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderImage: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderImage: "InfoBackground" };
        static INFOTEXT: Sheet = { borderImage: "InfoText" };
        static MENU: Sheet = { borderImage: "Menu" };
        static MENUTEXT: Sheet = { borderImage: "MenuText" };
        static SCROLLBAR: Sheet = { borderImage: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderImage: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderImage: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderImage: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderImage: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderImage: "ThreeDShadow" };
        static WINDOW: Sheet = { borderImage: "Window" };
        static WINDOWFRAME: Sheet = { borderImage: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderImage: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ borderImage: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ borderImage: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ borderImage: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ borderImage: Resolution.x(...params) });
        static TO: Sheet = { borderImage: "to" };
        static LEFT: Sheet = { borderImage: "left" };
        static RIGHT: Sheet = { borderImage: "right" };
        static TOP: Sheet = { borderImage: "top" };
        static BOTTOM: Sheet = { borderImage: "bottom" };
        static cap = (...params: number[]): Sheet => ({ borderImage: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderImage: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderImage: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderImage: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderImage: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderImage: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderImage: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderImage: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderImage: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderImage: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderImage: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderImage: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderImage: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderImage: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderImage: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderImage: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderImage: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderImage: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderImage: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderImage: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderImage: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderImage: Length.fr(...params) });
        static CIRCLE: Sheet = { borderImage: "circle" };
        static ELLIPSE: Sheet = { borderImage: "ellipse" };
        static CLOSEST_SIDE: Sheet = { borderImage: "closest-side" };
        static FARTHEST_SIDE: Sheet = { borderImage: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { borderImage: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { borderImage: "farthest-corner" };
        static AT: Sheet = { borderImage: "at" };
        static CENTER: Sheet = { borderImage: "center" };
        static FILL: Sheet = { borderImage: "fill" };
        static AUTO: Sheet = { borderImage: "auto" };
        static STRETCH: Sheet = { borderImage: "stretch" };
        static REPEAT: Sheet = { borderImage: "repeat" };
        static ROUND: Sheet = { borderImage: "round" };
        static SPACE: Sheet = { borderImage: "space" };
    }
    export class BorderImageOutset {
        static set = (...params: Param[]): Sheet => ({ borderImageOutset: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderImageOutset: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderImageOutset: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderImageOutset: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderImageOutset: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderImageOutset: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderImageOutset: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderImageOutset: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderImageOutset: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderImageOutset: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderImageOutset: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderImageOutset: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderImageOutset: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderImageOutset: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderImageOutset: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderImageOutset: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderImageOutset: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderImageOutset: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderImageOutset: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderImageOutset: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderImageOutset: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderImageOutset: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderImageOutset: Length.fr(...params) });
    }
    export class BorderImageRepeat {
        static set = (...params: Param[]): Sheet => ({ borderImageRepeat: buildProperty(params) });
        static STRETCH: Sheet = { borderImageRepeat: "stretch" };
        static REPEAT: Sheet = { borderImageRepeat: "repeat" };
        static ROUND: Sheet = { borderImageRepeat: "round" };
        static SPACE: Sheet = { borderImageRepeat: "space" };
    }
    export class BorderImageSlice {
        static set = (...params: Param[]): Sheet => ({ borderImageSlice: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ borderImageSlice: Length.X(...params) });
        static FILL: Sheet = { borderImageSlice: "fill" };
    }
    export class BorderImageSource {
        static set = (...params: Param[]): Sheet => ({ borderImageSource: buildProperty(params) });
        static NONE: Sheet = { borderImageSource: "none" };
        static X = (...params: number[]): Sheet => ({ borderImageSource: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderImageSource: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderImageSource: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderImageSource: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderImageSource: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderImageSource: "transparent" };
        static ALICEBLUE: Sheet = { borderImageSource: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderImageSource: "antiquewhite" };
        static AQUA: Sheet = { borderImageSource: "aqua" };
        static AQUAMARINE: Sheet = { borderImageSource: "aquamarine" };
        static AZURE: Sheet = { borderImageSource: "azure" };
        static BEIGE: Sheet = { borderImageSource: "beige" };
        static BISQUE: Sheet = { borderImageSource: "bisque" };
        static BLACK: Sheet = { borderImageSource: "black" };
        static BLANCHEDALMOND: Sheet = { borderImageSource: "blanchedalmond" };
        static BLUE: Sheet = { borderImageSource: "blue" };
        static BLUEVIOLET: Sheet = { borderImageSource: "blueviolet" };
        static BROWN: Sheet = { borderImageSource: "brown" };
        static BURLYWOOD: Sheet = { borderImageSource: "burlywood" };
        static CADETBLUE: Sheet = { borderImageSource: "cadetblue" };
        static CHARTREUSE: Sheet = { borderImageSource: "chartreuse" };
        static CHOCOLATE: Sheet = { borderImageSource: "chocolate" };
        static CORAL: Sheet = { borderImageSource: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderImageSource: "cornflowerblue" };
        static CORNSILK: Sheet = { borderImageSource: "cornsilk" };
        static CRIMSON: Sheet = { borderImageSource: "crimson" };
        static CYAN: Sheet = { borderImageSource: "cyan" };
        static DARKBLUE: Sheet = { borderImageSource: "darkblue" };
        static DARKCYAN: Sheet = { borderImageSource: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderImageSource: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderImageSource: "darkgray" };
        static DARKGREEN: Sheet = { borderImageSource: "darkgreen" };
        static DARKGREY: Sheet = { borderImageSource: "darkgrey" };
        static DARKKHAKI: Sheet = { borderImageSource: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderImageSource: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderImageSource: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderImageSource: "darkorange" };
        static DARKORCHID: Sheet = { borderImageSource: "darkorchid" };
        static DARKRED: Sheet = { borderImageSource: "darkred" };
        static DARKSALMON: Sheet = { borderImageSource: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderImageSource: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderImageSource: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderImageSource: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderImageSource: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderImageSource: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderImageSource: "darkviolet" };
        static DEEPPINK: Sheet = { borderImageSource: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderImageSource: "deepskyblue" };
        static DIMGRAY: Sheet = { borderImageSource: "dimgray" };
        static DIMGREY: Sheet = { borderImageSource: "dimgrey" };
        static DODGERBLUE: Sheet = { borderImageSource: "dodgerblue" };
        static FIREBRICK: Sheet = { borderImageSource: "firebrick" };
        static FLORALWHITE: Sheet = { borderImageSource: "floralwhite" };
        static FORESTGREEN: Sheet = { borderImageSource: "forestgreen" };
        static FUCHSIA: Sheet = { borderImageSource: "fuchsia" };
        static GAINSBORO: Sheet = { borderImageSource: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderImageSource: "ghostwhite" };
        static GOLD: Sheet = { borderImageSource: "gold" };
        static GOLDENROD: Sheet = { borderImageSource: "goldenrod" };
        static GRAY: Sheet = { borderImageSource: "gray" };
        static GREEN: Sheet = { borderImageSource: "green" };
        static GREENYELLOW: Sheet = { borderImageSource: "greenyellow" };
        static GREY: Sheet = { borderImageSource: "grey" };
        static HONEYDEW: Sheet = { borderImageSource: "honeydew" };
        static HOTPINK: Sheet = { borderImageSource: "hotpink" };
        static INDIANRED: Sheet = { borderImageSource: "indianred" };
        static INDIGO: Sheet = { borderImageSource: "indigo" };
        static IVORY: Sheet = { borderImageSource: "ivory" };
        static KHAKI: Sheet = { borderImageSource: "khaki" };
        static LAVENDER: Sheet = { borderImageSource: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderImageSource: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderImageSource: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderImageSource: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderImageSource: "lightblue" };
        static LIGHTCORAL: Sheet = { borderImageSource: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderImageSource: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderImageSource: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderImageSource: "lightgray" };
        static LIGHTGREEN: Sheet = { borderImageSource: "lightgreen" };
        static LIGHTGREY: Sheet = { borderImageSource: "lightgrey" };
        static LIGHTPINK: Sheet = { borderImageSource: "lightpink" };
        static LIGHTSALMON: Sheet = { borderImageSource: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderImageSource: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderImageSource: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderImageSource: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderImageSource: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderImageSource: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderImageSource: "lightyellow" };
        static LIME: Sheet = { borderImageSource: "lime" };
        static LIMEGREEN: Sheet = { borderImageSource: "limegreen" };
        static LINEN: Sheet = { borderImageSource: "linen" };
        static MAGENTA: Sheet = { borderImageSource: "magenta" };
        static MAROON: Sheet = { borderImageSource: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderImageSource: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderImageSource: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderImageSource: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderImageSource: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderImageSource: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderImageSource: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderImageSource: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderImageSource: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderImageSource: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderImageSource: "midnightblue" };
        static MINTCREAM: Sheet = { borderImageSource: "mintcream" };
        static MISTYROSE: Sheet = { borderImageSource: "mistyrose" };
        static MOCCASIN: Sheet = { borderImageSource: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderImageSource: "navajowhite" };
        static NAVY: Sheet = { borderImageSource: "navy" };
        static OLDLACE: Sheet = { borderImageSource: "oldlace" };
        static OLIVE: Sheet = { borderImageSource: "olive" };
        static OLIVEDRAB: Sheet = { borderImageSource: "olivedrab" };
        static ORANGE: Sheet = { borderImageSource: "orange" };
        static ORANGERED: Sheet = { borderImageSource: "orangered" };
        static ORCHID: Sheet = { borderImageSource: "orchid" };
        static PALEGOLDENROD: Sheet = { borderImageSource: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderImageSource: "palegreen" };
        static PALETURQUOISE: Sheet = { borderImageSource: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderImageSource: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderImageSource: "papayawhip" };
        static PEACHPUFF: Sheet = { borderImageSource: "peachpuff" };
        static PERU: Sheet = { borderImageSource: "peru" };
        static PINK: Sheet = { borderImageSource: "pink" };
        static PLUM: Sheet = { borderImageSource: "plum" };
        static POWDERBLUE: Sheet = { borderImageSource: "powderblue" };
        static PURPLE: Sheet = { borderImageSource: "purple" };
        static REBECCAPURPLE: Sheet = { borderImageSource: "rebeccapurple" };
        static RED: Sheet = { borderImageSource: "red" };
        static ROSYBROWN: Sheet = { borderImageSource: "rosybrown" };
        static ROYALBLUE: Sheet = { borderImageSource: "royalblue" };
        static SADDLEBROWN: Sheet = { borderImageSource: "saddlebrown" };
        static SALMON: Sheet = { borderImageSource: "salmon" };
        static SANDYBROWN: Sheet = { borderImageSource: "sandybrown" };
        static SEAGREEN: Sheet = { borderImageSource: "seagreen" };
        static SEASHELL: Sheet = { borderImageSource: "seashell" };
        static SIENNA: Sheet = { borderImageSource: "sienna" };
        static SILVER: Sheet = { borderImageSource: "silver" };
        static SKYBLUE: Sheet = { borderImageSource: "skyblue" };
        static SLATEBLUE: Sheet = { borderImageSource: "slateblue" };
        static SLATEGRAY: Sheet = { borderImageSource: "slategray" };
        static SLATEGREY: Sheet = { borderImageSource: "slategrey" };
        static SNOW: Sheet = { borderImageSource: "snow" };
        static SPRINGGREEN: Sheet = { borderImageSource: "springgreen" };
        static STEELBLUE: Sheet = { borderImageSource: "steelblue" };
        static TAN: Sheet = { borderImageSource: "tan" };
        static TEAL: Sheet = { borderImageSource: "teal" };
        static THISTLE: Sheet = { borderImageSource: "thistle" };
        static TOMATO: Sheet = { borderImageSource: "tomato" };
        static TURQUOISE: Sheet = { borderImageSource: "turquoise" };
        static VIOLET: Sheet = { borderImageSource: "violet" };
        static WHEAT: Sheet = { borderImageSource: "wheat" };
        static WHITE: Sheet = { borderImageSource: "white" };
        static WHITESMOKE: Sheet = { borderImageSource: "whitesmoke" };
        static YELLOW: Sheet = { borderImageSource: "yellow" };
        static YELLOWGREEN: Sheet = { borderImageSource: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderImageSource: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderImageSource: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderImageSource: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderImageSource: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderImageSource: "Background" };
        static BUTTONFACE: Sheet = { borderImageSource: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderImageSource: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderImageSource: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderImageSource: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderImageSource: "CaptionText" };
        static GRAYTEXT: Sheet = { borderImageSource: "GrayText" };
        static HIGHLIGHT: Sheet = { borderImageSource: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderImageSource: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderImageSource: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderImageSource: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderImageSource: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderImageSource: "InfoBackground" };
        static INFOTEXT: Sheet = { borderImageSource: "InfoText" };
        static MENU: Sheet = { borderImageSource: "Menu" };
        static MENUTEXT: Sheet = { borderImageSource: "MenuText" };
        static SCROLLBAR: Sheet = { borderImageSource: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderImageSource: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderImageSource: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderImageSource: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderImageSource: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderImageSource: "ThreeDShadow" };
        static WINDOW: Sheet = { borderImageSource: "Window" };
        static WINDOWFRAME: Sheet = { borderImageSource: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderImageSource: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ borderImageSource: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ borderImageSource: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ borderImageSource: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ borderImageSource: Resolution.x(...params) });
        static TO: Sheet = { borderImageSource: "to" };
        static LEFT: Sheet = { borderImageSource: "left" };
        static RIGHT: Sheet = { borderImageSource: "right" };
        static TOP: Sheet = { borderImageSource: "top" };
        static BOTTOM: Sheet = { borderImageSource: "bottom" };
        static cap = (...params: number[]): Sheet => ({ borderImageSource: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderImageSource: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderImageSource: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderImageSource: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderImageSource: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderImageSource: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderImageSource: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderImageSource: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderImageSource: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderImageSource: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderImageSource: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderImageSource: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderImageSource: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderImageSource: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderImageSource: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderImageSource: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderImageSource: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderImageSource: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderImageSource: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderImageSource: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderImageSource: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderImageSource: Length.fr(...params) });
        static CIRCLE: Sheet = { borderImageSource: "circle" };
        static ELLIPSE: Sheet = { borderImageSource: "ellipse" };
        static CLOSEST_SIDE: Sheet = { borderImageSource: "closest-side" };
        static FARTHEST_SIDE: Sheet = { borderImageSource: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { borderImageSource: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { borderImageSource: "farthest-corner" };
        static AT: Sheet = { borderImageSource: "at" };
        static CENTER: Sheet = { borderImageSource: "center" };
    }
    export class BorderImageWidth {
        static set = (...params: Param[]): Sheet => ({ borderImageWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderImageWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderImageWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderImageWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderImageWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderImageWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderImageWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderImageWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderImageWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderImageWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderImageWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderImageWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderImageWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderImageWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderImageWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderImageWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderImageWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderImageWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderImageWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderImageWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderImageWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderImageWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderImageWidth: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ borderImageWidth: Length.X(...params) });
        static AUTO: Sheet = { borderImageWidth: "auto" };
    }
    export class BorderInlineEnd {
        static set = (...params: Param[]): Sheet => ({ borderInlineEnd: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderInlineEnd: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderInlineEnd: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderInlineEnd: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderInlineEnd: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderInlineEnd: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderInlineEnd: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderInlineEnd: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderInlineEnd: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderInlineEnd: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderInlineEnd: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderInlineEnd: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderInlineEnd: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderInlineEnd: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderInlineEnd: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderInlineEnd: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderInlineEnd: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderInlineEnd: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderInlineEnd: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderInlineEnd: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderInlineEnd: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderInlineEnd: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderInlineEnd: Length.fr(...params) });
        static THIN: Sheet = { borderInlineEnd: "thin" };
        static MEDIUM: Sheet = { borderInlineEnd: "medium" };
        static THICK: Sheet = { borderInlineEnd: "thick" };
        static NONE: Sheet = { borderInlineEnd: "none" };
        static HIDDEN: Sheet = { borderInlineEnd: "hidden" };
        static DOTTED: Sheet = { borderInlineEnd: "dotted" };
        static DASHED: Sheet = { borderInlineEnd: "dashed" };
        static SOLID: Sheet = { borderInlineEnd: "solid" };
        static DOUBLE: Sheet = { borderInlineEnd: "double" };
        static GROOVE: Sheet = { borderInlineEnd: "groove" };
        static RIDGE: Sheet = { borderInlineEnd: "ridge" };
        static INSET: Sheet = { borderInlineEnd: "inset" };
        static OUTSET: Sheet = { borderInlineEnd: "outset" };
    }
    export class BorderInlineEndColor {
        static set = (...params: Param[]): Sheet => ({ borderInlineEndColor: buildProperty(params) });
    }
    export class BorderInlineEndStyle {
        static set = (...params: Param[]): Sheet => ({ borderInlineEndStyle: buildProperty(params) });
        static NONE: Sheet = { borderInlineEndStyle: "none" };
        static HIDDEN: Sheet = { borderInlineEndStyle: "hidden" };
        static DOTTED: Sheet = { borderInlineEndStyle: "dotted" };
        static DASHED: Sheet = { borderInlineEndStyle: "dashed" };
        static SOLID: Sheet = { borderInlineEndStyle: "solid" };
        static DOUBLE: Sheet = { borderInlineEndStyle: "double" };
        static GROOVE: Sheet = { borderInlineEndStyle: "groove" };
        static RIDGE: Sheet = { borderInlineEndStyle: "ridge" };
        static INSET: Sheet = { borderInlineEndStyle: "inset" };
        static OUTSET: Sheet = { borderInlineEndStyle: "outset" };
    }
    export class BorderInlineEndWidth {
        static set = (...params: Param[]): Sheet => ({ borderInlineEndWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderInlineEndWidth: Length.fr(...params) });
        static THIN: Sheet = { borderInlineEndWidth: "thin" };
        static MEDIUM: Sheet = { borderInlineEndWidth: "medium" };
        static THICK: Sheet = { borderInlineEndWidth: "thick" };
    }
    export class BorderInlineStart {
        static set = (...params: Param[]): Sheet => ({ borderInlineStart: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderInlineStart: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderInlineStart: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderInlineStart: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderInlineStart: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderInlineStart: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderInlineStart: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderInlineStart: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderInlineStart: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderInlineStart: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderInlineStart: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderInlineStart: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderInlineStart: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderInlineStart: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderInlineStart: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderInlineStart: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderInlineStart: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderInlineStart: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderInlineStart: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderInlineStart: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderInlineStart: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderInlineStart: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderInlineStart: Length.fr(...params) });
        static THIN: Sheet = { borderInlineStart: "thin" };
        static MEDIUM: Sheet = { borderInlineStart: "medium" };
        static THICK: Sheet = { borderInlineStart: "thick" };
        static NONE: Sheet = { borderInlineStart: "none" };
        static HIDDEN: Sheet = { borderInlineStart: "hidden" };
        static DOTTED: Sheet = { borderInlineStart: "dotted" };
        static DASHED: Sheet = { borderInlineStart: "dashed" };
        static SOLID: Sheet = { borderInlineStart: "solid" };
        static DOUBLE: Sheet = { borderInlineStart: "double" };
        static GROOVE: Sheet = { borderInlineStart: "groove" };
        static RIDGE: Sheet = { borderInlineStart: "ridge" };
        static INSET: Sheet = { borderInlineStart: "inset" };
        static OUTSET: Sheet = { borderInlineStart: "outset" };
    }
    export class BorderInlineStartColor {
        static set = (...params: Param[]): Sheet => ({ borderInlineStartColor: buildProperty(params) });
    }
    export class BorderInlineStartStyle {
        static set = (...params: Param[]): Sheet => ({ borderInlineStartStyle: buildProperty(params) });
        static NONE: Sheet = { borderInlineStartStyle: "none" };
        static HIDDEN: Sheet = { borderInlineStartStyle: "hidden" };
        static DOTTED: Sheet = { borderInlineStartStyle: "dotted" };
        static DASHED: Sheet = { borderInlineStartStyle: "dashed" };
        static SOLID: Sheet = { borderInlineStartStyle: "solid" };
        static DOUBLE: Sheet = { borderInlineStartStyle: "double" };
        static GROOVE: Sheet = { borderInlineStartStyle: "groove" };
        static RIDGE: Sheet = { borderInlineStartStyle: "ridge" };
        static INSET: Sheet = { borderInlineStartStyle: "inset" };
        static OUTSET: Sheet = { borderInlineStartStyle: "outset" };
    }
    export class BorderInlineStartWidth {
        static set = (...params: Param[]): Sheet => ({ borderInlineStartWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderInlineStartWidth: Length.fr(...params) });
        static THIN: Sheet = { borderInlineStartWidth: "thin" };
        static MEDIUM: Sheet = { borderInlineStartWidth: "medium" };
        static THICK: Sheet = { borderInlineStartWidth: "thick" };
    }
    export class BorderLeft {
        static set = (...params: Param[]): Sheet => ({ borderLeft: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderLeft: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderLeft: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderLeft: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderLeft: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderLeft: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderLeft: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderLeft: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderLeft: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderLeft: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderLeft: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderLeft: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderLeft: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderLeft: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderLeft: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderLeft: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderLeft: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderLeft: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderLeft: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderLeft: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderLeft: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderLeft: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderLeft: Length.fr(...params) });
        static THIN: Sheet = { borderLeft: "thin" };
        static MEDIUM: Sheet = { borderLeft: "medium" };
        static THICK: Sheet = { borderLeft: "thick" };
        static NONE: Sheet = { borderLeft: "none" };
        static HIDDEN: Sheet = { borderLeft: "hidden" };
        static DOTTED: Sheet = { borderLeft: "dotted" };
        static DASHED: Sheet = { borderLeft: "dashed" };
        static SOLID: Sheet = { borderLeft: "solid" };
        static DOUBLE: Sheet = { borderLeft: "double" };
        static GROOVE: Sheet = { borderLeft: "groove" };
        static RIDGE: Sheet = { borderLeft: "ridge" };
        static INSET: Sheet = { borderLeft: "inset" };
        static OUTSET: Sheet = { borderLeft: "outset" };
        static X = (...params: number[]): Sheet => ({ borderLeft: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderLeft: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderLeft: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderLeft: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderLeft: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderLeft: "transparent" };
        static ALICEBLUE: Sheet = { borderLeft: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderLeft: "antiquewhite" };
        static AQUA: Sheet = { borderLeft: "aqua" };
        static AQUAMARINE: Sheet = { borderLeft: "aquamarine" };
        static AZURE: Sheet = { borderLeft: "azure" };
        static BEIGE: Sheet = { borderLeft: "beige" };
        static BISQUE: Sheet = { borderLeft: "bisque" };
        static BLACK: Sheet = { borderLeft: "black" };
        static BLANCHEDALMOND: Sheet = { borderLeft: "blanchedalmond" };
        static BLUE: Sheet = { borderLeft: "blue" };
        static BLUEVIOLET: Sheet = { borderLeft: "blueviolet" };
        static BROWN: Sheet = { borderLeft: "brown" };
        static BURLYWOOD: Sheet = { borderLeft: "burlywood" };
        static CADETBLUE: Sheet = { borderLeft: "cadetblue" };
        static CHARTREUSE: Sheet = { borderLeft: "chartreuse" };
        static CHOCOLATE: Sheet = { borderLeft: "chocolate" };
        static CORAL: Sheet = { borderLeft: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderLeft: "cornflowerblue" };
        static CORNSILK: Sheet = { borderLeft: "cornsilk" };
        static CRIMSON: Sheet = { borderLeft: "crimson" };
        static CYAN: Sheet = { borderLeft: "cyan" };
        static DARKBLUE: Sheet = { borderLeft: "darkblue" };
        static DARKCYAN: Sheet = { borderLeft: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderLeft: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderLeft: "darkgray" };
        static DARKGREEN: Sheet = { borderLeft: "darkgreen" };
        static DARKGREY: Sheet = { borderLeft: "darkgrey" };
        static DARKKHAKI: Sheet = { borderLeft: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderLeft: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderLeft: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderLeft: "darkorange" };
        static DARKORCHID: Sheet = { borderLeft: "darkorchid" };
        static DARKRED: Sheet = { borderLeft: "darkred" };
        static DARKSALMON: Sheet = { borderLeft: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderLeft: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderLeft: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderLeft: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderLeft: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderLeft: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderLeft: "darkviolet" };
        static DEEPPINK: Sheet = { borderLeft: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderLeft: "deepskyblue" };
        static DIMGRAY: Sheet = { borderLeft: "dimgray" };
        static DIMGREY: Sheet = { borderLeft: "dimgrey" };
        static DODGERBLUE: Sheet = { borderLeft: "dodgerblue" };
        static FIREBRICK: Sheet = { borderLeft: "firebrick" };
        static FLORALWHITE: Sheet = { borderLeft: "floralwhite" };
        static FORESTGREEN: Sheet = { borderLeft: "forestgreen" };
        static FUCHSIA: Sheet = { borderLeft: "fuchsia" };
        static GAINSBORO: Sheet = { borderLeft: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderLeft: "ghostwhite" };
        static GOLD: Sheet = { borderLeft: "gold" };
        static GOLDENROD: Sheet = { borderLeft: "goldenrod" };
        static GRAY: Sheet = { borderLeft: "gray" };
        static GREEN: Sheet = { borderLeft: "green" };
        static GREENYELLOW: Sheet = { borderLeft: "greenyellow" };
        static GREY: Sheet = { borderLeft: "grey" };
        static HONEYDEW: Sheet = { borderLeft: "honeydew" };
        static HOTPINK: Sheet = { borderLeft: "hotpink" };
        static INDIANRED: Sheet = { borderLeft: "indianred" };
        static INDIGO: Sheet = { borderLeft: "indigo" };
        static IVORY: Sheet = { borderLeft: "ivory" };
        static KHAKI: Sheet = { borderLeft: "khaki" };
        static LAVENDER: Sheet = { borderLeft: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderLeft: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderLeft: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderLeft: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderLeft: "lightblue" };
        static LIGHTCORAL: Sheet = { borderLeft: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderLeft: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderLeft: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderLeft: "lightgray" };
        static LIGHTGREEN: Sheet = { borderLeft: "lightgreen" };
        static LIGHTGREY: Sheet = { borderLeft: "lightgrey" };
        static LIGHTPINK: Sheet = { borderLeft: "lightpink" };
        static LIGHTSALMON: Sheet = { borderLeft: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderLeft: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderLeft: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderLeft: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderLeft: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderLeft: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderLeft: "lightyellow" };
        static LIME: Sheet = { borderLeft: "lime" };
        static LIMEGREEN: Sheet = { borderLeft: "limegreen" };
        static LINEN: Sheet = { borderLeft: "linen" };
        static MAGENTA: Sheet = { borderLeft: "magenta" };
        static MAROON: Sheet = { borderLeft: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderLeft: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderLeft: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderLeft: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderLeft: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderLeft: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderLeft: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderLeft: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderLeft: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderLeft: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderLeft: "midnightblue" };
        static MINTCREAM: Sheet = { borderLeft: "mintcream" };
        static MISTYROSE: Sheet = { borderLeft: "mistyrose" };
        static MOCCASIN: Sheet = { borderLeft: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderLeft: "navajowhite" };
        static NAVY: Sheet = { borderLeft: "navy" };
        static OLDLACE: Sheet = { borderLeft: "oldlace" };
        static OLIVE: Sheet = { borderLeft: "olive" };
        static OLIVEDRAB: Sheet = { borderLeft: "olivedrab" };
        static ORANGE: Sheet = { borderLeft: "orange" };
        static ORANGERED: Sheet = { borderLeft: "orangered" };
        static ORCHID: Sheet = { borderLeft: "orchid" };
        static PALEGOLDENROD: Sheet = { borderLeft: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderLeft: "palegreen" };
        static PALETURQUOISE: Sheet = { borderLeft: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderLeft: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderLeft: "papayawhip" };
        static PEACHPUFF: Sheet = { borderLeft: "peachpuff" };
        static PERU: Sheet = { borderLeft: "peru" };
        static PINK: Sheet = { borderLeft: "pink" };
        static PLUM: Sheet = { borderLeft: "plum" };
        static POWDERBLUE: Sheet = { borderLeft: "powderblue" };
        static PURPLE: Sheet = { borderLeft: "purple" };
        static REBECCAPURPLE: Sheet = { borderLeft: "rebeccapurple" };
        static RED: Sheet = { borderLeft: "red" };
        static ROSYBROWN: Sheet = { borderLeft: "rosybrown" };
        static ROYALBLUE: Sheet = { borderLeft: "royalblue" };
        static SADDLEBROWN: Sheet = { borderLeft: "saddlebrown" };
        static SALMON: Sheet = { borderLeft: "salmon" };
        static SANDYBROWN: Sheet = { borderLeft: "sandybrown" };
        static SEAGREEN: Sheet = { borderLeft: "seagreen" };
        static SEASHELL: Sheet = { borderLeft: "seashell" };
        static SIENNA: Sheet = { borderLeft: "sienna" };
        static SILVER: Sheet = { borderLeft: "silver" };
        static SKYBLUE: Sheet = { borderLeft: "skyblue" };
        static SLATEBLUE: Sheet = { borderLeft: "slateblue" };
        static SLATEGRAY: Sheet = { borderLeft: "slategray" };
        static SLATEGREY: Sheet = { borderLeft: "slategrey" };
        static SNOW: Sheet = { borderLeft: "snow" };
        static SPRINGGREEN: Sheet = { borderLeft: "springgreen" };
        static STEELBLUE: Sheet = { borderLeft: "steelblue" };
        static TAN: Sheet = { borderLeft: "tan" };
        static TEAL: Sheet = { borderLeft: "teal" };
        static THISTLE: Sheet = { borderLeft: "thistle" };
        static TOMATO: Sheet = { borderLeft: "tomato" };
        static TURQUOISE: Sheet = { borderLeft: "turquoise" };
        static VIOLET: Sheet = { borderLeft: "violet" };
        static WHEAT: Sheet = { borderLeft: "wheat" };
        static WHITE: Sheet = { borderLeft: "white" };
        static WHITESMOKE: Sheet = { borderLeft: "whitesmoke" };
        static YELLOW: Sheet = { borderLeft: "yellow" };
        static YELLOWGREEN: Sheet = { borderLeft: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderLeft: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderLeft: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderLeft: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderLeft: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderLeft: "Background" };
        static BUTTONFACE: Sheet = { borderLeft: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderLeft: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderLeft: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderLeft: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderLeft: "CaptionText" };
        static GRAYTEXT: Sheet = { borderLeft: "GrayText" };
        static HIGHLIGHT: Sheet = { borderLeft: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderLeft: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderLeft: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderLeft: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderLeft: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderLeft: "InfoBackground" };
        static INFOTEXT: Sheet = { borderLeft: "InfoText" };
        static MENU: Sheet = { borderLeft: "Menu" };
        static MENUTEXT: Sheet = { borderLeft: "MenuText" };
        static SCROLLBAR: Sheet = { borderLeft: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderLeft: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderLeft: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderLeft: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderLeft: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderLeft: "ThreeDShadow" };
        static WINDOW: Sheet = { borderLeft: "Window" };
        static WINDOWFRAME: Sheet = { borderLeft: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderLeft: "WindowText" };
    }
    export class BorderLeftColor {
        static set = (...params: Param[]): Sheet => ({ borderLeftColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ borderLeftColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderLeftColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderLeftColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderLeftColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderLeftColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderLeftColor: "transparent" };
        static ALICEBLUE: Sheet = { borderLeftColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderLeftColor: "antiquewhite" };
        static AQUA: Sheet = { borderLeftColor: "aqua" };
        static AQUAMARINE: Sheet = { borderLeftColor: "aquamarine" };
        static AZURE: Sheet = { borderLeftColor: "azure" };
        static BEIGE: Sheet = { borderLeftColor: "beige" };
        static BISQUE: Sheet = { borderLeftColor: "bisque" };
        static BLACK: Sheet = { borderLeftColor: "black" };
        static BLANCHEDALMOND: Sheet = { borderLeftColor: "blanchedalmond" };
        static BLUE: Sheet = { borderLeftColor: "blue" };
        static BLUEVIOLET: Sheet = { borderLeftColor: "blueviolet" };
        static BROWN: Sheet = { borderLeftColor: "brown" };
        static BURLYWOOD: Sheet = { borderLeftColor: "burlywood" };
        static CADETBLUE: Sheet = { borderLeftColor: "cadetblue" };
        static CHARTREUSE: Sheet = { borderLeftColor: "chartreuse" };
        static CHOCOLATE: Sheet = { borderLeftColor: "chocolate" };
        static CORAL: Sheet = { borderLeftColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderLeftColor: "cornflowerblue" };
        static CORNSILK: Sheet = { borderLeftColor: "cornsilk" };
        static CRIMSON: Sheet = { borderLeftColor: "crimson" };
        static CYAN: Sheet = { borderLeftColor: "cyan" };
        static DARKBLUE: Sheet = { borderLeftColor: "darkblue" };
        static DARKCYAN: Sheet = { borderLeftColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderLeftColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderLeftColor: "darkgray" };
        static DARKGREEN: Sheet = { borderLeftColor: "darkgreen" };
        static DARKGREY: Sheet = { borderLeftColor: "darkgrey" };
        static DARKKHAKI: Sheet = { borderLeftColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderLeftColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderLeftColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderLeftColor: "darkorange" };
        static DARKORCHID: Sheet = { borderLeftColor: "darkorchid" };
        static DARKRED: Sheet = { borderLeftColor: "darkred" };
        static DARKSALMON: Sheet = { borderLeftColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderLeftColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderLeftColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderLeftColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderLeftColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderLeftColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderLeftColor: "darkviolet" };
        static DEEPPINK: Sheet = { borderLeftColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderLeftColor: "deepskyblue" };
        static DIMGRAY: Sheet = { borderLeftColor: "dimgray" };
        static DIMGREY: Sheet = { borderLeftColor: "dimgrey" };
        static DODGERBLUE: Sheet = { borderLeftColor: "dodgerblue" };
        static FIREBRICK: Sheet = { borderLeftColor: "firebrick" };
        static FLORALWHITE: Sheet = { borderLeftColor: "floralwhite" };
        static FORESTGREEN: Sheet = { borderLeftColor: "forestgreen" };
        static FUCHSIA: Sheet = { borderLeftColor: "fuchsia" };
        static GAINSBORO: Sheet = { borderLeftColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderLeftColor: "ghostwhite" };
        static GOLD: Sheet = { borderLeftColor: "gold" };
        static GOLDENROD: Sheet = { borderLeftColor: "goldenrod" };
        static GRAY: Sheet = { borderLeftColor: "gray" };
        static GREEN: Sheet = { borderLeftColor: "green" };
        static GREENYELLOW: Sheet = { borderLeftColor: "greenyellow" };
        static GREY: Sheet = { borderLeftColor: "grey" };
        static HONEYDEW: Sheet = { borderLeftColor: "honeydew" };
        static HOTPINK: Sheet = { borderLeftColor: "hotpink" };
        static INDIANRED: Sheet = { borderLeftColor: "indianred" };
        static INDIGO: Sheet = { borderLeftColor: "indigo" };
        static IVORY: Sheet = { borderLeftColor: "ivory" };
        static KHAKI: Sheet = { borderLeftColor: "khaki" };
        static LAVENDER: Sheet = { borderLeftColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderLeftColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderLeftColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderLeftColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderLeftColor: "lightblue" };
        static LIGHTCORAL: Sheet = { borderLeftColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderLeftColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderLeftColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderLeftColor: "lightgray" };
        static LIGHTGREEN: Sheet = { borderLeftColor: "lightgreen" };
        static LIGHTGREY: Sheet = { borderLeftColor: "lightgrey" };
        static LIGHTPINK: Sheet = { borderLeftColor: "lightpink" };
        static LIGHTSALMON: Sheet = { borderLeftColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderLeftColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderLeftColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderLeftColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderLeftColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderLeftColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderLeftColor: "lightyellow" };
        static LIME: Sheet = { borderLeftColor: "lime" };
        static LIMEGREEN: Sheet = { borderLeftColor: "limegreen" };
        static LINEN: Sheet = { borderLeftColor: "linen" };
        static MAGENTA: Sheet = { borderLeftColor: "magenta" };
        static MAROON: Sheet = { borderLeftColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderLeftColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderLeftColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderLeftColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderLeftColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderLeftColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderLeftColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderLeftColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderLeftColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderLeftColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderLeftColor: "midnightblue" };
        static MINTCREAM: Sheet = { borderLeftColor: "mintcream" };
        static MISTYROSE: Sheet = { borderLeftColor: "mistyrose" };
        static MOCCASIN: Sheet = { borderLeftColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderLeftColor: "navajowhite" };
        static NAVY: Sheet = { borderLeftColor: "navy" };
        static OLDLACE: Sheet = { borderLeftColor: "oldlace" };
        static OLIVE: Sheet = { borderLeftColor: "olive" };
        static OLIVEDRAB: Sheet = { borderLeftColor: "olivedrab" };
        static ORANGE: Sheet = { borderLeftColor: "orange" };
        static ORANGERED: Sheet = { borderLeftColor: "orangered" };
        static ORCHID: Sheet = { borderLeftColor: "orchid" };
        static PALEGOLDENROD: Sheet = { borderLeftColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderLeftColor: "palegreen" };
        static PALETURQUOISE: Sheet = { borderLeftColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderLeftColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderLeftColor: "papayawhip" };
        static PEACHPUFF: Sheet = { borderLeftColor: "peachpuff" };
        static PERU: Sheet = { borderLeftColor: "peru" };
        static PINK: Sheet = { borderLeftColor: "pink" };
        static PLUM: Sheet = { borderLeftColor: "plum" };
        static POWDERBLUE: Sheet = { borderLeftColor: "powderblue" };
        static PURPLE: Sheet = { borderLeftColor: "purple" };
        static REBECCAPURPLE: Sheet = { borderLeftColor: "rebeccapurple" };
        static RED: Sheet = { borderLeftColor: "red" };
        static ROSYBROWN: Sheet = { borderLeftColor: "rosybrown" };
        static ROYALBLUE: Sheet = { borderLeftColor: "royalblue" };
        static SADDLEBROWN: Sheet = { borderLeftColor: "saddlebrown" };
        static SALMON: Sheet = { borderLeftColor: "salmon" };
        static SANDYBROWN: Sheet = { borderLeftColor: "sandybrown" };
        static SEAGREEN: Sheet = { borderLeftColor: "seagreen" };
        static SEASHELL: Sheet = { borderLeftColor: "seashell" };
        static SIENNA: Sheet = { borderLeftColor: "sienna" };
        static SILVER: Sheet = { borderLeftColor: "silver" };
        static SKYBLUE: Sheet = { borderLeftColor: "skyblue" };
        static SLATEBLUE: Sheet = { borderLeftColor: "slateblue" };
        static SLATEGRAY: Sheet = { borderLeftColor: "slategray" };
        static SLATEGREY: Sheet = { borderLeftColor: "slategrey" };
        static SNOW: Sheet = { borderLeftColor: "snow" };
        static SPRINGGREEN: Sheet = { borderLeftColor: "springgreen" };
        static STEELBLUE: Sheet = { borderLeftColor: "steelblue" };
        static TAN: Sheet = { borderLeftColor: "tan" };
        static TEAL: Sheet = { borderLeftColor: "teal" };
        static THISTLE: Sheet = { borderLeftColor: "thistle" };
        static TOMATO: Sheet = { borderLeftColor: "tomato" };
        static TURQUOISE: Sheet = { borderLeftColor: "turquoise" };
        static VIOLET: Sheet = { borderLeftColor: "violet" };
        static WHEAT: Sheet = { borderLeftColor: "wheat" };
        static WHITE: Sheet = { borderLeftColor: "white" };
        static WHITESMOKE: Sheet = { borderLeftColor: "whitesmoke" };
        static YELLOW: Sheet = { borderLeftColor: "yellow" };
        static YELLOWGREEN: Sheet = { borderLeftColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderLeftColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderLeftColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderLeftColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderLeftColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderLeftColor: "Background" };
        static BUTTONFACE: Sheet = { borderLeftColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderLeftColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderLeftColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderLeftColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderLeftColor: "CaptionText" };
        static GRAYTEXT: Sheet = { borderLeftColor: "GrayText" };
        static HIGHLIGHT: Sheet = { borderLeftColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderLeftColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderLeftColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderLeftColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderLeftColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderLeftColor: "InfoBackground" };
        static INFOTEXT: Sheet = { borderLeftColor: "InfoText" };
        static MENU: Sheet = { borderLeftColor: "Menu" };
        static MENUTEXT: Sheet = { borderLeftColor: "MenuText" };
        static SCROLLBAR: Sheet = { borderLeftColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderLeftColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderLeftColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderLeftColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderLeftColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderLeftColor: "ThreeDShadow" };
        static WINDOW: Sheet = { borderLeftColor: "Window" };
        static WINDOWFRAME: Sheet = { borderLeftColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderLeftColor: "WindowText" };
    }
    export class BorderLeftStyle {
        static set = (...params: Param[]): Sheet => ({ borderLeftStyle: buildProperty(params) });
        static NONE: Sheet = { borderLeftStyle: "none" };
        static HIDDEN: Sheet = { borderLeftStyle: "hidden" };
        static DOTTED: Sheet = { borderLeftStyle: "dotted" };
        static DASHED: Sheet = { borderLeftStyle: "dashed" };
        static SOLID: Sheet = { borderLeftStyle: "solid" };
        static DOUBLE: Sheet = { borderLeftStyle: "double" };
        static GROOVE: Sheet = { borderLeftStyle: "groove" };
        static RIDGE: Sheet = { borderLeftStyle: "ridge" };
        static INSET: Sheet = { borderLeftStyle: "inset" };
        static OUTSET: Sheet = { borderLeftStyle: "outset" };
    }
    export class BorderLeftWidth {
        static set = (...params: Param[]): Sheet => ({ borderLeftWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderLeftWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderLeftWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderLeftWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderLeftWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderLeftWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderLeftWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderLeftWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderLeftWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderLeftWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderLeftWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderLeftWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderLeftWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderLeftWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderLeftWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderLeftWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderLeftWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderLeftWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderLeftWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderLeftWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderLeftWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderLeftWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderLeftWidth: Length.fr(...params) });
        static THIN: Sheet = { borderLeftWidth: "thin" };
        static MEDIUM: Sheet = { borderLeftWidth: "medium" };
        static THICK: Sheet = { borderLeftWidth: "thick" };
    }
    export class BorderRadius {
        static set = (...params: Param[]): Sheet => ({ borderRadius: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderRadius: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderRadius: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderRadius: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderRadius: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderRadius: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderRadius: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderRadius: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderRadius: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderRadius: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderRadius: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderRadius: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderRadius: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderRadius: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderRadius: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderRadius: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderRadius: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderRadius: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderRadius: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderRadius: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderRadius: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderRadius: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderRadius: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ borderRadius: Length.X(...params) });
    }
    export class BorderRight {
        static set = (...params: Param[]): Sheet => ({ borderRight: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderRight: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderRight: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderRight: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderRight: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderRight: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderRight: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderRight: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderRight: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderRight: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderRight: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderRight: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderRight: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderRight: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderRight: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderRight: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderRight: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderRight: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderRight: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderRight: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderRight: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderRight: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderRight: Length.fr(...params) });
        static THIN: Sheet = { borderRight: "thin" };
        static MEDIUM: Sheet = { borderRight: "medium" };
        static THICK: Sheet = { borderRight: "thick" };
        static NONE: Sheet = { borderRight: "none" };
        static HIDDEN: Sheet = { borderRight: "hidden" };
        static DOTTED: Sheet = { borderRight: "dotted" };
        static DASHED: Sheet = { borderRight: "dashed" };
        static SOLID: Sheet = { borderRight: "solid" };
        static DOUBLE: Sheet = { borderRight: "double" };
        static GROOVE: Sheet = { borderRight: "groove" };
        static RIDGE: Sheet = { borderRight: "ridge" };
        static INSET: Sheet = { borderRight: "inset" };
        static OUTSET: Sheet = { borderRight: "outset" };
        static X = (...params: number[]): Sheet => ({ borderRight: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderRight: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderRight: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderRight: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderRight: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderRight: "transparent" };
        static ALICEBLUE: Sheet = { borderRight: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderRight: "antiquewhite" };
        static AQUA: Sheet = { borderRight: "aqua" };
        static AQUAMARINE: Sheet = { borderRight: "aquamarine" };
        static AZURE: Sheet = { borderRight: "azure" };
        static BEIGE: Sheet = { borderRight: "beige" };
        static BISQUE: Sheet = { borderRight: "bisque" };
        static BLACK: Sheet = { borderRight: "black" };
        static BLANCHEDALMOND: Sheet = { borderRight: "blanchedalmond" };
        static BLUE: Sheet = { borderRight: "blue" };
        static BLUEVIOLET: Sheet = { borderRight: "blueviolet" };
        static BROWN: Sheet = { borderRight: "brown" };
        static BURLYWOOD: Sheet = { borderRight: "burlywood" };
        static CADETBLUE: Sheet = { borderRight: "cadetblue" };
        static CHARTREUSE: Sheet = { borderRight: "chartreuse" };
        static CHOCOLATE: Sheet = { borderRight: "chocolate" };
        static CORAL: Sheet = { borderRight: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderRight: "cornflowerblue" };
        static CORNSILK: Sheet = { borderRight: "cornsilk" };
        static CRIMSON: Sheet = { borderRight: "crimson" };
        static CYAN: Sheet = { borderRight: "cyan" };
        static DARKBLUE: Sheet = { borderRight: "darkblue" };
        static DARKCYAN: Sheet = { borderRight: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderRight: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderRight: "darkgray" };
        static DARKGREEN: Sheet = { borderRight: "darkgreen" };
        static DARKGREY: Sheet = { borderRight: "darkgrey" };
        static DARKKHAKI: Sheet = { borderRight: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderRight: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderRight: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderRight: "darkorange" };
        static DARKORCHID: Sheet = { borderRight: "darkorchid" };
        static DARKRED: Sheet = { borderRight: "darkred" };
        static DARKSALMON: Sheet = { borderRight: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderRight: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderRight: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderRight: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderRight: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderRight: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderRight: "darkviolet" };
        static DEEPPINK: Sheet = { borderRight: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderRight: "deepskyblue" };
        static DIMGRAY: Sheet = { borderRight: "dimgray" };
        static DIMGREY: Sheet = { borderRight: "dimgrey" };
        static DODGERBLUE: Sheet = { borderRight: "dodgerblue" };
        static FIREBRICK: Sheet = { borderRight: "firebrick" };
        static FLORALWHITE: Sheet = { borderRight: "floralwhite" };
        static FORESTGREEN: Sheet = { borderRight: "forestgreen" };
        static FUCHSIA: Sheet = { borderRight: "fuchsia" };
        static GAINSBORO: Sheet = { borderRight: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderRight: "ghostwhite" };
        static GOLD: Sheet = { borderRight: "gold" };
        static GOLDENROD: Sheet = { borderRight: "goldenrod" };
        static GRAY: Sheet = { borderRight: "gray" };
        static GREEN: Sheet = { borderRight: "green" };
        static GREENYELLOW: Sheet = { borderRight: "greenyellow" };
        static GREY: Sheet = { borderRight: "grey" };
        static HONEYDEW: Sheet = { borderRight: "honeydew" };
        static HOTPINK: Sheet = { borderRight: "hotpink" };
        static INDIANRED: Sheet = { borderRight: "indianred" };
        static INDIGO: Sheet = { borderRight: "indigo" };
        static IVORY: Sheet = { borderRight: "ivory" };
        static KHAKI: Sheet = { borderRight: "khaki" };
        static LAVENDER: Sheet = { borderRight: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderRight: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderRight: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderRight: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderRight: "lightblue" };
        static LIGHTCORAL: Sheet = { borderRight: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderRight: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderRight: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderRight: "lightgray" };
        static LIGHTGREEN: Sheet = { borderRight: "lightgreen" };
        static LIGHTGREY: Sheet = { borderRight: "lightgrey" };
        static LIGHTPINK: Sheet = { borderRight: "lightpink" };
        static LIGHTSALMON: Sheet = { borderRight: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderRight: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderRight: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderRight: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderRight: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderRight: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderRight: "lightyellow" };
        static LIME: Sheet = { borderRight: "lime" };
        static LIMEGREEN: Sheet = { borderRight: "limegreen" };
        static LINEN: Sheet = { borderRight: "linen" };
        static MAGENTA: Sheet = { borderRight: "magenta" };
        static MAROON: Sheet = { borderRight: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderRight: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderRight: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderRight: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderRight: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderRight: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderRight: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderRight: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderRight: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderRight: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderRight: "midnightblue" };
        static MINTCREAM: Sheet = { borderRight: "mintcream" };
        static MISTYROSE: Sheet = { borderRight: "mistyrose" };
        static MOCCASIN: Sheet = { borderRight: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderRight: "navajowhite" };
        static NAVY: Sheet = { borderRight: "navy" };
        static OLDLACE: Sheet = { borderRight: "oldlace" };
        static OLIVE: Sheet = { borderRight: "olive" };
        static OLIVEDRAB: Sheet = { borderRight: "olivedrab" };
        static ORANGE: Sheet = { borderRight: "orange" };
        static ORANGERED: Sheet = { borderRight: "orangered" };
        static ORCHID: Sheet = { borderRight: "orchid" };
        static PALEGOLDENROD: Sheet = { borderRight: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderRight: "palegreen" };
        static PALETURQUOISE: Sheet = { borderRight: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderRight: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderRight: "papayawhip" };
        static PEACHPUFF: Sheet = { borderRight: "peachpuff" };
        static PERU: Sheet = { borderRight: "peru" };
        static PINK: Sheet = { borderRight: "pink" };
        static PLUM: Sheet = { borderRight: "plum" };
        static POWDERBLUE: Sheet = { borderRight: "powderblue" };
        static PURPLE: Sheet = { borderRight: "purple" };
        static REBECCAPURPLE: Sheet = { borderRight: "rebeccapurple" };
        static RED: Sheet = { borderRight: "red" };
        static ROSYBROWN: Sheet = { borderRight: "rosybrown" };
        static ROYALBLUE: Sheet = { borderRight: "royalblue" };
        static SADDLEBROWN: Sheet = { borderRight: "saddlebrown" };
        static SALMON: Sheet = { borderRight: "salmon" };
        static SANDYBROWN: Sheet = { borderRight: "sandybrown" };
        static SEAGREEN: Sheet = { borderRight: "seagreen" };
        static SEASHELL: Sheet = { borderRight: "seashell" };
        static SIENNA: Sheet = { borderRight: "sienna" };
        static SILVER: Sheet = { borderRight: "silver" };
        static SKYBLUE: Sheet = { borderRight: "skyblue" };
        static SLATEBLUE: Sheet = { borderRight: "slateblue" };
        static SLATEGRAY: Sheet = { borderRight: "slategray" };
        static SLATEGREY: Sheet = { borderRight: "slategrey" };
        static SNOW: Sheet = { borderRight: "snow" };
        static SPRINGGREEN: Sheet = { borderRight: "springgreen" };
        static STEELBLUE: Sheet = { borderRight: "steelblue" };
        static TAN: Sheet = { borderRight: "tan" };
        static TEAL: Sheet = { borderRight: "teal" };
        static THISTLE: Sheet = { borderRight: "thistle" };
        static TOMATO: Sheet = { borderRight: "tomato" };
        static TURQUOISE: Sheet = { borderRight: "turquoise" };
        static VIOLET: Sheet = { borderRight: "violet" };
        static WHEAT: Sheet = { borderRight: "wheat" };
        static WHITE: Sheet = { borderRight: "white" };
        static WHITESMOKE: Sheet = { borderRight: "whitesmoke" };
        static YELLOW: Sheet = { borderRight: "yellow" };
        static YELLOWGREEN: Sheet = { borderRight: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderRight: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderRight: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderRight: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderRight: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderRight: "Background" };
        static BUTTONFACE: Sheet = { borderRight: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderRight: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderRight: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderRight: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderRight: "CaptionText" };
        static GRAYTEXT: Sheet = { borderRight: "GrayText" };
        static HIGHLIGHT: Sheet = { borderRight: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderRight: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderRight: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderRight: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderRight: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderRight: "InfoBackground" };
        static INFOTEXT: Sheet = { borderRight: "InfoText" };
        static MENU: Sheet = { borderRight: "Menu" };
        static MENUTEXT: Sheet = { borderRight: "MenuText" };
        static SCROLLBAR: Sheet = { borderRight: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderRight: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderRight: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderRight: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderRight: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderRight: "ThreeDShadow" };
        static WINDOW: Sheet = { borderRight: "Window" };
        static WINDOWFRAME: Sheet = { borderRight: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderRight: "WindowText" };
    }
    export class BorderRightColor {
        static set = (...params: Param[]): Sheet => ({ borderRightColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ borderRightColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderRightColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderRightColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderRightColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderRightColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderRightColor: "transparent" };
        static ALICEBLUE: Sheet = { borderRightColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderRightColor: "antiquewhite" };
        static AQUA: Sheet = { borderRightColor: "aqua" };
        static AQUAMARINE: Sheet = { borderRightColor: "aquamarine" };
        static AZURE: Sheet = { borderRightColor: "azure" };
        static BEIGE: Sheet = { borderRightColor: "beige" };
        static BISQUE: Sheet = { borderRightColor: "bisque" };
        static BLACK: Sheet = { borderRightColor: "black" };
        static BLANCHEDALMOND: Sheet = { borderRightColor: "blanchedalmond" };
        static BLUE: Sheet = { borderRightColor: "blue" };
        static BLUEVIOLET: Sheet = { borderRightColor: "blueviolet" };
        static BROWN: Sheet = { borderRightColor: "brown" };
        static BURLYWOOD: Sheet = { borderRightColor: "burlywood" };
        static CADETBLUE: Sheet = { borderRightColor: "cadetblue" };
        static CHARTREUSE: Sheet = { borderRightColor: "chartreuse" };
        static CHOCOLATE: Sheet = { borderRightColor: "chocolate" };
        static CORAL: Sheet = { borderRightColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderRightColor: "cornflowerblue" };
        static CORNSILK: Sheet = { borderRightColor: "cornsilk" };
        static CRIMSON: Sheet = { borderRightColor: "crimson" };
        static CYAN: Sheet = { borderRightColor: "cyan" };
        static DARKBLUE: Sheet = { borderRightColor: "darkblue" };
        static DARKCYAN: Sheet = { borderRightColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderRightColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderRightColor: "darkgray" };
        static DARKGREEN: Sheet = { borderRightColor: "darkgreen" };
        static DARKGREY: Sheet = { borderRightColor: "darkgrey" };
        static DARKKHAKI: Sheet = { borderRightColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderRightColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderRightColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderRightColor: "darkorange" };
        static DARKORCHID: Sheet = { borderRightColor: "darkorchid" };
        static DARKRED: Sheet = { borderRightColor: "darkred" };
        static DARKSALMON: Sheet = { borderRightColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderRightColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderRightColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderRightColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderRightColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderRightColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderRightColor: "darkviolet" };
        static DEEPPINK: Sheet = { borderRightColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderRightColor: "deepskyblue" };
        static DIMGRAY: Sheet = { borderRightColor: "dimgray" };
        static DIMGREY: Sheet = { borderRightColor: "dimgrey" };
        static DODGERBLUE: Sheet = { borderRightColor: "dodgerblue" };
        static FIREBRICK: Sheet = { borderRightColor: "firebrick" };
        static FLORALWHITE: Sheet = { borderRightColor: "floralwhite" };
        static FORESTGREEN: Sheet = { borderRightColor: "forestgreen" };
        static FUCHSIA: Sheet = { borderRightColor: "fuchsia" };
        static GAINSBORO: Sheet = { borderRightColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderRightColor: "ghostwhite" };
        static GOLD: Sheet = { borderRightColor: "gold" };
        static GOLDENROD: Sheet = { borderRightColor: "goldenrod" };
        static GRAY: Sheet = { borderRightColor: "gray" };
        static GREEN: Sheet = { borderRightColor: "green" };
        static GREENYELLOW: Sheet = { borderRightColor: "greenyellow" };
        static GREY: Sheet = { borderRightColor: "grey" };
        static HONEYDEW: Sheet = { borderRightColor: "honeydew" };
        static HOTPINK: Sheet = { borderRightColor: "hotpink" };
        static INDIANRED: Sheet = { borderRightColor: "indianred" };
        static INDIGO: Sheet = { borderRightColor: "indigo" };
        static IVORY: Sheet = { borderRightColor: "ivory" };
        static KHAKI: Sheet = { borderRightColor: "khaki" };
        static LAVENDER: Sheet = { borderRightColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderRightColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderRightColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderRightColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderRightColor: "lightblue" };
        static LIGHTCORAL: Sheet = { borderRightColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderRightColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderRightColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderRightColor: "lightgray" };
        static LIGHTGREEN: Sheet = { borderRightColor: "lightgreen" };
        static LIGHTGREY: Sheet = { borderRightColor: "lightgrey" };
        static LIGHTPINK: Sheet = { borderRightColor: "lightpink" };
        static LIGHTSALMON: Sheet = { borderRightColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderRightColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderRightColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderRightColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderRightColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderRightColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderRightColor: "lightyellow" };
        static LIME: Sheet = { borderRightColor: "lime" };
        static LIMEGREEN: Sheet = { borderRightColor: "limegreen" };
        static LINEN: Sheet = { borderRightColor: "linen" };
        static MAGENTA: Sheet = { borderRightColor: "magenta" };
        static MAROON: Sheet = { borderRightColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderRightColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderRightColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderRightColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderRightColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderRightColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderRightColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderRightColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderRightColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderRightColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderRightColor: "midnightblue" };
        static MINTCREAM: Sheet = { borderRightColor: "mintcream" };
        static MISTYROSE: Sheet = { borderRightColor: "mistyrose" };
        static MOCCASIN: Sheet = { borderRightColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderRightColor: "navajowhite" };
        static NAVY: Sheet = { borderRightColor: "navy" };
        static OLDLACE: Sheet = { borderRightColor: "oldlace" };
        static OLIVE: Sheet = { borderRightColor: "olive" };
        static OLIVEDRAB: Sheet = { borderRightColor: "olivedrab" };
        static ORANGE: Sheet = { borderRightColor: "orange" };
        static ORANGERED: Sheet = { borderRightColor: "orangered" };
        static ORCHID: Sheet = { borderRightColor: "orchid" };
        static PALEGOLDENROD: Sheet = { borderRightColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderRightColor: "palegreen" };
        static PALETURQUOISE: Sheet = { borderRightColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderRightColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderRightColor: "papayawhip" };
        static PEACHPUFF: Sheet = { borderRightColor: "peachpuff" };
        static PERU: Sheet = { borderRightColor: "peru" };
        static PINK: Sheet = { borderRightColor: "pink" };
        static PLUM: Sheet = { borderRightColor: "plum" };
        static POWDERBLUE: Sheet = { borderRightColor: "powderblue" };
        static PURPLE: Sheet = { borderRightColor: "purple" };
        static REBECCAPURPLE: Sheet = { borderRightColor: "rebeccapurple" };
        static RED: Sheet = { borderRightColor: "red" };
        static ROSYBROWN: Sheet = { borderRightColor: "rosybrown" };
        static ROYALBLUE: Sheet = { borderRightColor: "royalblue" };
        static SADDLEBROWN: Sheet = { borderRightColor: "saddlebrown" };
        static SALMON: Sheet = { borderRightColor: "salmon" };
        static SANDYBROWN: Sheet = { borderRightColor: "sandybrown" };
        static SEAGREEN: Sheet = { borderRightColor: "seagreen" };
        static SEASHELL: Sheet = { borderRightColor: "seashell" };
        static SIENNA: Sheet = { borderRightColor: "sienna" };
        static SILVER: Sheet = { borderRightColor: "silver" };
        static SKYBLUE: Sheet = { borderRightColor: "skyblue" };
        static SLATEBLUE: Sheet = { borderRightColor: "slateblue" };
        static SLATEGRAY: Sheet = { borderRightColor: "slategray" };
        static SLATEGREY: Sheet = { borderRightColor: "slategrey" };
        static SNOW: Sheet = { borderRightColor: "snow" };
        static SPRINGGREEN: Sheet = { borderRightColor: "springgreen" };
        static STEELBLUE: Sheet = { borderRightColor: "steelblue" };
        static TAN: Sheet = { borderRightColor: "tan" };
        static TEAL: Sheet = { borderRightColor: "teal" };
        static THISTLE: Sheet = { borderRightColor: "thistle" };
        static TOMATO: Sheet = { borderRightColor: "tomato" };
        static TURQUOISE: Sheet = { borderRightColor: "turquoise" };
        static VIOLET: Sheet = { borderRightColor: "violet" };
        static WHEAT: Sheet = { borderRightColor: "wheat" };
        static WHITE: Sheet = { borderRightColor: "white" };
        static WHITESMOKE: Sheet = { borderRightColor: "whitesmoke" };
        static YELLOW: Sheet = { borderRightColor: "yellow" };
        static YELLOWGREEN: Sheet = { borderRightColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderRightColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderRightColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderRightColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderRightColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderRightColor: "Background" };
        static BUTTONFACE: Sheet = { borderRightColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderRightColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderRightColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderRightColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderRightColor: "CaptionText" };
        static GRAYTEXT: Sheet = { borderRightColor: "GrayText" };
        static HIGHLIGHT: Sheet = { borderRightColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderRightColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderRightColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderRightColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderRightColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderRightColor: "InfoBackground" };
        static INFOTEXT: Sheet = { borderRightColor: "InfoText" };
        static MENU: Sheet = { borderRightColor: "Menu" };
        static MENUTEXT: Sheet = { borderRightColor: "MenuText" };
        static SCROLLBAR: Sheet = { borderRightColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderRightColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderRightColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderRightColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderRightColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderRightColor: "ThreeDShadow" };
        static WINDOW: Sheet = { borderRightColor: "Window" };
        static WINDOWFRAME: Sheet = { borderRightColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderRightColor: "WindowText" };
    }
    export class BorderRightStyle {
        static set = (...params: Param[]): Sheet => ({ borderRightStyle: buildProperty(params) });
        static NONE: Sheet = { borderRightStyle: "none" };
        static HIDDEN: Sheet = { borderRightStyle: "hidden" };
        static DOTTED: Sheet = { borderRightStyle: "dotted" };
        static DASHED: Sheet = { borderRightStyle: "dashed" };
        static SOLID: Sheet = { borderRightStyle: "solid" };
        static DOUBLE: Sheet = { borderRightStyle: "double" };
        static GROOVE: Sheet = { borderRightStyle: "groove" };
        static RIDGE: Sheet = { borderRightStyle: "ridge" };
        static INSET: Sheet = { borderRightStyle: "inset" };
        static OUTSET: Sheet = { borderRightStyle: "outset" };
    }
    export class BorderRightWidth {
        static set = (...params: Param[]): Sheet => ({ borderRightWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderRightWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderRightWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderRightWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderRightWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderRightWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderRightWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderRightWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderRightWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderRightWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderRightWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderRightWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderRightWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderRightWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderRightWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderRightWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderRightWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderRightWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderRightWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderRightWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderRightWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderRightWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderRightWidth: Length.fr(...params) });
        static THIN: Sheet = { borderRightWidth: "thin" };
        static MEDIUM: Sheet = { borderRightWidth: "medium" };
        static THICK: Sheet = { borderRightWidth: "thick" };
    }
    export class BorderSpacing {
        static set = (...params: Param[]): Sheet => ({ borderSpacing: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderSpacing: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderSpacing: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderSpacing: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderSpacing: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderSpacing: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderSpacing: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderSpacing: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderSpacing: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderSpacing: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderSpacing: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderSpacing: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderSpacing: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderSpacing: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderSpacing: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderSpacing: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderSpacing: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderSpacing: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderSpacing: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderSpacing: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderSpacing: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderSpacing: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderSpacing: Length.fr(...params) });
    }
    export class BorderStyle {
        static set = (...params: Param[]): Sheet => ({ borderStyle: buildProperty(params) });
        static NONE: Sheet = { borderStyle: "none" };
        static HIDDEN: Sheet = { borderStyle: "hidden" };
        static DOTTED: Sheet = { borderStyle: "dotted" };
        static DASHED: Sheet = { borderStyle: "dashed" };
        static SOLID: Sheet = { borderStyle: "solid" };
        static DOUBLE: Sheet = { borderStyle: "double" };
        static GROOVE: Sheet = { borderStyle: "groove" };
        static RIDGE: Sheet = { borderStyle: "ridge" };
        static INSET: Sheet = { borderStyle: "inset" };
        static OUTSET: Sheet = { borderStyle: "outset" };
    }
    export class BorderTop {
        static set = (...params: Param[]): Sheet => ({ borderTop: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderTop: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderTop: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderTop: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderTop: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderTop: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderTop: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderTop: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderTop: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderTop: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderTop: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderTop: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderTop: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderTop: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderTop: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderTop: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderTop: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderTop: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderTop: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderTop: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderTop: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderTop: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderTop: Length.fr(...params) });
        static THIN: Sheet = { borderTop: "thin" };
        static MEDIUM: Sheet = { borderTop: "medium" };
        static THICK: Sheet = { borderTop: "thick" };
        static NONE: Sheet = { borderTop: "none" };
        static HIDDEN: Sheet = { borderTop: "hidden" };
        static DOTTED: Sheet = { borderTop: "dotted" };
        static DASHED: Sheet = { borderTop: "dashed" };
        static SOLID: Sheet = { borderTop: "solid" };
        static DOUBLE: Sheet = { borderTop: "double" };
        static GROOVE: Sheet = { borderTop: "groove" };
        static RIDGE: Sheet = { borderTop: "ridge" };
        static INSET: Sheet = { borderTop: "inset" };
        static OUTSET: Sheet = { borderTop: "outset" };
        static X = (...params: number[]): Sheet => ({ borderTop: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderTop: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderTop: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderTop: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderTop: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderTop: "transparent" };
        static ALICEBLUE: Sheet = { borderTop: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderTop: "antiquewhite" };
        static AQUA: Sheet = { borderTop: "aqua" };
        static AQUAMARINE: Sheet = { borderTop: "aquamarine" };
        static AZURE: Sheet = { borderTop: "azure" };
        static BEIGE: Sheet = { borderTop: "beige" };
        static BISQUE: Sheet = { borderTop: "bisque" };
        static BLACK: Sheet = { borderTop: "black" };
        static BLANCHEDALMOND: Sheet = { borderTop: "blanchedalmond" };
        static BLUE: Sheet = { borderTop: "blue" };
        static BLUEVIOLET: Sheet = { borderTop: "blueviolet" };
        static BROWN: Sheet = { borderTop: "brown" };
        static BURLYWOOD: Sheet = { borderTop: "burlywood" };
        static CADETBLUE: Sheet = { borderTop: "cadetblue" };
        static CHARTREUSE: Sheet = { borderTop: "chartreuse" };
        static CHOCOLATE: Sheet = { borderTop: "chocolate" };
        static CORAL: Sheet = { borderTop: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderTop: "cornflowerblue" };
        static CORNSILK: Sheet = { borderTop: "cornsilk" };
        static CRIMSON: Sheet = { borderTop: "crimson" };
        static CYAN: Sheet = { borderTop: "cyan" };
        static DARKBLUE: Sheet = { borderTop: "darkblue" };
        static DARKCYAN: Sheet = { borderTop: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderTop: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderTop: "darkgray" };
        static DARKGREEN: Sheet = { borderTop: "darkgreen" };
        static DARKGREY: Sheet = { borderTop: "darkgrey" };
        static DARKKHAKI: Sheet = { borderTop: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderTop: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderTop: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderTop: "darkorange" };
        static DARKORCHID: Sheet = { borderTop: "darkorchid" };
        static DARKRED: Sheet = { borderTop: "darkred" };
        static DARKSALMON: Sheet = { borderTop: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderTop: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderTop: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderTop: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderTop: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderTop: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderTop: "darkviolet" };
        static DEEPPINK: Sheet = { borderTop: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderTop: "deepskyblue" };
        static DIMGRAY: Sheet = { borderTop: "dimgray" };
        static DIMGREY: Sheet = { borderTop: "dimgrey" };
        static DODGERBLUE: Sheet = { borderTop: "dodgerblue" };
        static FIREBRICK: Sheet = { borderTop: "firebrick" };
        static FLORALWHITE: Sheet = { borderTop: "floralwhite" };
        static FORESTGREEN: Sheet = { borderTop: "forestgreen" };
        static FUCHSIA: Sheet = { borderTop: "fuchsia" };
        static GAINSBORO: Sheet = { borderTop: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderTop: "ghostwhite" };
        static GOLD: Sheet = { borderTop: "gold" };
        static GOLDENROD: Sheet = { borderTop: "goldenrod" };
        static GRAY: Sheet = { borderTop: "gray" };
        static GREEN: Sheet = { borderTop: "green" };
        static GREENYELLOW: Sheet = { borderTop: "greenyellow" };
        static GREY: Sheet = { borderTop: "grey" };
        static HONEYDEW: Sheet = { borderTop: "honeydew" };
        static HOTPINK: Sheet = { borderTop: "hotpink" };
        static INDIANRED: Sheet = { borderTop: "indianred" };
        static INDIGO: Sheet = { borderTop: "indigo" };
        static IVORY: Sheet = { borderTop: "ivory" };
        static KHAKI: Sheet = { borderTop: "khaki" };
        static LAVENDER: Sheet = { borderTop: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderTop: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderTop: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderTop: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderTop: "lightblue" };
        static LIGHTCORAL: Sheet = { borderTop: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderTop: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderTop: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderTop: "lightgray" };
        static LIGHTGREEN: Sheet = { borderTop: "lightgreen" };
        static LIGHTGREY: Sheet = { borderTop: "lightgrey" };
        static LIGHTPINK: Sheet = { borderTop: "lightpink" };
        static LIGHTSALMON: Sheet = { borderTop: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderTop: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderTop: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderTop: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderTop: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderTop: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderTop: "lightyellow" };
        static LIME: Sheet = { borderTop: "lime" };
        static LIMEGREEN: Sheet = { borderTop: "limegreen" };
        static LINEN: Sheet = { borderTop: "linen" };
        static MAGENTA: Sheet = { borderTop: "magenta" };
        static MAROON: Sheet = { borderTop: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderTop: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderTop: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderTop: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderTop: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderTop: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderTop: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderTop: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderTop: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderTop: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderTop: "midnightblue" };
        static MINTCREAM: Sheet = { borderTop: "mintcream" };
        static MISTYROSE: Sheet = { borderTop: "mistyrose" };
        static MOCCASIN: Sheet = { borderTop: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderTop: "navajowhite" };
        static NAVY: Sheet = { borderTop: "navy" };
        static OLDLACE: Sheet = { borderTop: "oldlace" };
        static OLIVE: Sheet = { borderTop: "olive" };
        static OLIVEDRAB: Sheet = { borderTop: "olivedrab" };
        static ORANGE: Sheet = { borderTop: "orange" };
        static ORANGERED: Sheet = { borderTop: "orangered" };
        static ORCHID: Sheet = { borderTop: "orchid" };
        static PALEGOLDENROD: Sheet = { borderTop: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderTop: "palegreen" };
        static PALETURQUOISE: Sheet = { borderTop: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderTop: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderTop: "papayawhip" };
        static PEACHPUFF: Sheet = { borderTop: "peachpuff" };
        static PERU: Sheet = { borderTop: "peru" };
        static PINK: Sheet = { borderTop: "pink" };
        static PLUM: Sheet = { borderTop: "plum" };
        static POWDERBLUE: Sheet = { borderTop: "powderblue" };
        static PURPLE: Sheet = { borderTop: "purple" };
        static REBECCAPURPLE: Sheet = { borderTop: "rebeccapurple" };
        static RED: Sheet = { borderTop: "red" };
        static ROSYBROWN: Sheet = { borderTop: "rosybrown" };
        static ROYALBLUE: Sheet = { borderTop: "royalblue" };
        static SADDLEBROWN: Sheet = { borderTop: "saddlebrown" };
        static SALMON: Sheet = { borderTop: "salmon" };
        static SANDYBROWN: Sheet = { borderTop: "sandybrown" };
        static SEAGREEN: Sheet = { borderTop: "seagreen" };
        static SEASHELL: Sheet = { borderTop: "seashell" };
        static SIENNA: Sheet = { borderTop: "sienna" };
        static SILVER: Sheet = { borderTop: "silver" };
        static SKYBLUE: Sheet = { borderTop: "skyblue" };
        static SLATEBLUE: Sheet = { borderTop: "slateblue" };
        static SLATEGRAY: Sheet = { borderTop: "slategray" };
        static SLATEGREY: Sheet = { borderTop: "slategrey" };
        static SNOW: Sheet = { borderTop: "snow" };
        static SPRINGGREEN: Sheet = { borderTop: "springgreen" };
        static STEELBLUE: Sheet = { borderTop: "steelblue" };
        static TAN: Sheet = { borderTop: "tan" };
        static TEAL: Sheet = { borderTop: "teal" };
        static THISTLE: Sheet = { borderTop: "thistle" };
        static TOMATO: Sheet = { borderTop: "tomato" };
        static TURQUOISE: Sheet = { borderTop: "turquoise" };
        static VIOLET: Sheet = { borderTop: "violet" };
        static WHEAT: Sheet = { borderTop: "wheat" };
        static WHITE: Sheet = { borderTop: "white" };
        static WHITESMOKE: Sheet = { borderTop: "whitesmoke" };
        static YELLOW: Sheet = { borderTop: "yellow" };
        static YELLOWGREEN: Sheet = { borderTop: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderTop: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderTop: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderTop: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderTop: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderTop: "Background" };
        static BUTTONFACE: Sheet = { borderTop: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderTop: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderTop: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderTop: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderTop: "CaptionText" };
        static GRAYTEXT: Sheet = { borderTop: "GrayText" };
        static HIGHLIGHT: Sheet = { borderTop: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderTop: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderTop: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderTop: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderTop: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderTop: "InfoBackground" };
        static INFOTEXT: Sheet = { borderTop: "InfoText" };
        static MENU: Sheet = { borderTop: "Menu" };
        static MENUTEXT: Sheet = { borderTop: "MenuText" };
        static SCROLLBAR: Sheet = { borderTop: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderTop: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderTop: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderTop: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderTop: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderTop: "ThreeDShadow" };
        static WINDOW: Sheet = { borderTop: "Window" };
        static WINDOWFRAME: Sheet = { borderTop: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderTop: "WindowText" };
    }
    export class BorderTopColor {
        static set = (...params: Param[]): Sheet => ({ borderTopColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ borderTopColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ borderTopColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ borderTopColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ borderTopColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ borderTopColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { borderTopColor: "transparent" };
        static ALICEBLUE: Sheet = { borderTopColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { borderTopColor: "antiquewhite" };
        static AQUA: Sheet = { borderTopColor: "aqua" };
        static AQUAMARINE: Sheet = { borderTopColor: "aquamarine" };
        static AZURE: Sheet = { borderTopColor: "azure" };
        static BEIGE: Sheet = { borderTopColor: "beige" };
        static BISQUE: Sheet = { borderTopColor: "bisque" };
        static BLACK: Sheet = { borderTopColor: "black" };
        static BLANCHEDALMOND: Sheet = { borderTopColor: "blanchedalmond" };
        static BLUE: Sheet = { borderTopColor: "blue" };
        static BLUEVIOLET: Sheet = { borderTopColor: "blueviolet" };
        static BROWN: Sheet = { borderTopColor: "brown" };
        static BURLYWOOD: Sheet = { borderTopColor: "burlywood" };
        static CADETBLUE: Sheet = { borderTopColor: "cadetblue" };
        static CHARTREUSE: Sheet = { borderTopColor: "chartreuse" };
        static CHOCOLATE: Sheet = { borderTopColor: "chocolate" };
        static CORAL: Sheet = { borderTopColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { borderTopColor: "cornflowerblue" };
        static CORNSILK: Sheet = { borderTopColor: "cornsilk" };
        static CRIMSON: Sheet = { borderTopColor: "crimson" };
        static CYAN: Sheet = { borderTopColor: "cyan" };
        static DARKBLUE: Sheet = { borderTopColor: "darkblue" };
        static DARKCYAN: Sheet = { borderTopColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { borderTopColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { borderTopColor: "darkgray" };
        static DARKGREEN: Sheet = { borderTopColor: "darkgreen" };
        static DARKGREY: Sheet = { borderTopColor: "darkgrey" };
        static DARKKHAKI: Sheet = { borderTopColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { borderTopColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { borderTopColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { borderTopColor: "darkorange" };
        static DARKORCHID: Sheet = { borderTopColor: "darkorchid" };
        static DARKRED: Sheet = { borderTopColor: "darkred" };
        static DARKSALMON: Sheet = { borderTopColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { borderTopColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { borderTopColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { borderTopColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { borderTopColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { borderTopColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { borderTopColor: "darkviolet" };
        static DEEPPINK: Sheet = { borderTopColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { borderTopColor: "deepskyblue" };
        static DIMGRAY: Sheet = { borderTopColor: "dimgray" };
        static DIMGREY: Sheet = { borderTopColor: "dimgrey" };
        static DODGERBLUE: Sheet = { borderTopColor: "dodgerblue" };
        static FIREBRICK: Sheet = { borderTopColor: "firebrick" };
        static FLORALWHITE: Sheet = { borderTopColor: "floralwhite" };
        static FORESTGREEN: Sheet = { borderTopColor: "forestgreen" };
        static FUCHSIA: Sheet = { borderTopColor: "fuchsia" };
        static GAINSBORO: Sheet = { borderTopColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { borderTopColor: "ghostwhite" };
        static GOLD: Sheet = { borderTopColor: "gold" };
        static GOLDENROD: Sheet = { borderTopColor: "goldenrod" };
        static GRAY: Sheet = { borderTopColor: "gray" };
        static GREEN: Sheet = { borderTopColor: "green" };
        static GREENYELLOW: Sheet = { borderTopColor: "greenyellow" };
        static GREY: Sheet = { borderTopColor: "grey" };
        static HONEYDEW: Sheet = { borderTopColor: "honeydew" };
        static HOTPINK: Sheet = { borderTopColor: "hotpink" };
        static INDIANRED: Sheet = { borderTopColor: "indianred" };
        static INDIGO: Sheet = { borderTopColor: "indigo" };
        static IVORY: Sheet = { borderTopColor: "ivory" };
        static KHAKI: Sheet = { borderTopColor: "khaki" };
        static LAVENDER: Sheet = { borderTopColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { borderTopColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { borderTopColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { borderTopColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { borderTopColor: "lightblue" };
        static LIGHTCORAL: Sheet = { borderTopColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { borderTopColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { borderTopColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { borderTopColor: "lightgray" };
        static LIGHTGREEN: Sheet = { borderTopColor: "lightgreen" };
        static LIGHTGREY: Sheet = { borderTopColor: "lightgrey" };
        static LIGHTPINK: Sheet = { borderTopColor: "lightpink" };
        static LIGHTSALMON: Sheet = { borderTopColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { borderTopColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { borderTopColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { borderTopColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { borderTopColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { borderTopColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { borderTopColor: "lightyellow" };
        static LIME: Sheet = { borderTopColor: "lime" };
        static LIMEGREEN: Sheet = { borderTopColor: "limegreen" };
        static LINEN: Sheet = { borderTopColor: "linen" };
        static MAGENTA: Sheet = { borderTopColor: "magenta" };
        static MAROON: Sheet = { borderTopColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { borderTopColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { borderTopColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { borderTopColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { borderTopColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { borderTopColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { borderTopColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { borderTopColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { borderTopColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { borderTopColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { borderTopColor: "midnightblue" };
        static MINTCREAM: Sheet = { borderTopColor: "mintcream" };
        static MISTYROSE: Sheet = { borderTopColor: "mistyrose" };
        static MOCCASIN: Sheet = { borderTopColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { borderTopColor: "navajowhite" };
        static NAVY: Sheet = { borderTopColor: "navy" };
        static OLDLACE: Sheet = { borderTopColor: "oldlace" };
        static OLIVE: Sheet = { borderTopColor: "olive" };
        static OLIVEDRAB: Sheet = { borderTopColor: "olivedrab" };
        static ORANGE: Sheet = { borderTopColor: "orange" };
        static ORANGERED: Sheet = { borderTopColor: "orangered" };
        static ORCHID: Sheet = { borderTopColor: "orchid" };
        static PALEGOLDENROD: Sheet = { borderTopColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { borderTopColor: "palegreen" };
        static PALETURQUOISE: Sheet = { borderTopColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { borderTopColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { borderTopColor: "papayawhip" };
        static PEACHPUFF: Sheet = { borderTopColor: "peachpuff" };
        static PERU: Sheet = { borderTopColor: "peru" };
        static PINK: Sheet = { borderTopColor: "pink" };
        static PLUM: Sheet = { borderTopColor: "plum" };
        static POWDERBLUE: Sheet = { borderTopColor: "powderblue" };
        static PURPLE: Sheet = { borderTopColor: "purple" };
        static REBECCAPURPLE: Sheet = { borderTopColor: "rebeccapurple" };
        static RED: Sheet = { borderTopColor: "red" };
        static ROSYBROWN: Sheet = { borderTopColor: "rosybrown" };
        static ROYALBLUE: Sheet = { borderTopColor: "royalblue" };
        static SADDLEBROWN: Sheet = { borderTopColor: "saddlebrown" };
        static SALMON: Sheet = { borderTopColor: "salmon" };
        static SANDYBROWN: Sheet = { borderTopColor: "sandybrown" };
        static SEAGREEN: Sheet = { borderTopColor: "seagreen" };
        static SEASHELL: Sheet = { borderTopColor: "seashell" };
        static SIENNA: Sheet = { borderTopColor: "sienna" };
        static SILVER: Sheet = { borderTopColor: "silver" };
        static SKYBLUE: Sheet = { borderTopColor: "skyblue" };
        static SLATEBLUE: Sheet = { borderTopColor: "slateblue" };
        static SLATEGRAY: Sheet = { borderTopColor: "slategray" };
        static SLATEGREY: Sheet = { borderTopColor: "slategrey" };
        static SNOW: Sheet = { borderTopColor: "snow" };
        static SPRINGGREEN: Sheet = { borderTopColor: "springgreen" };
        static STEELBLUE: Sheet = { borderTopColor: "steelblue" };
        static TAN: Sheet = { borderTopColor: "tan" };
        static TEAL: Sheet = { borderTopColor: "teal" };
        static THISTLE: Sheet = { borderTopColor: "thistle" };
        static TOMATO: Sheet = { borderTopColor: "tomato" };
        static TURQUOISE: Sheet = { borderTopColor: "turquoise" };
        static VIOLET: Sheet = { borderTopColor: "violet" };
        static WHEAT: Sheet = { borderTopColor: "wheat" };
        static WHITE: Sheet = { borderTopColor: "white" };
        static WHITESMOKE: Sheet = { borderTopColor: "whitesmoke" };
        static YELLOW: Sheet = { borderTopColor: "yellow" };
        static YELLOWGREEN: Sheet = { borderTopColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { borderTopColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { borderTopColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { borderTopColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { borderTopColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { borderTopColor: "Background" };
        static BUTTONFACE: Sheet = { borderTopColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { borderTopColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { borderTopColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { borderTopColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { borderTopColor: "CaptionText" };
        static GRAYTEXT: Sheet = { borderTopColor: "GrayText" };
        static HIGHLIGHT: Sheet = { borderTopColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { borderTopColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { borderTopColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { borderTopColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { borderTopColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { borderTopColor: "InfoBackground" };
        static INFOTEXT: Sheet = { borderTopColor: "InfoText" };
        static MENU: Sheet = { borderTopColor: "Menu" };
        static MENUTEXT: Sheet = { borderTopColor: "MenuText" };
        static SCROLLBAR: Sheet = { borderTopColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { borderTopColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { borderTopColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { borderTopColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { borderTopColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { borderTopColor: "ThreeDShadow" };
        static WINDOW: Sheet = { borderTopColor: "Window" };
        static WINDOWFRAME: Sheet = { borderTopColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { borderTopColor: "WindowText" };
    }
    export class BorderTopLeftRadius {
        static set = (...params: Param[]): Sheet => ({ borderTopLeftRadius: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ borderTopLeftRadius: Length.X(...params) });
    }
    export class BorderTopRightRadius {
        static set = (...params: Param[]): Sheet => ({ borderTopRightRadius: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ borderTopRightRadius: Length.X(...params) });
    }
    export class BorderTopStyle {
        static set = (...params: Param[]): Sheet => ({ borderTopStyle: buildProperty(params) });
        static NONE: Sheet = { borderTopStyle: "none" };
        static HIDDEN: Sheet = { borderTopStyle: "hidden" };
        static DOTTED: Sheet = { borderTopStyle: "dotted" };
        static DASHED: Sheet = { borderTopStyle: "dashed" };
        static SOLID: Sheet = { borderTopStyle: "solid" };
        static DOUBLE: Sheet = { borderTopStyle: "double" };
        static GROOVE: Sheet = { borderTopStyle: "groove" };
        static RIDGE: Sheet = { borderTopStyle: "ridge" };
        static INSET: Sheet = { borderTopStyle: "inset" };
        static OUTSET: Sheet = { borderTopStyle: "outset" };
    }
    export class BorderTopWidth {
        static set = (...params: Param[]): Sheet => ({ borderTopWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderTopWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderTopWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderTopWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderTopWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderTopWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderTopWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderTopWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderTopWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderTopWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderTopWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderTopWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderTopWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderTopWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderTopWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderTopWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderTopWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderTopWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderTopWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderTopWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderTopWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderTopWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderTopWidth: Length.fr(...params) });
        static THIN: Sheet = { borderTopWidth: "thin" };
        static MEDIUM: Sheet = { borderTopWidth: "medium" };
        static THICK: Sheet = { borderTopWidth: "thick" };
    }
    export class BorderWidth {
        static set = (...params: Param[]): Sheet => ({ borderWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ borderWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ borderWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ borderWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ borderWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ borderWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ borderWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ borderWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ borderWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ borderWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ borderWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ borderWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ borderWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ borderWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ borderWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ borderWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ borderWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ borderWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ borderWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ borderWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ borderWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ borderWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ borderWidth: Length.fr(...params) });
        static THIN: Sheet = { borderWidth: "thin" };
        static MEDIUM: Sheet = { borderWidth: "medium" };
        static THICK: Sheet = { borderWidth: "thick" };
    }
    export class Bottom {
        static set = (...params: Param[]): Sheet => ({ bottom: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ bottom: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ bottom: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ bottom: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ bottom: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ bottom: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ bottom: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ bottom: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ bottom: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ bottom: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ bottom: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ bottom: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ bottom: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ bottom: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ bottom: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ bottom: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ bottom: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ bottom: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ bottom: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ bottom: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ bottom: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ bottom: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ bottom: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ bottom: Length.X(...params) });
        static AUTO: Sheet = { bottom: "auto" };
    }
    export class BoxAlign {
        static set = (...params: Param[]): Sheet => ({ boxAlign: buildProperty(params) });
        static START: Sheet = { boxAlign: "start" };
        static CENTER: Sheet = { boxAlign: "center" };
        static END: Sheet = { boxAlign: "end" };
        static BASELINE: Sheet = { boxAlign: "baseline" };
        static STRETCH: Sheet = { boxAlign: "stretch" };
    }
    export class BoxDecorationBreak {
        static set = (...params: Param[]): Sheet => ({ boxDecorationBreak: buildProperty(params) });
        static SLICE: Sheet = { boxDecorationBreak: "slice" };
        static CLONE: Sheet = { boxDecorationBreak: "clone" };
    }
    export class BoxDirection {
        static set = (...params: Param[]): Sheet => ({ boxDirection: buildProperty(params) });
        static NORMAL: Sheet = { boxDirection: "normal" };
        static REVERSE: Sheet = { boxDirection: "reverse" };
        static INHERIT: Sheet = { boxDirection: "inherit" };
    }
    export class BoxFlex {
        static set = (...params: Param[]): Sheet => ({ boxFlex: buildProperty(params) });
    }
    export class BoxFlexGroup {
        static set = (...params: Param[]): Sheet => ({ boxFlexGroup: buildProperty(params) });
    }
    export class BoxLines {
        static set = (...params: Param[]): Sheet => ({ boxLines: buildProperty(params) });
        static SINGLE: Sheet = { boxLines: "single" };
        static MULTIPLE: Sheet = { boxLines: "multiple" };
    }
    export class BoxOrdinalGroup {
        static set = (...params: Param[]): Sheet => ({ boxOrdinalGroup: buildProperty(params) });
    }
    export class BoxOrient {
        static set = (...params: Param[]): Sheet => ({ boxOrient: buildProperty(params) });
        static HORIZONTAL: Sheet = { boxOrient: "horizontal" };
        static VERTICAL: Sheet = { boxOrient: "vertical" };
        static INLINE_AXIS: Sheet = { boxOrient: "inline-axis" };
        static BLOCK_AXIS: Sheet = { boxOrient: "block-axis" };
        static INHERIT: Sheet = { boxOrient: "inherit" };
    }
    export class BoxPack {
        static set = (...params: Param[]): Sheet => ({ boxPack: buildProperty(params) });
        static START: Sheet = { boxPack: "start" };
        static CENTER: Sheet = { boxPack: "center" };
        static END: Sheet = { boxPack: "end" };
        static JUSTIFY: Sheet = { boxPack: "justify" };
    }
    export class BoxShadow {
        static set = (...params: Param[]): Sheet => ({ boxShadow: buildProperty(params) });
        static NONE: Sheet = { boxShadow: "none" };
        static INSET: Sheet = { boxShadow: "inset" };
        static cap = (...params: number[]): Sheet => ({ boxShadow: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ boxShadow: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ boxShadow: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ boxShadow: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ boxShadow: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ boxShadow: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ boxShadow: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ boxShadow: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ boxShadow: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ boxShadow: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ boxShadow: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ boxShadow: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ boxShadow: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ boxShadow: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ boxShadow: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ boxShadow: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ boxShadow: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ boxShadow: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ boxShadow: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ boxShadow: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ boxShadow: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ boxShadow: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ boxShadow: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ boxShadow: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ boxShadow: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ boxShadow: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ boxShadow: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { boxShadow: "transparent" };
        static ALICEBLUE: Sheet = { boxShadow: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { boxShadow: "antiquewhite" };
        static AQUA: Sheet = { boxShadow: "aqua" };
        static AQUAMARINE: Sheet = { boxShadow: "aquamarine" };
        static AZURE: Sheet = { boxShadow: "azure" };
        static BEIGE: Sheet = { boxShadow: "beige" };
        static BISQUE: Sheet = { boxShadow: "bisque" };
        static BLACK: Sheet = { boxShadow: "black" };
        static BLANCHEDALMOND: Sheet = { boxShadow: "blanchedalmond" };
        static BLUE: Sheet = { boxShadow: "blue" };
        static BLUEVIOLET: Sheet = { boxShadow: "blueviolet" };
        static BROWN: Sheet = { boxShadow: "brown" };
        static BURLYWOOD: Sheet = { boxShadow: "burlywood" };
        static CADETBLUE: Sheet = { boxShadow: "cadetblue" };
        static CHARTREUSE: Sheet = { boxShadow: "chartreuse" };
        static CHOCOLATE: Sheet = { boxShadow: "chocolate" };
        static CORAL: Sheet = { boxShadow: "coral" };
        static CORNFLOWERBLUE: Sheet = { boxShadow: "cornflowerblue" };
        static CORNSILK: Sheet = { boxShadow: "cornsilk" };
        static CRIMSON: Sheet = { boxShadow: "crimson" };
        static CYAN: Sheet = { boxShadow: "cyan" };
        static DARKBLUE: Sheet = { boxShadow: "darkblue" };
        static DARKCYAN: Sheet = { boxShadow: "darkcyan" };
        static DARKGOLDENROD: Sheet = { boxShadow: "darkgoldenrod" };
        static DARKGRAY: Sheet = { boxShadow: "darkgray" };
        static DARKGREEN: Sheet = { boxShadow: "darkgreen" };
        static DARKGREY: Sheet = { boxShadow: "darkgrey" };
        static DARKKHAKI: Sheet = { boxShadow: "darkkhaki" };
        static DARKMAGENTA: Sheet = { boxShadow: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { boxShadow: "darkolivegreen" };
        static DARKORANGE: Sheet = { boxShadow: "darkorange" };
        static DARKORCHID: Sheet = { boxShadow: "darkorchid" };
        static DARKRED: Sheet = { boxShadow: "darkred" };
        static DARKSALMON: Sheet = { boxShadow: "darksalmon" };
        static DARKSEAGREEN: Sheet = { boxShadow: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { boxShadow: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { boxShadow: "darkslategray" };
        static DARKSLATEGREY: Sheet = { boxShadow: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { boxShadow: "darkturquoise" };
        static DARKVIOLET: Sheet = { boxShadow: "darkviolet" };
        static DEEPPINK: Sheet = { boxShadow: "deeppink" };
        static DEEPSKYBLUE: Sheet = { boxShadow: "deepskyblue" };
        static DIMGRAY: Sheet = { boxShadow: "dimgray" };
        static DIMGREY: Sheet = { boxShadow: "dimgrey" };
        static DODGERBLUE: Sheet = { boxShadow: "dodgerblue" };
        static FIREBRICK: Sheet = { boxShadow: "firebrick" };
        static FLORALWHITE: Sheet = { boxShadow: "floralwhite" };
        static FORESTGREEN: Sheet = { boxShadow: "forestgreen" };
        static FUCHSIA: Sheet = { boxShadow: "fuchsia" };
        static GAINSBORO: Sheet = { boxShadow: "gainsboro" };
        static GHOSTWHITE: Sheet = { boxShadow: "ghostwhite" };
        static GOLD: Sheet = { boxShadow: "gold" };
        static GOLDENROD: Sheet = { boxShadow: "goldenrod" };
        static GRAY: Sheet = { boxShadow: "gray" };
        static GREEN: Sheet = { boxShadow: "green" };
        static GREENYELLOW: Sheet = { boxShadow: "greenyellow" };
        static GREY: Sheet = { boxShadow: "grey" };
        static HONEYDEW: Sheet = { boxShadow: "honeydew" };
        static HOTPINK: Sheet = { boxShadow: "hotpink" };
        static INDIANRED: Sheet = { boxShadow: "indianred" };
        static INDIGO: Sheet = { boxShadow: "indigo" };
        static IVORY: Sheet = { boxShadow: "ivory" };
        static KHAKI: Sheet = { boxShadow: "khaki" };
        static LAVENDER: Sheet = { boxShadow: "lavender" };
        static LAVENDERBLUSH: Sheet = { boxShadow: "lavenderblush" };
        static LAWNGREEN: Sheet = { boxShadow: "lawngreen" };
        static LEMONCHIFFON: Sheet = { boxShadow: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { boxShadow: "lightblue" };
        static LIGHTCORAL: Sheet = { boxShadow: "lightcoral" };
        static LIGHTCYAN: Sheet = { boxShadow: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { boxShadow: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { boxShadow: "lightgray" };
        static LIGHTGREEN: Sheet = { boxShadow: "lightgreen" };
        static LIGHTGREY: Sheet = { boxShadow: "lightgrey" };
        static LIGHTPINK: Sheet = { boxShadow: "lightpink" };
        static LIGHTSALMON: Sheet = { boxShadow: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { boxShadow: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { boxShadow: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { boxShadow: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { boxShadow: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { boxShadow: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { boxShadow: "lightyellow" };
        static LIME: Sheet = { boxShadow: "lime" };
        static LIMEGREEN: Sheet = { boxShadow: "limegreen" };
        static LINEN: Sheet = { boxShadow: "linen" };
        static MAGENTA: Sheet = { boxShadow: "magenta" };
        static MAROON: Sheet = { boxShadow: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { boxShadow: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { boxShadow: "mediumblue" };
        static MEDIUMORCHID: Sheet = { boxShadow: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { boxShadow: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { boxShadow: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { boxShadow: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { boxShadow: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { boxShadow: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { boxShadow: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { boxShadow: "midnightblue" };
        static MINTCREAM: Sheet = { boxShadow: "mintcream" };
        static MISTYROSE: Sheet = { boxShadow: "mistyrose" };
        static MOCCASIN: Sheet = { boxShadow: "moccasin" };
        static NAVAJOWHITE: Sheet = { boxShadow: "navajowhite" };
        static NAVY: Sheet = { boxShadow: "navy" };
        static OLDLACE: Sheet = { boxShadow: "oldlace" };
        static OLIVE: Sheet = { boxShadow: "olive" };
        static OLIVEDRAB: Sheet = { boxShadow: "olivedrab" };
        static ORANGE: Sheet = { boxShadow: "orange" };
        static ORANGERED: Sheet = { boxShadow: "orangered" };
        static ORCHID: Sheet = { boxShadow: "orchid" };
        static PALEGOLDENROD: Sheet = { boxShadow: "palegoldenrod" };
        static PALEGREEN: Sheet = { boxShadow: "palegreen" };
        static PALETURQUOISE: Sheet = { boxShadow: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { boxShadow: "palevioletred" };
        static PAPAYAWHIP: Sheet = { boxShadow: "papayawhip" };
        static PEACHPUFF: Sheet = { boxShadow: "peachpuff" };
        static PERU: Sheet = { boxShadow: "peru" };
        static PINK: Sheet = { boxShadow: "pink" };
        static PLUM: Sheet = { boxShadow: "plum" };
        static POWDERBLUE: Sheet = { boxShadow: "powderblue" };
        static PURPLE: Sheet = { boxShadow: "purple" };
        static REBECCAPURPLE: Sheet = { boxShadow: "rebeccapurple" };
        static RED: Sheet = { boxShadow: "red" };
        static ROSYBROWN: Sheet = { boxShadow: "rosybrown" };
        static ROYALBLUE: Sheet = { boxShadow: "royalblue" };
        static SADDLEBROWN: Sheet = { boxShadow: "saddlebrown" };
        static SALMON: Sheet = { boxShadow: "salmon" };
        static SANDYBROWN: Sheet = { boxShadow: "sandybrown" };
        static SEAGREEN: Sheet = { boxShadow: "seagreen" };
        static SEASHELL: Sheet = { boxShadow: "seashell" };
        static SIENNA: Sheet = { boxShadow: "sienna" };
        static SILVER: Sheet = { boxShadow: "silver" };
        static SKYBLUE: Sheet = { boxShadow: "skyblue" };
        static SLATEBLUE: Sheet = { boxShadow: "slateblue" };
        static SLATEGRAY: Sheet = { boxShadow: "slategray" };
        static SLATEGREY: Sheet = { boxShadow: "slategrey" };
        static SNOW: Sheet = { boxShadow: "snow" };
        static SPRINGGREEN: Sheet = { boxShadow: "springgreen" };
        static STEELBLUE: Sheet = { boxShadow: "steelblue" };
        static TAN: Sheet = { boxShadow: "tan" };
        static TEAL: Sheet = { boxShadow: "teal" };
        static THISTLE: Sheet = { boxShadow: "thistle" };
        static TOMATO: Sheet = { boxShadow: "tomato" };
        static TURQUOISE: Sheet = { boxShadow: "turquoise" };
        static VIOLET: Sheet = { boxShadow: "violet" };
        static WHEAT: Sheet = { boxShadow: "wheat" };
        static WHITE: Sheet = { boxShadow: "white" };
        static WHITESMOKE: Sheet = { boxShadow: "whitesmoke" };
        static YELLOW: Sheet = { boxShadow: "yellow" };
        static YELLOWGREEN: Sheet = { boxShadow: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { boxShadow: "currentcolor" };
        static ACTIVEBORDER: Sheet = { boxShadow: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { boxShadow: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { boxShadow: "AppWorkspace" };
        static BACKGROUND: Sheet = { boxShadow: "Background" };
        static BUTTONFACE: Sheet = { boxShadow: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { boxShadow: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { boxShadow: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { boxShadow: "ButtonText" };
        static CAPTIONTEXT: Sheet = { boxShadow: "CaptionText" };
        static GRAYTEXT: Sheet = { boxShadow: "GrayText" };
        static HIGHLIGHT: Sheet = { boxShadow: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { boxShadow: "HighlightText" };
        static INACTIVEBORDER: Sheet = { boxShadow: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { boxShadow: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { boxShadow: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { boxShadow: "InfoBackground" };
        static INFOTEXT: Sheet = { boxShadow: "InfoText" };
        static MENU: Sheet = { boxShadow: "Menu" };
        static MENUTEXT: Sheet = { boxShadow: "MenuText" };
        static SCROLLBAR: Sheet = { boxShadow: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { boxShadow: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { boxShadow: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { boxShadow: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { boxShadow: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { boxShadow: "ThreeDShadow" };
        static WINDOW: Sheet = { boxShadow: "Window" };
        static WINDOWFRAME: Sheet = { boxShadow: "WindowFrame" };
        static WINDOWTEXT: Sheet = { boxShadow: "WindowText" };
    }
    export class BoxSizing {
        static set = (...params: Param[]): Sheet => ({ boxSizing: buildProperty(params) });
        static CONTENT_BOX: Sheet = { boxSizing: "content-box" };
        static BORDER_BOX: Sheet = { boxSizing: "border-box" };
    }
    export class BreakAfter {
        static set = (...params: Param[]): Sheet => ({ breakAfter: buildProperty(params) });
        static AUTO: Sheet = { breakAfter: "auto" };
        static AVOID: Sheet = { breakAfter: "avoid" };
        static AVOID_PAGE: Sheet = { breakAfter: "avoid-page" };
        static PAGE: Sheet = { breakAfter: "page" };
        static LEFT: Sheet = { breakAfter: "left" };
        static RIGHT: Sheet = { breakAfter: "right" };
        static RECTO: Sheet = { breakAfter: "recto" };
        static VERSO: Sheet = { breakAfter: "verso" };
        static AVOID_COLUMN: Sheet = { breakAfter: "avoid-column" };
        static COLUMN: Sheet = { breakAfter: "column" };
        static AVOID_REGION: Sheet = { breakAfter: "avoid-region" };
        static REGION: Sheet = { breakAfter: "region" };
    }
    export class BreakBefore {
        static set = (...params: Param[]): Sheet => ({ breakBefore: buildProperty(params) });
        static AUTO: Sheet = { breakBefore: "auto" };
        static AVOID: Sheet = { breakBefore: "avoid" };
        static AVOID_PAGE: Sheet = { breakBefore: "avoid-page" };
        static PAGE: Sheet = { breakBefore: "page" };
        static LEFT: Sheet = { breakBefore: "left" };
        static RIGHT: Sheet = { breakBefore: "right" };
        static RECTO: Sheet = { breakBefore: "recto" };
        static VERSO: Sheet = { breakBefore: "verso" };
        static AVOID_COLUMN: Sheet = { breakBefore: "avoid-column" };
        static COLUMN: Sheet = { breakBefore: "column" };
        static AVOID_REGION: Sheet = { breakBefore: "avoid-region" };
        static REGION: Sheet = { breakBefore: "region" };
    }
    export class BreakInside {
        static set = (...params: Param[]): Sheet => ({ breakInside: buildProperty(params) });
        static AUTO: Sheet = { breakInside: "auto" };
        static AVOID: Sheet = { breakInside: "avoid" };
        static AVOID_PAGE: Sheet = { breakInside: "avoid-page" };
        static AVOID_COLUMN: Sheet = { breakInside: "avoid-column" };
        static AVOID_REGION: Sheet = { breakInside: "avoid-region" };
    }
    export class CaptionSide {
        static set = (...params: Param[]): Sheet => ({ captionSide: buildProperty(params) });
        static TOP: Sheet = { captionSide: "top" };
        static BOTTOM: Sheet = { captionSide: "bottom" };
        static BLOCK_START: Sheet = { captionSide: "block-start" };
        static BLOCK_END: Sheet = { captionSide: "block-end" };
        static INLINE_START: Sheet = { captionSide: "inline-start" };
        static INLINE_END: Sheet = { captionSide: "inline-end" };
    }
    export class CaretColor {
        static set = (...params: Param[]): Sheet => ({ caretColor: buildProperty(params) });
        static AUTO: Sheet = { caretColor: "auto" };
        static X = (...params: number[]): Sheet => ({ caretColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ caretColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ caretColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ caretColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ caretColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { caretColor: "transparent" };
        static ALICEBLUE: Sheet = { caretColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { caretColor: "antiquewhite" };
        static AQUA: Sheet = { caretColor: "aqua" };
        static AQUAMARINE: Sheet = { caretColor: "aquamarine" };
        static AZURE: Sheet = { caretColor: "azure" };
        static BEIGE: Sheet = { caretColor: "beige" };
        static BISQUE: Sheet = { caretColor: "bisque" };
        static BLACK: Sheet = { caretColor: "black" };
        static BLANCHEDALMOND: Sheet = { caretColor: "blanchedalmond" };
        static BLUE: Sheet = { caretColor: "blue" };
        static BLUEVIOLET: Sheet = { caretColor: "blueviolet" };
        static BROWN: Sheet = { caretColor: "brown" };
        static BURLYWOOD: Sheet = { caretColor: "burlywood" };
        static CADETBLUE: Sheet = { caretColor: "cadetblue" };
        static CHARTREUSE: Sheet = { caretColor: "chartreuse" };
        static CHOCOLATE: Sheet = { caretColor: "chocolate" };
        static CORAL: Sheet = { caretColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { caretColor: "cornflowerblue" };
        static CORNSILK: Sheet = { caretColor: "cornsilk" };
        static CRIMSON: Sheet = { caretColor: "crimson" };
        static CYAN: Sheet = { caretColor: "cyan" };
        static DARKBLUE: Sheet = { caretColor: "darkblue" };
        static DARKCYAN: Sheet = { caretColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { caretColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { caretColor: "darkgray" };
        static DARKGREEN: Sheet = { caretColor: "darkgreen" };
        static DARKGREY: Sheet = { caretColor: "darkgrey" };
        static DARKKHAKI: Sheet = { caretColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { caretColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { caretColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { caretColor: "darkorange" };
        static DARKORCHID: Sheet = { caretColor: "darkorchid" };
        static DARKRED: Sheet = { caretColor: "darkred" };
        static DARKSALMON: Sheet = { caretColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { caretColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { caretColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { caretColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { caretColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { caretColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { caretColor: "darkviolet" };
        static DEEPPINK: Sheet = { caretColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { caretColor: "deepskyblue" };
        static DIMGRAY: Sheet = { caretColor: "dimgray" };
        static DIMGREY: Sheet = { caretColor: "dimgrey" };
        static DODGERBLUE: Sheet = { caretColor: "dodgerblue" };
        static FIREBRICK: Sheet = { caretColor: "firebrick" };
        static FLORALWHITE: Sheet = { caretColor: "floralwhite" };
        static FORESTGREEN: Sheet = { caretColor: "forestgreen" };
        static FUCHSIA: Sheet = { caretColor: "fuchsia" };
        static GAINSBORO: Sheet = { caretColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { caretColor: "ghostwhite" };
        static GOLD: Sheet = { caretColor: "gold" };
        static GOLDENROD: Sheet = { caretColor: "goldenrod" };
        static GRAY: Sheet = { caretColor: "gray" };
        static GREEN: Sheet = { caretColor: "green" };
        static GREENYELLOW: Sheet = { caretColor: "greenyellow" };
        static GREY: Sheet = { caretColor: "grey" };
        static HONEYDEW: Sheet = { caretColor: "honeydew" };
        static HOTPINK: Sheet = { caretColor: "hotpink" };
        static INDIANRED: Sheet = { caretColor: "indianred" };
        static INDIGO: Sheet = { caretColor: "indigo" };
        static IVORY: Sheet = { caretColor: "ivory" };
        static KHAKI: Sheet = { caretColor: "khaki" };
        static LAVENDER: Sheet = { caretColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { caretColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { caretColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { caretColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { caretColor: "lightblue" };
        static LIGHTCORAL: Sheet = { caretColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { caretColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { caretColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { caretColor: "lightgray" };
        static LIGHTGREEN: Sheet = { caretColor: "lightgreen" };
        static LIGHTGREY: Sheet = { caretColor: "lightgrey" };
        static LIGHTPINK: Sheet = { caretColor: "lightpink" };
        static LIGHTSALMON: Sheet = { caretColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { caretColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { caretColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { caretColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { caretColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { caretColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { caretColor: "lightyellow" };
        static LIME: Sheet = { caretColor: "lime" };
        static LIMEGREEN: Sheet = { caretColor: "limegreen" };
        static LINEN: Sheet = { caretColor: "linen" };
        static MAGENTA: Sheet = { caretColor: "magenta" };
        static MAROON: Sheet = { caretColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { caretColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { caretColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { caretColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { caretColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { caretColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { caretColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { caretColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { caretColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { caretColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { caretColor: "midnightblue" };
        static MINTCREAM: Sheet = { caretColor: "mintcream" };
        static MISTYROSE: Sheet = { caretColor: "mistyrose" };
        static MOCCASIN: Sheet = { caretColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { caretColor: "navajowhite" };
        static NAVY: Sheet = { caretColor: "navy" };
        static OLDLACE: Sheet = { caretColor: "oldlace" };
        static OLIVE: Sheet = { caretColor: "olive" };
        static OLIVEDRAB: Sheet = { caretColor: "olivedrab" };
        static ORANGE: Sheet = { caretColor: "orange" };
        static ORANGERED: Sheet = { caretColor: "orangered" };
        static ORCHID: Sheet = { caretColor: "orchid" };
        static PALEGOLDENROD: Sheet = { caretColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { caretColor: "palegreen" };
        static PALETURQUOISE: Sheet = { caretColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { caretColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { caretColor: "papayawhip" };
        static PEACHPUFF: Sheet = { caretColor: "peachpuff" };
        static PERU: Sheet = { caretColor: "peru" };
        static PINK: Sheet = { caretColor: "pink" };
        static PLUM: Sheet = { caretColor: "plum" };
        static POWDERBLUE: Sheet = { caretColor: "powderblue" };
        static PURPLE: Sheet = { caretColor: "purple" };
        static REBECCAPURPLE: Sheet = { caretColor: "rebeccapurple" };
        static RED: Sheet = { caretColor: "red" };
        static ROSYBROWN: Sheet = { caretColor: "rosybrown" };
        static ROYALBLUE: Sheet = { caretColor: "royalblue" };
        static SADDLEBROWN: Sheet = { caretColor: "saddlebrown" };
        static SALMON: Sheet = { caretColor: "salmon" };
        static SANDYBROWN: Sheet = { caretColor: "sandybrown" };
        static SEAGREEN: Sheet = { caretColor: "seagreen" };
        static SEASHELL: Sheet = { caretColor: "seashell" };
        static SIENNA: Sheet = { caretColor: "sienna" };
        static SILVER: Sheet = { caretColor: "silver" };
        static SKYBLUE: Sheet = { caretColor: "skyblue" };
        static SLATEBLUE: Sheet = { caretColor: "slateblue" };
        static SLATEGRAY: Sheet = { caretColor: "slategray" };
        static SLATEGREY: Sheet = { caretColor: "slategrey" };
        static SNOW: Sheet = { caretColor: "snow" };
        static SPRINGGREEN: Sheet = { caretColor: "springgreen" };
        static STEELBLUE: Sheet = { caretColor: "steelblue" };
        static TAN: Sheet = { caretColor: "tan" };
        static TEAL: Sheet = { caretColor: "teal" };
        static THISTLE: Sheet = { caretColor: "thistle" };
        static TOMATO: Sheet = { caretColor: "tomato" };
        static TURQUOISE: Sheet = { caretColor: "turquoise" };
        static VIOLET: Sheet = { caretColor: "violet" };
        static WHEAT: Sheet = { caretColor: "wheat" };
        static WHITE: Sheet = { caretColor: "white" };
        static WHITESMOKE: Sheet = { caretColor: "whitesmoke" };
        static YELLOW: Sheet = { caretColor: "yellow" };
        static YELLOWGREEN: Sheet = { caretColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { caretColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { caretColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { caretColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { caretColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { caretColor: "Background" };
        static BUTTONFACE: Sheet = { caretColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { caretColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { caretColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { caretColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { caretColor: "CaptionText" };
        static GRAYTEXT: Sheet = { caretColor: "GrayText" };
        static HIGHLIGHT: Sheet = { caretColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { caretColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { caretColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { caretColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { caretColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { caretColor: "InfoBackground" };
        static INFOTEXT: Sheet = { caretColor: "InfoText" };
        static MENU: Sheet = { caretColor: "Menu" };
        static MENUTEXT: Sheet = { caretColor: "MenuText" };
        static SCROLLBAR: Sheet = { caretColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { caretColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { caretColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { caretColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { caretColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { caretColor: "ThreeDShadow" };
        static WINDOW: Sheet = { caretColor: "Window" };
        static WINDOWFRAME: Sheet = { caretColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { caretColor: "WindowText" };
    }
    export class Clear {
        static set = (...params: Param[]): Sheet => ({ clear: buildProperty(params) });
        static NONE: Sheet = { clear: "none" };
        static LEFT: Sheet = { clear: "left" };
        static RIGHT: Sheet = { clear: "right" };
        static BOTH: Sheet = { clear: "both" };
        static INLINE_START: Sheet = { clear: "inline-start" };
        static INLINE_END: Sheet = { clear: "inline-end" };
    }
    export class Clip {
        static set = (...params: Param[]): Sheet => ({ clip: buildProperty(params) });
        static AUTO: Sheet = { clip: "auto" };
    }
    export class ClipPath {
        static set = (...params: Param[]): Sheet => ({ clipPath: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ clipPath: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ clipPath: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ clipPath: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ clipPath: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ clipPath: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ clipPath: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ clipPath: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ clipPath: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ clipPath: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ clipPath: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ clipPath: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ clipPath: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ clipPath: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ clipPath: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ clipPath: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ clipPath: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ clipPath: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ clipPath: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ clipPath: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ clipPath: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ clipPath: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ clipPath: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ clipPath: Length.X(...params) });
        static ROUND: Sheet = { clipPath: "round" };
        static CLOSEST_SIDE: Sheet = { clipPath: "closest-side" };
        static FARTHEST_SIDE: Sheet = { clipPath: "farthest-side" };
        static AT: Sheet = { clipPath: "at" };
        static LEFT: Sheet = { clipPath: "left" };
        static CENTER: Sheet = { clipPath: "center" };
        static RIGHT: Sheet = { clipPath: "right" };
        static TOP: Sheet = { clipPath: "top" };
        static BOTTOM: Sheet = { clipPath: "bottom" };
        static NONZERO: Sheet = { clipPath: "nonzero" };
        static EVENODD: Sheet = { clipPath: "evenodd" };
        static BORDER_BOX: Sheet = { clipPath: "border-box" };
        static PADDING_BOX: Sheet = { clipPath: "padding-box" };
        static CONTENT_BOX: Sheet = { clipPath: "content-box" };
        static MARGIN_BOX: Sheet = { clipPath: "margin-box" };
        static FILL_BOX: Sheet = { clipPath: "fill-box" };
        static STROKE_BOX: Sheet = { clipPath: "stroke-box" };
        static VIEW_BOX: Sheet = { clipPath: "view-box" };
        static NONE: Sheet = { clipPath: "none" };
    }
    export class Color {
        static set = (...params: Param[]): Sheet => ({ color: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ color: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ color: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ color: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ color: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ color: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { color: "transparent" };
        static ALICEBLUE: Sheet = { color: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { color: "antiquewhite" };
        static AQUA: Sheet = { color: "aqua" };
        static AQUAMARINE: Sheet = { color: "aquamarine" };
        static AZURE: Sheet = { color: "azure" };
        static BEIGE: Sheet = { color: "beige" };
        static BISQUE: Sheet = { color: "bisque" };
        static BLACK: Sheet = { color: "black" };
        static BLANCHEDALMOND: Sheet = { color: "blanchedalmond" };
        static BLUE: Sheet = { color: "blue" };
        static BLUEVIOLET: Sheet = { color: "blueviolet" };
        static BROWN: Sheet = { color: "brown" };
        static BURLYWOOD: Sheet = { color: "burlywood" };
        static CADETBLUE: Sheet = { color: "cadetblue" };
        static CHARTREUSE: Sheet = { color: "chartreuse" };
        static CHOCOLATE: Sheet = { color: "chocolate" };
        static CORAL: Sheet = { color: "coral" };
        static CORNFLOWERBLUE: Sheet = { color: "cornflowerblue" };
        static CORNSILK: Sheet = { color: "cornsilk" };
        static CRIMSON: Sheet = { color: "crimson" };
        static CYAN: Sheet = { color: "cyan" };
        static DARKBLUE: Sheet = { color: "darkblue" };
        static DARKCYAN: Sheet = { color: "darkcyan" };
        static DARKGOLDENROD: Sheet = { color: "darkgoldenrod" };
        static DARKGRAY: Sheet = { color: "darkgray" };
        static DARKGREEN: Sheet = { color: "darkgreen" };
        static DARKGREY: Sheet = { color: "darkgrey" };
        static DARKKHAKI: Sheet = { color: "darkkhaki" };
        static DARKMAGENTA: Sheet = { color: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { color: "darkolivegreen" };
        static DARKORANGE: Sheet = { color: "darkorange" };
        static DARKORCHID: Sheet = { color: "darkorchid" };
        static DARKRED: Sheet = { color: "darkred" };
        static DARKSALMON: Sheet = { color: "darksalmon" };
        static DARKSEAGREEN: Sheet = { color: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { color: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { color: "darkslategray" };
        static DARKSLATEGREY: Sheet = { color: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { color: "darkturquoise" };
        static DARKVIOLET: Sheet = { color: "darkviolet" };
        static DEEPPINK: Sheet = { color: "deeppink" };
        static DEEPSKYBLUE: Sheet = { color: "deepskyblue" };
        static DIMGRAY: Sheet = { color: "dimgray" };
        static DIMGREY: Sheet = { color: "dimgrey" };
        static DODGERBLUE: Sheet = { color: "dodgerblue" };
        static FIREBRICK: Sheet = { color: "firebrick" };
        static FLORALWHITE: Sheet = { color: "floralwhite" };
        static FORESTGREEN: Sheet = { color: "forestgreen" };
        static FUCHSIA: Sheet = { color: "fuchsia" };
        static GAINSBORO: Sheet = { color: "gainsboro" };
        static GHOSTWHITE: Sheet = { color: "ghostwhite" };
        static GOLD: Sheet = { color: "gold" };
        static GOLDENROD: Sheet = { color: "goldenrod" };
        static GRAY: Sheet = { color: "gray" };
        static GREEN: Sheet = { color: "green" };
        static GREENYELLOW: Sheet = { color: "greenyellow" };
        static GREY: Sheet = { color: "grey" };
        static HONEYDEW: Sheet = { color: "honeydew" };
        static HOTPINK: Sheet = { color: "hotpink" };
        static INDIANRED: Sheet = { color: "indianred" };
        static INDIGO: Sheet = { color: "indigo" };
        static IVORY: Sheet = { color: "ivory" };
        static KHAKI: Sheet = { color: "khaki" };
        static LAVENDER: Sheet = { color: "lavender" };
        static LAVENDERBLUSH: Sheet = { color: "lavenderblush" };
        static LAWNGREEN: Sheet = { color: "lawngreen" };
        static LEMONCHIFFON: Sheet = { color: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { color: "lightblue" };
        static LIGHTCORAL: Sheet = { color: "lightcoral" };
        static LIGHTCYAN: Sheet = { color: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { color: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { color: "lightgray" };
        static LIGHTGREEN: Sheet = { color: "lightgreen" };
        static LIGHTGREY: Sheet = { color: "lightgrey" };
        static LIGHTPINK: Sheet = { color: "lightpink" };
        static LIGHTSALMON: Sheet = { color: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { color: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { color: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { color: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { color: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { color: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { color: "lightyellow" };
        static LIME: Sheet = { color: "lime" };
        static LIMEGREEN: Sheet = { color: "limegreen" };
        static LINEN: Sheet = { color: "linen" };
        static MAGENTA: Sheet = { color: "magenta" };
        static MAROON: Sheet = { color: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { color: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { color: "mediumblue" };
        static MEDIUMORCHID: Sheet = { color: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { color: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { color: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { color: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { color: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { color: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { color: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { color: "midnightblue" };
        static MINTCREAM: Sheet = { color: "mintcream" };
        static MISTYROSE: Sheet = { color: "mistyrose" };
        static MOCCASIN: Sheet = { color: "moccasin" };
        static NAVAJOWHITE: Sheet = { color: "navajowhite" };
        static NAVY: Sheet = { color: "navy" };
        static OLDLACE: Sheet = { color: "oldlace" };
        static OLIVE: Sheet = { color: "olive" };
        static OLIVEDRAB: Sheet = { color: "olivedrab" };
        static ORANGE: Sheet = { color: "orange" };
        static ORANGERED: Sheet = { color: "orangered" };
        static ORCHID: Sheet = { color: "orchid" };
        static PALEGOLDENROD: Sheet = { color: "palegoldenrod" };
        static PALEGREEN: Sheet = { color: "palegreen" };
        static PALETURQUOISE: Sheet = { color: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { color: "palevioletred" };
        static PAPAYAWHIP: Sheet = { color: "papayawhip" };
        static PEACHPUFF: Sheet = { color: "peachpuff" };
        static PERU: Sheet = { color: "peru" };
        static PINK: Sheet = { color: "pink" };
        static PLUM: Sheet = { color: "plum" };
        static POWDERBLUE: Sheet = { color: "powderblue" };
        static PURPLE: Sheet = { color: "purple" };
        static REBECCAPURPLE: Sheet = { color: "rebeccapurple" };
        static RED: Sheet = { color: "red" };
        static ROSYBROWN: Sheet = { color: "rosybrown" };
        static ROYALBLUE: Sheet = { color: "royalblue" };
        static SADDLEBROWN: Sheet = { color: "saddlebrown" };
        static SALMON: Sheet = { color: "salmon" };
        static SANDYBROWN: Sheet = { color: "sandybrown" };
        static SEAGREEN: Sheet = { color: "seagreen" };
        static SEASHELL: Sheet = { color: "seashell" };
        static SIENNA: Sheet = { color: "sienna" };
        static SILVER: Sheet = { color: "silver" };
        static SKYBLUE: Sheet = { color: "skyblue" };
        static SLATEBLUE: Sheet = { color: "slateblue" };
        static SLATEGRAY: Sheet = { color: "slategray" };
        static SLATEGREY: Sheet = { color: "slategrey" };
        static SNOW: Sheet = { color: "snow" };
        static SPRINGGREEN: Sheet = { color: "springgreen" };
        static STEELBLUE: Sheet = { color: "steelblue" };
        static TAN: Sheet = { color: "tan" };
        static TEAL: Sheet = { color: "teal" };
        static THISTLE: Sheet = { color: "thistle" };
        static TOMATO: Sheet = { color: "tomato" };
        static TURQUOISE: Sheet = { color: "turquoise" };
        static VIOLET: Sheet = { color: "violet" };
        static WHEAT: Sheet = { color: "wheat" };
        static WHITE: Sheet = { color: "white" };
        static WHITESMOKE: Sheet = { color: "whitesmoke" };
        static YELLOW: Sheet = { color: "yellow" };
        static YELLOWGREEN: Sheet = { color: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { color: "currentcolor" };
        static ACTIVEBORDER: Sheet = { color: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { color: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { color: "AppWorkspace" };
        static BACKGROUND: Sheet = { color: "Background" };
        static BUTTONFACE: Sheet = { color: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { color: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { color: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { color: "ButtonText" };
        static CAPTIONTEXT: Sheet = { color: "CaptionText" };
        static GRAYTEXT: Sheet = { color: "GrayText" };
        static HIGHLIGHT: Sheet = { color: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { color: "HighlightText" };
        static INACTIVEBORDER: Sheet = { color: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { color: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { color: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { color: "InfoBackground" };
        static INFOTEXT: Sheet = { color: "InfoText" };
        static MENU: Sheet = { color: "Menu" };
        static MENUTEXT: Sheet = { color: "MenuText" };
        static SCROLLBAR: Sheet = { color: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { color: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { color: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { color: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { color: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { color: "ThreeDShadow" };
        static WINDOW: Sheet = { color: "Window" };
        static WINDOWFRAME: Sheet = { color: "WindowFrame" };
        static WINDOWTEXT: Sheet = { color: "WindowText" };
    }
    export class ColorAdjust {
        static set = (...params: Param[]): Sheet => ({ colorAdjust: buildProperty(params) });
        static ECONOMY: Sheet = { colorAdjust: "economy" };
        static EXACT: Sheet = { colorAdjust: "exact" };
    }
    export class ColumnCount {
        static set = (...params: Param[]): Sheet => ({ columnCount: buildProperty(params) });
        static AUTO: Sheet = { columnCount: "auto" };
    }
    export class ColumnFill {
        static set = (...params: Param[]): Sheet => ({ columnFill: buildProperty(params) });
        static AUTO: Sheet = { columnFill: "auto" };
        static BALANCE: Sheet = { columnFill: "balance" };
        static BALANCE_ALL: Sheet = { columnFill: "balance-all" };
    }
    export class ColumnGap {
        static set = (...params: Param[]): Sheet => ({ columnGap: buildProperty(params) });
        static NORMAL: Sheet = { columnGap: "normal" };
        static cap = (...params: number[]): Sheet => ({ columnGap: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ columnGap: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ columnGap: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ columnGap: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ columnGap: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ columnGap: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ columnGap: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ columnGap: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ columnGap: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ columnGap: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ columnGap: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ columnGap: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ columnGap: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ columnGap: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ columnGap: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ columnGap: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ columnGap: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ columnGap: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ columnGap: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ columnGap: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ columnGap: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ columnGap: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ columnGap: Length.X(...params) });
    }
    export class ColumnRule {
        static set = (...params: Param[]): Sheet => ({ columnRule: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ columnRule: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ columnRule: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ columnRule: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ columnRule: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ columnRule: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ columnRule: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ columnRule: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ columnRule: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ columnRule: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ columnRule: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ columnRule: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ columnRule: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ columnRule: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ columnRule: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ columnRule: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ columnRule: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ columnRule: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ columnRule: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ columnRule: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ columnRule: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ columnRule: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ columnRule: Length.fr(...params) });
        static THIN: Sheet = { columnRule: "thin" };
        static MEDIUM: Sheet = { columnRule: "medium" };
        static THICK: Sheet = { columnRule: "thick" };
        static NONE: Sheet = { columnRule: "none" };
        static HIDDEN: Sheet = { columnRule: "hidden" };
        static DOTTED: Sheet = { columnRule: "dotted" };
        static DASHED: Sheet = { columnRule: "dashed" };
        static SOLID: Sheet = { columnRule: "solid" };
        static DOUBLE: Sheet = { columnRule: "double" };
        static GROOVE: Sheet = { columnRule: "groove" };
        static RIDGE: Sheet = { columnRule: "ridge" };
        static INSET: Sheet = { columnRule: "inset" };
        static OUTSET: Sheet = { columnRule: "outset" };
        static X = (...params: number[]): Sheet => ({ columnRule: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ columnRule: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ columnRule: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ columnRule: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ columnRule: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { columnRule: "transparent" };
        static ALICEBLUE: Sheet = { columnRule: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { columnRule: "antiquewhite" };
        static AQUA: Sheet = { columnRule: "aqua" };
        static AQUAMARINE: Sheet = { columnRule: "aquamarine" };
        static AZURE: Sheet = { columnRule: "azure" };
        static BEIGE: Sheet = { columnRule: "beige" };
        static BISQUE: Sheet = { columnRule: "bisque" };
        static BLACK: Sheet = { columnRule: "black" };
        static BLANCHEDALMOND: Sheet = { columnRule: "blanchedalmond" };
        static BLUE: Sheet = { columnRule: "blue" };
        static BLUEVIOLET: Sheet = { columnRule: "blueviolet" };
        static BROWN: Sheet = { columnRule: "brown" };
        static BURLYWOOD: Sheet = { columnRule: "burlywood" };
        static CADETBLUE: Sheet = { columnRule: "cadetblue" };
        static CHARTREUSE: Sheet = { columnRule: "chartreuse" };
        static CHOCOLATE: Sheet = { columnRule: "chocolate" };
        static CORAL: Sheet = { columnRule: "coral" };
        static CORNFLOWERBLUE: Sheet = { columnRule: "cornflowerblue" };
        static CORNSILK: Sheet = { columnRule: "cornsilk" };
        static CRIMSON: Sheet = { columnRule: "crimson" };
        static CYAN: Sheet = { columnRule: "cyan" };
        static DARKBLUE: Sheet = { columnRule: "darkblue" };
        static DARKCYAN: Sheet = { columnRule: "darkcyan" };
        static DARKGOLDENROD: Sheet = { columnRule: "darkgoldenrod" };
        static DARKGRAY: Sheet = { columnRule: "darkgray" };
        static DARKGREEN: Sheet = { columnRule: "darkgreen" };
        static DARKGREY: Sheet = { columnRule: "darkgrey" };
        static DARKKHAKI: Sheet = { columnRule: "darkkhaki" };
        static DARKMAGENTA: Sheet = { columnRule: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { columnRule: "darkolivegreen" };
        static DARKORANGE: Sheet = { columnRule: "darkorange" };
        static DARKORCHID: Sheet = { columnRule: "darkorchid" };
        static DARKRED: Sheet = { columnRule: "darkred" };
        static DARKSALMON: Sheet = { columnRule: "darksalmon" };
        static DARKSEAGREEN: Sheet = { columnRule: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { columnRule: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { columnRule: "darkslategray" };
        static DARKSLATEGREY: Sheet = { columnRule: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { columnRule: "darkturquoise" };
        static DARKVIOLET: Sheet = { columnRule: "darkviolet" };
        static DEEPPINK: Sheet = { columnRule: "deeppink" };
        static DEEPSKYBLUE: Sheet = { columnRule: "deepskyblue" };
        static DIMGRAY: Sheet = { columnRule: "dimgray" };
        static DIMGREY: Sheet = { columnRule: "dimgrey" };
        static DODGERBLUE: Sheet = { columnRule: "dodgerblue" };
        static FIREBRICK: Sheet = { columnRule: "firebrick" };
        static FLORALWHITE: Sheet = { columnRule: "floralwhite" };
        static FORESTGREEN: Sheet = { columnRule: "forestgreen" };
        static FUCHSIA: Sheet = { columnRule: "fuchsia" };
        static GAINSBORO: Sheet = { columnRule: "gainsboro" };
        static GHOSTWHITE: Sheet = { columnRule: "ghostwhite" };
        static GOLD: Sheet = { columnRule: "gold" };
        static GOLDENROD: Sheet = { columnRule: "goldenrod" };
        static GRAY: Sheet = { columnRule: "gray" };
        static GREEN: Sheet = { columnRule: "green" };
        static GREENYELLOW: Sheet = { columnRule: "greenyellow" };
        static GREY: Sheet = { columnRule: "grey" };
        static HONEYDEW: Sheet = { columnRule: "honeydew" };
        static HOTPINK: Sheet = { columnRule: "hotpink" };
        static INDIANRED: Sheet = { columnRule: "indianred" };
        static INDIGO: Sheet = { columnRule: "indigo" };
        static IVORY: Sheet = { columnRule: "ivory" };
        static KHAKI: Sheet = { columnRule: "khaki" };
        static LAVENDER: Sheet = { columnRule: "lavender" };
        static LAVENDERBLUSH: Sheet = { columnRule: "lavenderblush" };
        static LAWNGREEN: Sheet = { columnRule: "lawngreen" };
        static LEMONCHIFFON: Sheet = { columnRule: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { columnRule: "lightblue" };
        static LIGHTCORAL: Sheet = { columnRule: "lightcoral" };
        static LIGHTCYAN: Sheet = { columnRule: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { columnRule: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { columnRule: "lightgray" };
        static LIGHTGREEN: Sheet = { columnRule: "lightgreen" };
        static LIGHTGREY: Sheet = { columnRule: "lightgrey" };
        static LIGHTPINK: Sheet = { columnRule: "lightpink" };
        static LIGHTSALMON: Sheet = { columnRule: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { columnRule: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { columnRule: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { columnRule: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { columnRule: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { columnRule: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { columnRule: "lightyellow" };
        static LIME: Sheet = { columnRule: "lime" };
        static LIMEGREEN: Sheet = { columnRule: "limegreen" };
        static LINEN: Sheet = { columnRule: "linen" };
        static MAGENTA: Sheet = { columnRule: "magenta" };
        static MAROON: Sheet = { columnRule: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { columnRule: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { columnRule: "mediumblue" };
        static MEDIUMORCHID: Sheet = { columnRule: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { columnRule: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { columnRule: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { columnRule: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { columnRule: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { columnRule: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { columnRule: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { columnRule: "midnightblue" };
        static MINTCREAM: Sheet = { columnRule: "mintcream" };
        static MISTYROSE: Sheet = { columnRule: "mistyrose" };
        static MOCCASIN: Sheet = { columnRule: "moccasin" };
        static NAVAJOWHITE: Sheet = { columnRule: "navajowhite" };
        static NAVY: Sheet = { columnRule: "navy" };
        static OLDLACE: Sheet = { columnRule: "oldlace" };
        static OLIVE: Sheet = { columnRule: "olive" };
        static OLIVEDRAB: Sheet = { columnRule: "olivedrab" };
        static ORANGE: Sheet = { columnRule: "orange" };
        static ORANGERED: Sheet = { columnRule: "orangered" };
        static ORCHID: Sheet = { columnRule: "orchid" };
        static PALEGOLDENROD: Sheet = { columnRule: "palegoldenrod" };
        static PALEGREEN: Sheet = { columnRule: "palegreen" };
        static PALETURQUOISE: Sheet = { columnRule: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { columnRule: "palevioletred" };
        static PAPAYAWHIP: Sheet = { columnRule: "papayawhip" };
        static PEACHPUFF: Sheet = { columnRule: "peachpuff" };
        static PERU: Sheet = { columnRule: "peru" };
        static PINK: Sheet = { columnRule: "pink" };
        static PLUM: Sheet = { columnRule: "plum" };
        static POWDERBLUE: Sheet = { columnRule: "powderblue" };
        static PURPLE: Sheet = { columnRule: "purple" };
        static REBECCAPURPLE: Sheet = { columnRule: "rebeccapurple" };
        static RED: Sheet = { columnRule: "red" };
        static ROSYBROWN: Sheet = { columnRule: "rosybrown" };
        static ROYALBLUE: Sheet = { columnRule: "royalblue" };
        static SADDLEBROWN: Sheet = { columnRule: "saddlebrown" };
        static SALMON: Sheet = { columnRule: "salmon" };
        static SANDYBROWN: Sheet = { columnRule: "sandybrown" };
        static SEAGREEN: Sheet = { columnRule: "seagreen" };
        static SEASHELL: Sheet = { columnRule: "seashell" };
        static SIENNA: Sheet = { columnRule: "sienna" };
        static SILVER: Sheet = { columnRule: "silver" };
        static SKYBLUE: Sheet = { columnRule: "skyblue" };
        static SLATEBLUE: Sheet = { columnRule: "slateblue" };
        static SLATEGRAY: Sheet = { columnRule: "slategray" };
        static SLATEGREY: Sheet = { columnRule: "slategrey" };
        static SNOW: Sheet = { columnRule: "snow" };
        static SPRINGGREEN: Sheet = { columnRule: "springgreen" };
        static STEELBLUE: Sheet = { columnRule: "steelblue" };
        static TAN: Sheet = { columnRule: "tan" };
        static TEAL: Sheet = { columnRule: "teal" };
        static THISTLE: Sheet = { columnRule: "thistle" };
        static TOMATO: Sheet = { columnRule: "tomato" };
        static TURQUOISE: Sheet = { columnRule: "turquoise" };
        static VIOLET: Sheet = { columnRule: "violet" };
        static WHEAT: Sheet = { columnRule: "wheat" };
        static WHITE: Sheet = { columnRule: "white" };
        static WHITESMOKE: Sheet = { columnRule: "whitesmoke" };
        static YELLOW: Sheet = { columnRule: "yellow" };
        static YELLOWGREEN: Sheet = { columnRule: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { columnRule: "currentcolor" };
        static ACTIVEBORDER: Sheet = { columnRule: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { columnRule: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { columnRule: "AppWorkspace" };
        static BACKGROUND: Sheet = { columnRule: "Background" };
        static BUTTONFACE: Sheet = { columnRule: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { columnRule: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { columnRule: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { columnRule: "ButtonText" };
        static CAPTIONTEXT: Sheet = { columnRule: "CaptionText" };
        static GRAYTEXT: Sheet = { columnRule: "GrayText" };
        static HIGHLIGHT: Sheet = { columnRule: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { columnRule: "HighlightText" };
        static INACTIVEBORDER: Sheet = { columnRule: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { columnRule: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { columnRule: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { columnRule: "InfoBackground" };
        static INFOTEXT: Sheet = { columnRule: "InfoText" };
        static MENU: Sheet = { columnRule: "Menu" };
        static MENUTEXT: Sheet = { columnRule: "MenuText" };
        static SCROLLBAR: Sheet = { columnRule: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { columnRule: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { columnRule: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { columnRule: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { columnRule: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { columnRule: "ThreeDShadow" };
        static WINDOW: Sheet = { columnRule: "Window" };
        static WINDOWFRAME: Sheet = { columnRule: "WindowFrame" };
        static WINDOWTEXT: Sheet = { columnRule: "WindowText" };
    }
    export class ColumnRuleColor {
        static set = (...params: Param[]): Sheet => ({ columnRuleColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ columnRuleColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ columnRuleColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ columnRuleColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ columnRuleColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ columnRuleColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { columnRuleColor: "transparent" };
        static ALICEBLUE: Sheet = { columnRuleColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { columnRuleColor: "antiquewhite" };
        static AQUA: Sheet = { columnRuleColor: "aqua" };
        static AQUAMARINE: Sheet = { columnRuleColor: "aquamarine" };
        static AZURE: Sheet = { columnRuleColor: "azure" };
        static BEIGE: Sheet = { columnRuleColor: "beige" };
        static BISQUE: Sheet = { columnRuleColor: "bisque" };
        static BLACK: Sheet = { columnRuleColor: "black" };
        static BLANCHEDALMOND: Sheet = { columnRuleColor: "blanchedalmond" };
        static BLUE: Sheet = { columnRuleColor: "blue" };
        static BLUEVIOLET: Sheet = { columnRuleColor: "blueviolet" };
        static BROWN: Sheet = { columnRuleColor: "brown" };
        static BURLYWOOD: Sheet = { columnRuleColor: "burlywood" };
        static CADETBLUE: Sheet = { columnRuleColor: "cadetblue" };
        static CHARTREUSE: Sheet = { columnRuleColor: "chartreuse" };
        static CHOCOLATE: Sheet = { columnRuleColor: "chocolate" };
        static CORAL: Sheet = { columnRuleColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { columnRuleColor: "cornflowerblue" };
        static CORNSILK: Sheet = { columnRuleColor: "cornsilk" };
        static CRIMSON: Sheet = { columnRuleColor: "crimson" };
        static CYAN: Sheet = { columnRuleColor: "cyan" };
        static DARKBLUE: Sheet = { columnRuleColor: "darkblue" };
        static DARKCYAN: Sheet = { columnRuleColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { columnRuleColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { columnRuleColor: "darkgray" };
        static DARKGREEN: Sheet = { columnRuleColor: "darkgreen" };
        static DARKGREY: Sheet = { columnRuleColor: "darkgrey" };
        static DARKKHAKI: Sheet = { columnRuleColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { columnRuleColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { columnRuleColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { columnRuleColor: "darkorange" };
        static DARKORCHID: Sheet = { columnRuleColor: "darkorchid" };
        static DARKRED: Sheet = { columnRuleColor: "darkred" };
        static DARKSALMON: Sheet = { columnRuleColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { columnRuleColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { columnRuleColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { columnRuleColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { columnRuleColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { columnRuleColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { columnRuleColor: "darkviolet" };
        static DEEPPINK: Sheet = { columnRuleColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { columnRuleColor: "deepskyblue" };
        static DIMGRAY: Sheet = { columnRuleColor: "dimgray" };
        static DIMGREY: Sheet = { columnRuleColor: "dimgrey" };
        static DODGERBLUE: Sheet = { columnRuleColor: "dodgerblue" };
        static FIREBRICK: Sheet = { columnRuleColor: "firebrick" };
        static FLORALWHITE: Sheet = { columnRuleColor: "floralwhite" };
        static FORESTGREEN: Sheet = { columnRuleColor: "forestgreen" };
        static FUCHSIA: Sheet = { columnRuleColor: "fuchsia" };
        static GAINSBORO: Sheet = { columnRuleColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { columnRuleColor: "ghostwhite" };
        static GOLD: Sheet = { columnRuleColor: "gold" };
        static GOLDENROD: Sheet = { columnRuleColor: "goldenrod" };
        static GRAY: Sheet = { columnRuleColor: "gray" };
        static GREEN: Sheet = { columnRuleColor: "green" };
        static GREENYELLOW: Sheet = { columnRuleColor: "greenyellow" };
        static GREY: Sheet = { columnRuleColor: "grey" };
        static HONEYDEW: Sheet = { columnRuleColor: "honeydew" };
        static HOTPINK: Sheet = { columnRuleColor: "hotpink" };
        static INDIANRED: Sheet = { columnRuleColor: "indianred" };
        static INDIGO: Sheet = { columnRuleColor: "indigo" };
        static IVORY: Sheet = { columnRuleColor: "ivory" };
        static KHAKI: Sheet = { columnRuleColor: "khaki" };
        static LAVENDER: Sheet = { columnRuleColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { columnRuleColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { columnRuleColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { columnRuleColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { columnRuleColor: "lightblue" };
        static LIGHTCORAL: Sheet = { columnRuleColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { columnRuleColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { columnRuleColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { columnRuleColor: "lightgray" };
        static LIGHTGREEN: Sheet = { columnRuleColor: "lightgreen" };
        static LIGHTGREY: Sheet = { columnRuleColor: "lightgrey" };
        static LIGHTPINK: Sheet = { columnRuleColor: "lightpink" };
        static LIGHTSALMON: Sheet = { columnRuleColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { columnRuleColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { columnRuleColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { columnRuleColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { columnRuleColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { columnRuleColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { columnRuleColor: "lightyellow" };
        static LIME: Sheet = { columnRuleColor: "lime" };
        static LIMEGREEN: Sheet = { columnRuleColor: "limegreen" };
        static LINEN: Sheet = { columnRuleColor: "linen" };
        static MAGENTA: Sheet = { columnRuleColor: "magenta" };
        static MAROON: Sheet = { columnRuleColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { columnRuleColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { columnRuleColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { columnRuleColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { columnRuleColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { columnRuleColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { columnRuleColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { columnRuleColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { columnRuleColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { columnRuleColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { columnRuleColor: "midnightblue" };
        static MINTCREAM: Sheet = { columnRuleColor: "mintcream" };
        static MISTYROSE: Sheet = { columnRuleColor: "mistyrose" };
        static MOCCASIN: Sheet = { columnRuleColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { columnRuleColor: "navajowhite" };
        static NAVY: Sheet = { columnRuleColor: "navy" };
        static OLDLACE: Sheet = { columnRuleColor: "oldlace" };
        static OLIVE: Sheet = { columnRuleColor: "olive" };
        static OLIVEDRAB: Sheet = { columnRuleColor: "olivedrab" };
        static ORANGE: Sheet = { columnRuleColor: "orange" };
        static ORANGERED: Sheet = { columnRuleColor: "orangered" };
        static ORCHID: Sheet = { columnRuleColor: "orchid" };
        static PALEGOLDENROD: Sheet = { columnRuleColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { columnRuleColor: "palegreen" };
        static PALETURQUOISE: Sheet = { columnRuleColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { columnRuleColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { columnRuleColor: "papayawhip" };
        static PEACHPUFF: Sheet = { columnRuleColor: "peachpuff" };
        static PERU: Sheet = { columnRuleColor: "peru" };
        static PINK: Sheet = { columnRuleColor: "pink" };
        static PLUM: Sheet = { columnRuleColor: "plum" };
        static POWDERBLUE: Sheet = { columnRuleColor: "powderblue" };
        static PURPLE: Sheet = { columnRuleColor: "purple" };
        static REBECCAPURPLE: Sheet = { columnRuleColor: "rebeccapurple" };
        static RED: Sheet = { columnRuleColor: "red" };
        static ROSYBROWN: Sheet = { columnRuleColor: "rosybrown" };
        static ROYALBLUE: Sheet = { columnRuleColor: "royalblue" };
        static SADDLEBROWN: Sheet = { columnRuleColor: "saddlebrown" };
        static SALMON: Sheet = { columnRuleColor: "salmon" };
        static SANDYBROWN: Sheet = { columnRuleColor: "sandybrown" };
        static SEAGREEN: Sheet = { columnRuleColor: "seagreen" };
        static SEASHELL: Sheet = { columnRuleColor: "seashell" };
        static SIENNA: Sheet = { columnRuleColor: "sienna" };
        static SILVER: Sheet = { columnRuleColor: "silver" };
        static SKYBLUE: Sheet = { columnRuleColor: "skyblue" };
        static SLATEBLUE: Sheet = { columnRuleColor: "slateblue" };
        static SLATEGRAY: Sheet = { columnRuleColor: "slategray" };
        static SLATEGREY: Sheet = { columnRuleColor: "slategrey" };
        static SNOW: Sheet = { columnRuleColor: "snow" };
        static SPRINGGREEN: Sheet = { columnRuleColor: "springgreen" };
        static STEELBLUE: Sheet = { columnRuleColor: "steelblue" };
        static TAN: Sheet = { columnRuleColor: "tan" };
        static TEAL: Sheet = { columnRuleColor: "teal" };
        static THISTLE: Sheet = { columnRuleColor: "thistle" };
        static TOMATO: Sheet = { columnRuleColor: "tomato" };
        static TURQUOISE: Sheet = { columnRuleColor: "turquoise" };
        static VIOLET: Sheet = { columnRuleColor: "violet" };
        static WHEAT: Sheet = { columnRuleColor: "wheat" };
        static WHITE: Sheet = { columnRuleColor: "white" };
        static WHITESMOKE: Sheet = { columnRuleColor: "whitesmoke" };
        static YELLOW: Sheet = { columnRuleColor: "yellow" };
        static YELLOWGREEN: Sheet = { columnRuleColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { columnRuleColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { columnRuleColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { columnRuleColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { columnRuleColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { columnRuleColor: "Background" };
        static BUTTONFACE: Sheet = { columnRuleColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { columnRuleColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { columnRuleColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { columnRuleColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { columnRuleColor: "CaptionText" };
        static GRAYTEXT: Sheet = { columnRuleColor: "GrayText" };
        static HIGHLIGHT: Sheet = { columnRuleColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { columnRuleColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { columnRuleColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { columnRuleColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { columnRuleColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { columnRuleColor: "InfoBackground" };
        static INFOTEXT: Sheet = { columnRuleColor: "InfoText" };
        static MENU: Sheet = { columnRuleColor: "Menu" };
        static MENUTEXT: Sheet = { columnRuleColor: "MenuText" };
        static SCROLLBAR: Sheet = { columnRuleColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { columnRuleColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { columnRuleColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { columnRuleColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { columnRuleColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { columnRuleColor: "ThreeDShadow" };
        static WINDOW: Sheet = { columnRuleColor: "Window" };
        static WINDOWFRAME: Sheet = { columnRuleColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { columnRuleColor: "WindowText" };
    }
    export class ColumnRuleStyle {
        static set = (...params: Param[]): Sheet => ({ columnRuleStyle: buildProperty(params) });
        static NONE: Sheet = { columnRuleStyle: "none" };
        static HIDDEN: Sheet = { columnRuleStyle: "hidden" };
        static DOTTED: Sheet = { columnRuleStyle: "dotted" };
        static DASHED: Sheet = { columnRuleStyle: "dashed" };
        static SOLID: Sheet = { columnRuleStyle: "solid" };
        static DOUBLE: Sheet = { columnRuleStyle: "double" };
        static GROOVE: Sheet = { columnRuleStyle: "groove" };
        static RIDGE: Sheet = { columnRuleStyle: "ridge" };
        static INSET: Sheet = { columnRuleStyle: "inset" };
        static OUTSET: Sheet = { columnRuleStyle: "outset" };
    }
    export class ColumnRuleWidth {
        static set = (...params: Param[]): Sheet => ({ columnRuleWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ columnRuleWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ columnRuleWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ columnRuleWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ columnRuleWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ columnRuleWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ columnRuleWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ columnRuleWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ columnRuleWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ columnRuleWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ columnRuleWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ columnRuleWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ columnRuleWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ columnRuleWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ columnRuleWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ columnRuleWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ columnRuleWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ columnRuleWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ columnRuleWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ columnRuleWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ columnRuleWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ columnRuleWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ columnRuleWidth: Length.fr(...params) });
        static THIN: Sheet = { columnRuleWidth: "thin" };
        static MEDIUM: Sheet = { columnRuleWidth: "medium" };
        static THICK: Sheet = { columnRuleWidth: "thick" };
    }
    export class ColumnSpan {
        static set = (...params: Param[]): Sheet => ({ columnSpan: buildProperty(params) });
        static NONE: Sheet = { columnSpan: "none" };
        static ALL: Sheet = { columnSpan: "all" };
    }
    export class ColumnWidth {
        static set = (...params: Param[]): Sheet => ({ columnWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ columnWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ columnWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ columnWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ columnWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ columnWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ columnWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ columnWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ columnWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ columnWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ columnWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ columnWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ columnWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ columnWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ columnWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ columnWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ columnWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ columnWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ columnWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ columnWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ columnWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ columnWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ columnWidth: Length.fr(...params) });
        static AUTO: Sheet = { columnWidth: "auto" };
    }
    export class Columns {
        static set = (...params: Param[]): Sheet => ({ columns: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ columns: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ columns: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ columns: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ columns: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ columns: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ columns: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ columns: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ columns: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ columns: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ columns: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ columns: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ columns: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ columns: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ columns: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ columns: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ columns: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ columns: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ columns: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ columns: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ columns: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ columns: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ columns: Length.fr(...params) });
        static AUTO: Sheet = { columns: "auto" };
    }
    export class Contain {
        static set = (...params: Param[]): Sheet => ({ contain: buildProperty(params) });
        static NONE: Sheet = { contain: "none" };
        static STRICT: Sheet = { contain: "strict" };
        static CONTENT: Sheet = { contain: "content" };
        static SIZE: Sheet = { contain: "size" };
        static LAYOUT: Sheet = { contain: "layout" };
        static STYLE: Sheet = { contain: "style" };
        static PAINT: Sheet = { contain: "paint" };
    }
    export class Content {
        static set = (...params: Param[]): Sheet => ({ content: buildProperty(params) });
        static NORMAL: Sheet = { content: "normal" };
        static NONE: Sheet = { content: "none" };
        static X = (...params: number[]): Sheet => ({ content: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ content: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ content: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ content: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ content: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { content: "transparent" };
        static ALICEBLUE: Sheet = { content: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { content: "antiquewhite" };
        static AQUA: Sheet = { content: "aqua" };
        static AQUAMARINE: Sheet = { content: "aquamarine" };
        static AZURE: Sheet = { content: "azure" };
        static BEIGE: Sheet = { content: "beige" };
        static BISQUE: Sheet = { content: "bisque" };
        static BLACK: Sheet = { content: "black" };
        static BLANCHEDALMOND: Sheet = { content: "blanchedalmond" };
        static BLUE: Sheet = { content: "blue" };
        static BLUEVIOLET: Sheet = { content: "blueviolet" };
        static BROWN: Sheet = { content: "brown" };
        static BURLYWOOD: Sheet = { content: "burlywood" };
        static CADETBLUE: Sheet = { content: "cadetblue" };
        static CHARTREUSE: Sheet = { content: "chartreuse" };
        static CHOCOLATE: Sheet = { content: "chocolate" };
        static CORAL: Sheet = { content: "coral" };
        static CORNFLOWERBLUE: Sheet = { content: "cornflowerblue" };
        static CORNSILK: Sheet = { content: "cornsilk" };
        static CRIMSON: Sheet = { content: "crimson" };
        static CYAN: Sheet = { content: "cyan" };
        static DARKBLUE: Sheet = { content: "darkblue" };
        static DARKCYAN: Sheet = { content: "darkcyan" };
        static DARKGOLDENROD: Sheet = { content: "darkgoldenrod" };
        static DARKGRAY: Sheet = { content: "darkgray" };
        static DARKGREEN: Sheet = { content: "darkgreen" };
        static DARKGREY: Sheet = { content: "darkgrey" };
        static DARKKHAKI: Sheet = { content: "darkkhaki" };
        static DARKMAGENTA: Sheet = { content: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { content: "darkolivegreen" };
        static DARKORANGE: Sheet = { content: "darkorange" };
        static DARKORCHID: Sheet = { content: "darkorchid" };
        static DARKRED: Sheet = { content: "darkred" };
        static DARKSALMON: Sheet = { content: "darksalmon" };
        static DARKSEAGREEN: Sheet = { content: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { content: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { content: "darkslategray" };
        static DARKSLATEGREY: Sheet = { content: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { content: "darkturquoise" };
        static DARKVIOLET: Sheet = { content: "darkviolet" };
        static DEEPPINK: Sheet = { content: "deeppink" };
        static DEEPSKYBLUE: Sheet = { content: "deepskyblue" };
        static DIMGRAY: Sheet = { content: "dimgray" };
        static DIMGREY: Sheet = { content: "dimgrey" };
        static DODGERBLUE: Sheet = { content: "dodgerblue" };
        static FIREBRICK: Sheet = { content: "firebrick" };
        static FLORALWHITE: Sheet = { content: "floralwhite" };
        static FORESTGREEN: Sheet = { content: "forestgreen" };
        static FUCHSIA: Sheet = { content: "fuchsia" };
        static GAINSBORO: Sheet = { content: "gainsboro" };
        static GHOSTWHITE: Sheet = { content: "ghostwhite" };
        static GOLD: Sheet = { content: "gold" };
        static GOLDENROD: Sheet = { content: "goldenrod" };
        static GRAY: Sheet = { content: "gray" };
        static GREEN: Sheet = { content: "green" };
        static GREENYELLOW: Sheet = { content: "greenyellow" };
        static GREY: Sheet = { content: "grey" };
        static HONEYDEW: Sheet = { content: "honeydew" };
        static HOTPINK: Sheet = { content: "hotpink" };
        static INDIANRED: Sheet = { content: "indianred" };
        static INDIGO: Sheet = { content: "indigo" };
        static IVORY: Sheet = { content: "ivory" };
        static KHAKI: Sheet = { content: "khaki" };
        static LAVENDER: Sheet = { content: "lavender" };
        static LAVENDERBLUSH: Sheet = { content: "lavenderblush" };
        static LAWNGREEN: Sheet = { content: "lawngreen" };
        static LEMONCHIFFON: Sheet = { content: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { content: "lightblue" };
        static LIGHTCORAL: Sheet = { content: "lightcoral" };
        static LIGHTCYAN: Sheet = { content: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { content: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { content: "lightgray" };
        static LIGHTGREEN: Sheet = { content: "lightgreen" };
        static LIGHTGREY: Sheet = { content: "lightgrey" };
        static LIGHTPINK: Sheet = { content: "lightpink" };
        static LIGHTSALMON: Sheet = { content: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { content: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { content: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { content: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { content: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { content: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { content: "lightyellow" };
        static LIME: Sheet = { content: "lime" };
        static LIMEGREEN: Sheet = { content: "limegreen" };
        static LINEN: Sheet = { content: "linen" };
        static MAGENTA: Sheet = { content: "magenta" };
        static MAROON: Sheet = { content: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { content: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { content: "mediumblue" };
        static MEDIUMORCHID: Sheet = { content: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { content: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { content: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { content: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { content: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { content: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { content: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { content: "midnightblue" };
        static MINTCREAM: Sheet = { content: "mintcream" };
        static MISTYROSE: Sheet = { content: "mistyrose" };
        static MOCCASIN: Sheet = { content: "moccasin" };
        static NAVAJOWHITE: Sheet = { content: "navajowhite" };
        static NAVY: Sheet = { content: "navy" };
        static OLDLACE: Sheet = { content: "oldlace" };
        static OLIVE: Sheet = { content: "olive" };
        static OLIVEDRAB: Sheet = { content: "olivedrab" };
        static ORANGE: Sheet = { content: "orange" };
        static ORANGERED: Sheet = { content: "orangered" };
        static ORCHID: Sheet = { content: "orchid" };
        static PALEGOLDENROD: Sheet = { content: "palegoldenrod" };
        static PALEGREEN: Sheet = { content: "palegreen" };
        static PALETURQUOISE: Sheet = { content: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { content: "palevioletred" };
        static PAPAYAWHIP: Sheet = { content: "papayawhip" };
        static PEACHPUFF: Sheet = { content: "peachpuff" };
        static PERU: Sheet = { content: "peru" };
        static PINK: Sheet = { content: "pink" };
        static PLUM: Sheet = { content: "plum" };
        static POWDERBLUE: Sheet = { content: "powderblue" };
        static PURPLE: Sheet = { content: "purple" };
        static REBECCAPURPLE: Sheet = { content: "rebeccapurple" };
        static RED: Sheet = { content: "red" };
        static ROSYBROWN: Sheet = { content: "rosybrown" };
        static ROYALBLUE: Sheet = { content: "royalblue" };
        static SADDLEBROWN: Sheet = { content: "saddlebrown" };
        static SALMON: Sheet = { content: "salmon" };
        static SANDYBROWN: Sheet = { content: "sandybrown" };
        static SEAGREEN: Sheet = { content: "seagreen" };
        static SEASHELL: Sheet = { content: "seashell" };
        static SIENNA: Sheet = { content: "sienna" };
        static SILVER: Sheet = { content: "silver" };
        static SKYBLUE: Sheet = { content: "skyblue" };
        static SLATEBLUE: Sheet = { content: "slateblue" };
        static SLATEGRAY: Sheet = { content: "slategray" };
        static SLATEGREY: Sheet = { content: "slategrey" };
        static SNOW: Sheet = { content: "snow" };
        static SPRINGGREEN: Sheet = { content: "springgreen" };
        static STEELBLUE: Sheet = { content: "steelblue" };
        static TAN: Sheet = { content: "tan" };
        static TEAL: Sheet = { content: "teal" };
        static THISTLE: Sheet = { content: "thistle" };
        static TOMATO: Sheet = { content: "tomato" };
        static TURQUOISE: Sheet = { content: "turquoise" };
        static VIOLET: Sheet = { content: "violet" };
        static WHEAT: Sheet = { content: "wheat" };
        static WHITE: Sheet = { content: "white" };
        static WHITESMOKE: Sheet = { content: "whitesmoke" };
        static YELLOW: Sheet = { content: "yellow" };
        static YELLOWGREEN: Sheet = { content: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { content: "currentcolor" };
        static ACTIVEBORDER: Sheet = { content: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { content: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { content: "AppWorkspace" };
        static BACKGROUND: Sheet = { content: "Background" };
        static BUTTONFACE: Sheet = { content: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { content: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { content: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { content: "ButtonText" };
        static CAPTIONTEXT: Sheet = { content: "CaptionText" };
        static GRAYTEXT: Sheet = { content: "GrayText" };
        static HIGHLIGHT: Sheet = { content: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { content: "HighlightText" };
        static INACTIVEBORDER: Sheet = { content: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { content: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { content: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { content: "InfoBackground" };
        static INFOTEXT: Sheet = { content: "InfoText" };
        static MENU: Sheet = { content: "Menu" };
        static MENUTEXT: Sheet = { content: "MenuText" };
        static SCROLLBAR: Sheet = { content: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { content: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { content: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { content: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { content: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { content: "ThreeDShadow" };
        static WINDOW: Sheet = { content: "Window" };
        static WINDOWFRAME: Sheet = { content: "WindowFrame" };
        static WINDOWTEXT: Sheet = { content: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ content: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ content: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ content: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ content: Resolution.x(...params) });
        static TO: Sheet = { content: "to" };
        static LEFT: Sheet = { content: "left" };
        static RIGHT: Sheet = { content: "right" };
        static TOP: Sheet = { content: "top" };
        static BOTTOM: Sheet = { content: "bottom" };
        static cap = (...params: number[]): Sheet => ({ content: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ content: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ content: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ content: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ content: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ content: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ content: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ content: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ content: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ content: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ content: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ content: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ content: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ content: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ content: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ content: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ content: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ content: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ content: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ content: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ content: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ content: Length.fr(...params) });
        static CIRCLE: Sheet = { content: "circle" };
        static ELLIPSE: Sheet = { content: "ellipse" };
        static CLOSEST_SIDE: Sheet = { content: "closest-side" };
        static FARTHEST_SIDE: Sheet = { content: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { content: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { content: "farthest-corner" };
        static AT: Sheet = { content: "at" };
        static CENTER: Sheet = { content: "center" };
        static CONTENTS: Sheet = { content: "contents" };
        static OPEN_QUOTE: Sheet = { content: "open-quote" };
        static CLOSE_QUOTE: Sheet = { content: "close-quote" };
        static NO_OPEN_QUOTE: Sheet = { content: "no-open-quote" };
        static NO_CLOSE_QUOTE: Sheet = { content: "no-close-quote" };
        static CONTENT: Sheet = { content: "content" };
        static BEFORE: Sheet = { content: "before" };
        static AFTER: Sheet = { content: "after" };
        static FIRST_LETTER: Sheet = { content: "first-letter" };
        static DOTTED: Sheet = { content: "dotted" };
        static SOLID: Sheet = { content: "solid" };
        static SPACE: Sheet = { content: "space" };
    }
    export class CounterIncrement {
        static set = (...params: Param[]): Sheet => ({ counterIncrement: buildProperty(params) });
        static NONE: Sheet = { counterIncrement: "none" };
    }
    export class CounterReset {
        static set = (...params: Param[]): Sheet => ({ counterReset: buildProperty(params) });
        static NONE: Sheet = { counterReset: "none" };
    }
    export class Cursor {
        static set = (...params: Param[]): Sheet => ({ cursor: buildProperty(params) });
        static AUTO: Sheet = { cursor: "auto" };
        static DEFAULT: Sheet = { cursor: "default" };
        static NONE: Sheet = { cursor: "none" };
        static CONTEXT_MENU: Sheet = { cursor: "context-menu" };
        static HELP: Sheet = { cursor: "help" };
        static POINTER: Sheet = { cursor: "pointer" };
        static PROGRESS: Sheet = { cursor: "progress" };
        static WAIT: Sheet = { cursor: "wait" };
        static CELL: Sheet = { cursor: "cell" };
        static CROSSHAIR: Sheet = { cursor: "crosshair" };
        static TEXT: Sheet = { cursor: "text" };
        static VERTICAL_TEXT: Sheet = { cursor: "vertical-text" };
        static ALIAS: Sheet = { cursor: "alias" };
        static COPY: Sheet = { cursor: "copy" };
        static MOVE: Sheet = { cursor: "move" };
        static NO_DROP: Sheet = { cursor: "no-drop" };
        static NOT_ALLOWED: Sheet = { cursor: "not-allowed" };
        static E_RESIZE: Sheet = { cursor: "e-resize" };
        static N_RESIZE: Sheet = { cursor: "n-resize" };
        static NE_RESIZE: Sheet = { cursor: "ne-resize" };
        static NW_RESIZE: Sheet = { cursor: "nw-resize" };
        static S_RESIZE: Sheet = { cursor: "s-resize" };
        static SE_RESIZE: Sheet = { cursor: "se-resize" };
        static SW_RESIZE: Sheet = { cursor: "sw-resize" };
        static W_RESIZE: Sheet = { cursor: "w-resize" };
        static EW_RESIZE: Sheet = { cursor: "ew-resize" };
        static NS_RESIZE: Sheet = { cursor: "ns-resize" };
        static NESW_RESIZE: Sheet = { cursor: "nesw-resize" };
        static NWSE_RESIZE: Sheet = { cursor: "nwse-resize" };
        static COL_RESIZE: Sheet = { cursor: "col-resize" };
        static ROW_RESIZE: Sheet = { cursor: "row-resize" };
        static ALL_SCROLL: Sheet = { cursor: "all-scroll" };
        static ZOOM_IN: Sheet = { cursor: "zoom-in" };
        static ZOOM_OUT: Sheet = { cursor: "zoom-out" };
        static GRAB: Sheet = { cursor: "grab" };
        static GRABBING: Sheet = { cursor: "grabbing" };
    }
    export class Direction {
        static set = (...params: Param[]): Sheet => ({ direction: buildProperty(params) });
        static LTR: Sheet = { direction: "ltr" };
        static RTL: Sheet = { direction: "rtl" };
    }
    export class Display {
        static set = (...params: Param[]): Sheet => ({ display: buildProperty(params) });
        static BLOCK: Sheet = { display: "block" };
        static INLINE: Sheet = { display: "inline" };
        static RUN_IN: Sheet = { display: "run-in" };
        static FLOW: Sheet = { display: "flow" };
        static FLOW_ROOT: Sheet = { display: "flow-root" };
        static TABLE: Sheet = { display: "table" };
        static FLEX: Sheet = { display: "flex" };
        static GRID: Sheet = { display: "grid" };
        static RUBY: Sheet = { display: "ruby" };
        static LIST_ITEM: Sheet = { display: "list-item" };
        static TABLE_ROW_GROUP: Sheet = { display: "table-row-group" };
        static TABLE_HEADER_GROUP: Sheet = { display: "table-header-group" };
        static TABLE_FOOTER_GROUP: Sheet = { display: "table-footer-group" };
        static TABLE_ROW: Sheet = { display: "table-row" };
        static TABLE_CELL: Sheet = { display: "table-cell" };
        static TABLE_COLUMN_GROUP: Sheet = { display: "table-column-group" };
        static TABLE_COLUMN: Sheet = { display: "table-column" };
        static TABLE_CAPTION: Sheet = { display: "table-caption" };
        static RUBY_BASE: Sheet = { display: "ruby-base" };
        static RUBY_TEXT: Sheet = { display: "ruby-text" };
        static RUBY_BASE_CONTAINER: Sheet = { display: "ruby-base-container" };
        static RUBY_TEXT_CONTAINER: Sheet = { display: "ruby-text-container" };
        static CONTENTS: Sheet = { display: "contents" };
        static NONE: Sheet = { display: "none" };
        static INLINE_BLOCK: Sheet = { display: "inline-block" };
        static INLINE_LIST_ITEM: Sheet = { display: "inline-list-item" };
        static INLINE_TABLE: Sheet = { display: "inline-table" };
        static INLINE_FLEX: Sheet = { display: "inline-flex" };
        static INLINE_GRID: Sheet = { display: "inline-grid" };
    }
    export class EmptyCells {
        static set = (...params: Param[]): Sheet => ({ emptyCells: buildProperty(params) });
        static SHOW: Sheet = { emptyCells: "show" };
        static HIDE: Sheet = { emptyCells: "hide" };
    }
    export class Filter {
        static set = (...params: Param[]): Sheet => ({ filter: buildProperty(params) });
        static NONE: Sheet = { filter: "none" };
        static cap = (...params: number[]): Sheet => ({ filter: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ filter: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ filter: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ filter: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ filter: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ filter: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ filter: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ filter: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ filter: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ filter: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ filter: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ filter: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ filter: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ filter: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ filter: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ filter: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ filter: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ filter: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ filter: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ filter: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ filter: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ filter: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ filter: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ filter: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ filter: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ filter: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ filter: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { filter: "transparent" };
        static ALICEBLUE: Sheet = { filter: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { filter: "antiquewhite" };
        static AQUA: Sheet = { filter: "aqua" };
        static AQUAMARINE: Sheet = { filter: "aquamarine" };
        static AZURE: Sheet = { filter: "azure" };
        static BEIGE: Sheet = { filter: "beige" };
        static BISQUE: Sheet = { filter: "bisque" };
        static BLACK: Sheet = { filter: "black" };
        static BLANCHEDALMOND: Sheet = { filter: "blanchedalmond" };
        static BLUE: Sheet = { filter: "blue" };
        static BLUEVIOLET: Sheet = { filter: "blueviolet" };
        static BROWN: Sheet = { filter: "brown" };
        static BURLYWOOD: Sheet = { filter: "burlywood" };
        static CADETBLUE: Sheet = { filter: "cadetblue" };
        static CHARTREUSE: Sheet = { filter: "chartreuse" };
        static CHOCOLATE: Sheet = { filter: "chocolate" };
        static CORAL: Sheet = { filter: "coral" };
        static CORNFLOWERBLUE: Sheet = { filter: "cornflowerblue" };
        static CORNSILK: Sheet = { filter: "cornsilk" };
        static CRIMSON: Sheet = { filter: "crimson" };
        static CYAN: Sheet = { filter: "cyan" };
        static DARKBLUE: Sheet = { filter: "darkblue" };
        static DARKCYAN: Sheet = { filter: "darkcyan" };
        static DARKGOLDENROD: Sheet = { filter: "darkgoldenrod" };
        static DARKGRAY: Sheet = { filter: "darkgray" };
        static DARKGREEN: Sheet = { filter: "darkgreen" };
        static DARKGREY: Sheet = { filter: "darkgrey" };
        static DARKKHAKI: Sheet = { filter: "darkkhaki" };
        static DARKMAGENTA: Sheet = { filter: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { filter: "darkolivegreen" };
        static DARKORANGE: Sheet = { filter: "darkorange" };
        static DARKORCHID: Sheet = { filter: "darkorchid" };
        static DARKRED: Sheet = { filter: "darkred" };
        static DARKSALMON: Sheet = { filter: "darksalmon" };
        static DARKSEAGREEN: Sheet = { filter: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { filter: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { filter: "darkslategray" };
        static DARKSLATEGREY: Sheet = { filter: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { filter: "darkturquoise" };
        static DARKVIOLET: Sheet = { filter: "darkviolet" };
        static DEEPPINK: Sheet = { filter: "deeppink" };
        static DEEPSKYBLUE: Sheet = { filter: "deepskyblue" };
        static DIMGRAY: Sheet = { filter: "dimgray" };
        static DIMGREY: Sheet = { filter: "dimgrey" };
        static DODGERBLUE: Sheet = { filter: "dodgerblue" };
        static FIREBRICK: Sheet = { filter: "firebrick" };
        static FLORALWHITE: Sheet = { filter: "floralwhite" };
        static FORESTGREEN: Sheet = { filter: "forestgreen" };
        static FUCHSIA: Sheet = { filter: "fuchsia" };
        static GAINSBORO: Sheet = { filter: "gainsboro" };
        static GHOSTWHITE: Sheet = { filter: "ghostwhite" };
        static GOLD: Sheet = { filter: "gold" };
        static GOLDENROD: Sheet = { filter: "goldenrod" };
        static GRAY: Sheet = { filter: "gray" };
        static GREEN: Sheet = { filter: "green" };
        static GREENYELLOW: Sheet = { filter: "greenyellow" };
        static GREY: Sheet = { filter: "grey" };
        static HONEYDEW: Sheet = { filter: "honeydew" };
        static HOTPINK: Sheet = { filter: "hotpink" };
        static INDIANRED: Sheet = { filter: "indianred" };
        static INDIGO: Sheet = { filter: "indigo" };
        static IVORY: Sheet = { filter: "ivory" };
        static KHAKI: Sheet = { filter: "khaki" };
        static LAVENDER: Sheet = { filter: "lavender" };
        static LAVENDERBLUSH: Sheet = { filter: "lavenderblush" };
        static LAWNGREEN: Sheet = { filter: "lawngreen" };
        static LEMONCHIFFON: Sheet = { filter: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { filter: "lightblue" };
        static LIGHTCORAL: Sheet = { filter: "lightcoral" };
        static LIGHTCYAN: Sheet = { filter: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { filter: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { filter: "lightgray" };
        static LIGHTGREEN: Sheet = { filter: "lightgreen" };
        static LIGHTGREY: Sheet = { filter: "lightgrey" };
        static LIGHTPINK: Sheet = { filter: "lightpink" };
        static LIGHTSALMON: Sheet = { filter: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { filter: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { filter: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { filter: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { filter: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { filter: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { filter: "lightyellow" };
        static LIME: Sheet = { filter: "lime" };
        static LIMEGREEN: Sheet = { filter: "limegreen" };
        static LINEN: Sheet = { filter: "linen" };
        static MAGENTA: Sheet = { filter: "magenta" };
        static MAROON: Sheet = { filter: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { filter: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { filter: "mediumblue" };
        static MEDIUMORCHID: Sheet = { filter: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { filter: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { filter: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { filter: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { filter: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { filter: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { filter: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { filter: "midnightblue" };
        static MINTCREAM: Sheet = { filter: "mintcream" };
        static MISTYROSE: Sheet = { filter: "mistyrose" };
        static MOCCASIN: Sheet = { filter: "moccasin" };
        static NAVAJOWHITE: Sheet = { filter: "navajowhite" };
        static NAVY: Sheet = { filter: "navy" };
        static OLDLACE: Sheet = { filter: "oldlace" };
        static OLIVE: Sheet = { filter: "olive" };
        static OLIVEDRAB: Sheet = { filter: "olivedrab" };
        static ORANGE: Sheet = { filter: "orange" };
        static ORANGERED: Sheet = { filter: "orangered" };
        static ORCHID: Sheet = { filter: "orchid" };
        static PALEGOLDENROD: Sheet = { filter: "palegoldenrod" };
        static PALEGREEN: Sheet = { filter: "palegreen" };
        static PALETURQUOISE: Sheet = { filter: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { filter: "palevioletred" };
        static PAPAYAWHIP: Sheet = { filter: "papayawhip" };
        static PEACHPUFF: Sheet = { filter: "peachpuff" };
        static PERU: Sheet = { filter: "peru" };
        static PINK: Sheet = { filter: "pink" };
        static PLUM: Sheet = { filter: "plum" };
        static POWDERBLUE: Sheet = { filter: "powderblue" };
        static PURPLE: Sheet = { filter: "purple" };
        static REBECCAPURPLE: Sheet = { filter: "rebeccapurple" };
        static RED: Sheet = { filter: "red" };
        static ROSYBROWN: Sheet = { filter: "rosybrown" };
        static ROYALBLUE: Sheet = { filter: "royalblue" };
        static SADDLEBROWN: Sheet = { filter: "saddlebrown" };
        static SALMON: Sheet = { filter: "salmon" };
        static SANDYBROWN: Sheet = { filter: "sandybrown" };
        static SEAGREEN: Sheet = { filter: "seagreen" };
        static SEASHELL: Sheet = { filter: "seashell" };
        static SIENNA: Sheet = { filter: "sienna" };
        static SILVER: Sheet = { filter: "silver" };
        static SKYBLUE: Sheet = { filter: "skyblue" };
        static SLATEBLUE: Sheet = { filter: "slateblue" };
        static SLATEGRAY: Sheet = { filter: "slategray" };
        static SLATEGREY: Sheet = { filter: "slategrey" };
        static SNOW: Sheet = { filter: "snow" };
        static SPRINGGREEN: Sheet = { filter: "springgreen" };
        static STEELBLUE: Sheet = { filter: "steelblue" };
        static TAN: Sheet = { filter: "tan" };
        static TEAL: Sheet = { filter: "teal" };
        static THISTLE: Sheet = { filter: "thistle" };
        static TOMATO: Sheet = { filter: "tomato" };
        static TURQUOISE: Sheet = { filter: "turquoise" };
        static VIOLET: Sheet = { filter: "violet" };
        static WHEAT: Sheet = { filter: "wheat" };
        static WHITE: Sheet = { filter: "white" };
        static WHITESMOKE: Sheet = { filter: "whitesmoke" };
        static YELLOW: Sheet = { filter: "yellow" };
        static YELLOWGREEN: Sheet = { filter: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { filter: "currentcolor" };
        static ACTIVEBORDER: Sheet = { filter: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { filter: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { filter: "AppWorkspace" };
        static BACKGROUND: Sheet = { filter: "Background" };
        static BUTTONFACE: Sheet = { filter: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { filter: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { filter: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { filter: "ButtonText" };
        static CAPTIONTEXT: Sheet = { filter: "CaptionText" };
        static GRAYTEXT: Sheet = { filter: "GrayText" };
        static HIGHLIGHT: Sheet = { filter: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { filter: "HighlightText" };
        static INACTIVEBORDER: Sheet = { filter: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { filter: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { filter: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { filter: "InfoBackground" };
        static INFOTEXT: Sheet = { filter: "InfoText" };
        static MENU: Sheet = { filter: "Menu" };
        static MENUTEXT: Sheet = { filter: "MenuText" };
        static SCROLLBAR: Sheet = { filter: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { filter: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { filter: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { filter: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { filter: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { filter: "ThreeDShadow" };
        static WINDOW: Sheet = { filter: "Window" };
        static WINDOWFRAME: Sheet = { filter: "WindowFrame" };
        static WINDOWTEXT: Sheet = { filter: "WindowText" };
    }
    export class Flex {
        static set = (...params: Param[]): Sheet => ({ flex: buildProperty(params) });
        static NONE: Sheet = { flex: "none" };
        static CONTENT: Sheet = { flex: "content" };
        static cap = (...params: number[]): Sheet => ({ flex: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ flex: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ flex: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ flex: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ flex: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ flex: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ flex: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ flex: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ flex: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ flex: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ flex: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ flex: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ flex: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ flex: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ flex: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ flex: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ flex: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ flex: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ flex: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ flex: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ flex: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ flex: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ flex: Length.X(...params) });
        static BORDER_BOX: Sheet = { flex: "border-box" };
        static CONTENT_BOX: Sheet = { flex: "content-box" };
        static AVAILABLE: Sheet = { flex: "available" };
        static MIN_CONTENT: Sheet = { flex: "min-content" };
        static MAX_CONTENT: Sheet = { flex: "max-content" };
        static FIT_CONTENT: Sheet = { flex: "fit-content" };
        static AUTO: Sheet = { flex: "auto" };
    }
    export class FlexBasis {
        static set = (...params: Param[]): Sheet => ({ flexBasis: buildProperty(params) });
        static CONTENT: Sheet = { flexBasis: "content" };
        static cap = (...params: number[]): Sheet => ({ flexBasis: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ flexBasis: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ flexBasis: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ flexBasis: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ flexBasis: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ flexBasis: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ flexBasis: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ flexBasis: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ flexBasis: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ flexBasis: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ flexBasis: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ flexBasis: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ flexBasis: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ flexBasis: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ flexBasis: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ flexBasis: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ flexBasis: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ flexBasis: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ flexBasis: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ flexBasis: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ flexBasis: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ flexBasis: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ flexBasis: Length.X(...params) });
        static BORDER_BOX: Sheet = { flexBasis: "border-box" };
        static CONTENT_BOX: Sheet = { flexBasis: "content-box" };
        static AVAILABLE: Sheet = { flexBasis: "available" };
        static MIN_CONTENT: Sheet = { flexBasis: "min-content" };
        static MAX_CONTENT: Sheet = { flexBasis: "max-content" };
        static FIT_CONTENT: Sheet = { flexBasis: "fit-content" };
        static AUTO: Sheet = { flexBasis: "auto" };
    }
    export class FlexDirection {
        static set = (...params: Param[]): Sheet => ({ flexDirection: buildProperty(params) });
        static ROW: Sheet = { flexDirection: "row" };
        static ROW_REVERSE: Sheet = { flexDirection: "row-reverse" };
        static COLUMN: Sheet = { flexDirection: "column" };
        static COLUMN_REVERSE: Sheet = { flexDirection: "column-reverse" };
    }
    export class FlexFlow {
        static set = (...params: Param[]): Sheet => ({ flexFlow: buildProperty(params) });
        static ROW: Sheet = { flexFlow: "row" };
        static ROW_REVERSE: Sheet = { flexFlow: "row-reverse" };
        static COLUMN: Sheet = { flexFlow: "column" };
        static COLUMN_REVERSE: Sheet = { flexFlow: "column-reverse" };
        static NOWRAP: Sheet = { flexFlow: "nowrap" };
        static WRAP: Sheet = { flexFlow: "wrap" };
        static WRAP_REVERSE: Sheet = { flexFlow: "wrap-reverse" };
    }
    export class FlexGrow {
        static set = (...params: Param[]): Sheet => ({ flexGrow: buildProperty(params) });
    }
    export class FlexShrink {
        static set = (...params: Param[]): Sheet => ({ flexShrink: buildProperty(params) });
    }
    export class FlexWrap {
        static set = (...params: Param[]): Sheet => ({ flexWrap: buildProperty(params) });
        static NOWRAP: Sheet = { flexWrap: "nowrap" };
        static WRAP: Sheet = { flexWrap: "wrap" };
        static WRAP_REVERSE: Sheet = { flexWrap: "wrap-reverse" };
    }
    export class Float {
        static set = (...params: Param[]): Sheet => ({ float: buildProperty(params) });
        static LEFT: Sheet = { float: "left" };
        static RIGHT: Sheet = { float: "right" };
        static NONE: Sheet = { float: "none" };
        static INLINE_START: Sheet = { float: "inline-start" };
        static INLINE_END: Sheet = { float: "inline-end" };
    }
    export class Font {
        static set = (...params: Param[]): Sheet => ({ font: buildProperty(params) });
        static NORMAL: Sheet = { font: "normal" };
        static ITALIC: Sheet = { font: "italic" };
        static OBLIQUE: Sheet = { font: "oblique" };
        static deg = (...params: number[]): Sheet => ({ font: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ font: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ font: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ font: Angle.turn(...params) });
        static SMALL_CAPS: Sheet = { font: "small-caps" };
        static BOLD: Sheet = { font: "bold" };
        static BOLDER: Sheet = { font: "bolder" };
        static LIGHTER: Sheet = { font: "lighter" };
        static ULTRA_CONDENSED: Sheet = { font: "ultra-condensed" };
        static EXTRA_CONDENSED: Sheet = { font: "extra-condensed" };
        static CONDENSED: Sheet = { font: "condensed" };
        static SEMI_CONDENSED: Sheet = { font: "semi-condensed" };
        static SEMI_EXPANDED: Sheet = { font: "semi-expanded" };
        static EXPANDED: Sheet = { font: "expanded" };
        static EXTRA_EXPANDED: Sheet = { font: "extra-expanded" };
        static ULTRA_EXPANDED: Sheet = { font: "ultra-expanded" };
        static X = (...params: number[]): Sheet => ({ font: Length.X(...params) });
        static XX_SMALL: Sheet = { font: "xx-small" };
        static X_SMALL: Sheet = { font: "x-small" };
        static SMALL: Sheet = { font: "small" };
        static MEDIUM: Sheet = { font: "medium" };
        static LARGE: Sheet = { font: "large" };
        static X_LARGE: Sheet = { font: "x-large" };
        static XX_LARGE: Sheet = { font: "xx-large" };
        static LARGER: Sheet = { font: "larger" };
        static SMALLER: Sheet = { font: "smaller" };
        static cap = (...params: number[]): Sheet => ({ font: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ font: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ font: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ font: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ font: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ font: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ font: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ font: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ font: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ font: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ font: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ font: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ font: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ font: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ font: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ font: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ font: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ font: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ font: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ font: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ font: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ font: Length.fr(...params) });
        static SERIF: Sheet = { font: "serif" };
        static SANS_SERIF: Sheet = { font: "sans-serif" };
        static CURSIVE: Sheet = { font: "cursive" };
        static FANTASY: Sheet = { font: "fantasy" };
        static MONOSPACE: Sheet = { font: "monospace" };
        static CAPTION: Sheet = { font: "caption" };
        static ICON: Sheet = { font: "icon" };
        static MENU: Sheet = { font: "menu" };
        static MESSAGE_BOX: Sheet = { font: "message-box" };
        static SMALL_CAPTION: Sheet = { font: "small-caption" };
        static STATUS_BAR: Sheet = { font: "status-bar" };
    }
    export class FontFamily {
        static set = (...params: Param[]): Sheet => ({ fontFamily: buildProperty(params) });
        static SERIF: Sheet = { fontFamily: "serif" };
        static SANS_SERIF: Sheet = { fontFamily: "sans-serif" };
        static CURSIVE: Sheet = { fontFamily: "cursive" };
        static FANTASY: Sheet = { fontFamily: "fantasy" };
        static MONOSPACE: Sheet = { fontFamily: "monospace" };
    }
    export class FontFeatureSettings {
        static set = (...params: Param[]): Sheet => ({ fontFeatureSettings: buildProperty(params) });
        static NORMAL: Sheet = { fontFeatureSettings: "normal" };
        static ON: Sheet = { fontFeatureSettings: "on" };
        static OFF: Sheet = { fontFeatureSettings: "off" };
    }
    export class FontKerning {
        static set = (...params: Param[]): Sheet => ({ fontKerning: buildProperty(params) });
        static AUTO: Sheet = { fontKerning: "auto" };
        static NORMAL: Sheet = { fontKerning: "normal" };
        static NONE: Sheet = { fontKerning: "none" };
    }
    export class FontLanguageOverride {
        static set = (...params: Param[]): Sheet => ({ fontLanguageOverride: buildProperty(params) });
        static NORMAL: Sheet = { fontLanguageOverride: "normal" };
    }
    export class FontOpticalSizing {
        static set = (...params: Param[]): Sheet => ({ fontOpticalSizing: buildProperty(params) });
        static AUTO: Sheet = { fontOpticalSizing: "auto" };
        static NONE: Sheet = { fontOpticalSizing: "none" };
    }
    export class FontVariationSettings {
        static set = (...params: Param[]): Sheet => ({ fontVariationSettings: buildProperty(params) });
        static NORMAL: Sheet = { fontVariationSettings: "normal" };
    }
    export class FontSize {
        static set = (...params: Param[]): Sheet => ({ fontSize: buildProperty(params) });
        static XX_SMALL: Sheet = { fontSize: "xx-small" };
        static X_SMALL: Sheet = { fontSize: "x-small" };
        static SMALL: Sheet = { fontSize: "small" };
        static MEDIUM: Sheet = { fontSize: "medium" };
        static LARGE: Sheet = { fontSize: "large" };
        static X_LARGE: Sheet = { fontSize: "x-large" };
        static XX_LARGE: Sheet = { fontSize: "xx-large" };
        static LARGER: Sheet = { fontSize: "larger" };
        static SMALLER: Sheet = { fontSize: "smaller" };
        static cap = (...params: number[]): Sheet => ({ fontSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ fontSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ fontSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ fontSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ fontSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ fontSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ fontSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ fontSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ fontSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ fontSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ fontSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ fontSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ fontSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ fontSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ fontSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ fontSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ fontSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ fontSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ fontSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ fontSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ fontSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ fontSize: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ fontSize: Length.X(...params) });
    }
    export class FontSizeAdjust {
        static set = (...params: Param[]): Sheet => ({ fontSizeAdjust: buildProperty(params) });
        static NONE: Sheet = { fontSizeAdjust: "none" };
    }
    export class FontStretch {
        static set = (...params: Param[]): Sheet => ({ fontStretch: buildProperty(params) });
        static NORMAL: Sheet = { fontStretch: "normal" };
        static ULTRA_CONDENSED: Sheet = { fontStretch: "ultra-condensed" };
        static EXTRA_CONDENSED: Sheet = { fontStretch: "extra-condensed" };
        static CONDENSED: Sheet = { fontStretch: "condensed" };
        static SEMI_CONDENSED: Sheet = { fontStretch: "semi-condensed" };
        static SEMI_EXPANDED: Sheet = { fontStretch: "semi-expanded" };
        static EXPANDED: Sheet = { fontStretch: "expanded" };
        static EXTRA_EXPANDED: Sheet = { fontStretch: "extra-expanded" };
        static ULTRA_EXPANDED: Sheet = { fontStretch: "ultra-expanded" };
        static X = (...params: number[]): Sheet => ({ fontStretch: Length.X(...params) });
    }
    export class FontStyle {
        static set = (...params: Param[]): Sheet => ({ fontStyle: buildProperty(params) });
        static NORMAL: Sheet = { fontStyle: "normal" };
        static ITALIC: Sheet = { fontStyle: "italic" };
        static OBLIQUE: Sheet = { fontStyle: "oblique" };
        static deg = (...params: number[]): Sheet => ({ fontStyle: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ fontStyle: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ fontStyle: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ fontStyle: Angle.turn(...params) });
    }
    export class FontSynthesis {
        static set = (...params: Param[]): Sheet => ({ fontSynthesis: buildProperty(params) });
        static NONE: Sheet = { fontSynthesis: "none" };
        static WEIGHT: Sheet = { fontSynthesis: "weight" };
        static STYLE: Sheet = { fontSynthesis: "style" };
    }
    export class FontVariant {
        static set = (...params: Param[]): Sheet => ({ fontVariant: buildProperty(params) });
        static NORMAL: Sheet = { fontVariant: "normal" };
        static NONE: Sheet = { fontVariant: "none" };
        static COMMON_LIGATURES: Sheet = { fontVariant: "common-ligatures" };
        static NO_COMMON_LIGATURES: Sheet = { fontVariant: "no-common-ligatures" };
        static DISCRETIONARY_LIGATURES: Sheet = { fontVariant: "discretionary-ligatures" };
        static NO_DISCRETIONARY_LIGATURES: Sheet = { fontVariant: "no-discretionary-ligatures" };
        static HISTORICAL_LIGATURES: Sheet = { fontVariant: "historical-ligatures" };
        static NO_HISTORICAL_LIGATURES: Sheet = { fontVariant: "no-historical-ligatures" };
        static CONTEXTUAL: Sheet = { fontVariant: "contextual" };
        static NO_CONTEXTUAL: Sheet = { fontVariant: "no-contextual" };
        static HISTORICAL_FORMS: Sheet = { fontVariant: "historical-forms" };
        static SMALL_CAPS: Sheet = { fontVariant: "small-caps" };
        static ALL_SMALL_CAPS: Sheet = { fontVariant: "all-small-caps" };
        static PETITE_CAPS: Sheet = { fontVariant: "petite-caps" };
        static ALL_PETITE_CAPS: Sheet = { fontVariant: "all-petite-caps" };
        static UNICASE: Sheet = { fontVariant: "unicase" };
        static TITLING_CAPS: Sheet = { fontVariant: "titling-caps" };
        static LINING_NUMS: Sheet = { fontVariant: "lining-nums" };
        static OLDSTYLE_NUMS: Sheet = { fontVariant: "oldstyle-nums" };
        static PROPORTIONAL_NUMS: Sheet = { fontVariant: "proportional-nums" };
        static TABULAR_NUMS: Sheet = { fontVariant: "tabular-nums" };
        static DIAGONAL_FRACTIONS: Sheet = { fontVariant: "diagonal-fractions" };
        static STACKED_FRACTIONS: Sheet = { fontVariant: "stacked-fractions" };
        static ORDINAL: Sheet = { fontVariant: "ordinal" };
        static SLASHED_ZERO: Sheet = { fontVariant: "slashed-zero" };
        static JIS78: Sheet = { fontVariant: "jis78" };
        static JIS83: Sheet = { fontVariant: "jis83" };
        static JIS90: Sheet = { fontVariant: "jis90" };
        static JIS04: Sheet = { fontVariant: "jis04" };
        static SIMPLIFIED: Sheet = { fontVariant: "simplified" };
        static TRADITIONAL: Sheet = { fontVariant: "traditional" };
        static FULL_WIDTH: Sheet = { fontVariant: "full-width" };
        static PROPORTIONAL_WIDTH: Sheet = { fontVariant: "proportional-width" };
        static RUBY: Sheet = { fontVariant: "ruby" };
    }
    export class FontVariantAlternates {
        static set = (...params: Param[]): Sheet => ({ fontVariantAlternates: buildProperty(params) });
        static NORMAL: Sheet = { fontVariantAlternates: "normal" };
        static HISTORICAL_FORMS: Sheet = { fontVariantAlternates: "historical-forms" };
    }
    export class FontVariantCaps {
        static set = (...params: Param[]): Sheet => ({ fontVariantCaps: buildProperty(params) });
        static NORMAL: Sheet = { fontVariantCaps: "normal" };
        static SMALL_CAPS: Sheet = { fontVariantCaps: "small-caps" };
        static ALL_SMALL_CAPS: Sheet = { fontVariantCaps: "all-small-caps" };
        static PETITE_CAPS: Sheet = { fontVariantCaps: "petite-caps" };
        static ALL_PETITE_CAPS: Sheet = { fontVariantCaps: "all-petite-caps" };
        static UNICASE: Sheet = { fontVariantCaps: "unicase" };
        static TITLING_CAPS: Sheet = { fontVariantCaps: "titling-caps" };
    }
    export class FontVariantEastAsian {
        static set = (...params: Param[]): Sheet => ({ fontVariantEastAsian: buildProperty(params) });
        static NORMAL: Sheet = { fontVariantEastAsian: "normal" };
        static JIS78: Sheet = { fontVariantEastAsian: "jis78" };
        static JIS83: Sheet = { fontVariantEastAsian: "jis83" };
        static JIS90: Sheet = { fontVariantEastAsian: "jis90" };
        static JIS04: Sheet = { fontVariantEastAsian: "jis04" };
        static SIMPLIFIED: Sheet = { fontVariantEastAsian: "simplified" };
        static TRADITIONAL: Sheet = { fontVariantEastAsian: "traditional" };
        static FULL_WIDTH: Sheet = { fontVariantEastAsian: "full-width" };
        static PROPORTIONAL_WIDTH: Sheet = { fontVariantEastAsian: "proportional-width" };
        static RUBY: Sheet = { fontVariantEastAsian: "ruby" };
    }
    export class FontVariantLigatures {
        static set = (...params: Param[]): Sheet => ({ fontVariantLigatures: buildProperty(params) });
        static NORMAL: Sheet = { fontVariantLigatures: "normal" };
        static NONE: Sheet = { fontVariantLigatures: "none" };
        static COMMON_LIGATURES: Sheet = { fontVariantLigatures: "common-ligatures" };
        static NO_COMMON_LIGATURES: Sheet = { fontVariantLigatures: "no-common-ligatures" };
        static DISCRETIONARY_LIGATURES: Sheet = { fontVariantLigatures: "discretionary-ligatures" };
        static NO_DISCRETIONARY_LIGATURES: Sheet = { fontVariantLigatures: "no-discretionary-ligatures" };
        static HISTORICAL_LIGATURES: Sheet = { fontVariantLigatures: "historical-ligatures" };
        static NO_HISTORICAL_LIGATURES: Sheet = { fontVariantLigatures: "no-historical-ligatures" };
        static CONTEXTUAL: Sheet = { fontVariantLigatures: "contextual" };
        static NO_CONTEXTUAL: Sheet = { fontVariantLigatures: "no-contextual" };
    }
    export class FontVariantNumeric {
        static set = (...params: Param[]): Sheet => ({ fontVariantNumeric: buildProperty(params) });
        static NORMAL: Sheet = { fontVariantNumeric: "normal" };
        static LINING_NUMS: Sheet = { fontVariantNumeric: "lining-nums" };
        static OLDSTYLE_NUMS: Sheet = { fontVariantNumeric: "oldstyle-nums" };
        static PROPORTIONAL_NUMS: Sheet = { fontVariantNumeric: "proportional-nums" };
        static TABULAR_NUMS: Sheet = { fontVariantNumeric: "tabular-nums" };
        static DIAGONAL_FRACTIONS: Sheet = { fontVariantNumeric: "diagonal-fractions" };
        static STACKED_FRACTIONS: Sheet = { fontVariantNumeric: "stacked-fractions" };
        static ORDINAL: Sheet = { fontVariantNumeric: "ordinal" };
        static SLASHED_ZERO: Sheet = { fontVariantNumeric: "slashed-zero" };
    }
    export class FontVariantPosition {
        static set = (...params: Param[]): Sheet => ({ fontVariantPosition: buildProperty(params) });
        static NORMAL: Sheet = { fontVariantPosition: "normal" };
        static SUB: Sheet = { fontVariantPosition: "sub" };
        static SUPER: Sheet = { fontVariantPosition: "super" };
    }
    export class FontWeight {
        static set = (...params: Param[]): Sheet => ({ fontWeight: buildProperty(params) });
        static NORMAL: Sheet = { fontWeight: "normal" };
        static BOLD: Sheet = { fontWeight: "bold" };
        static BOLDER: Sheet = { fontWeight: "bolder" };
        static LIGHTER: Sheet = { fontWeight: "lighter" };
    }
    export class Gap {
        static set = (...params: Param[]): Sheet => ({ gap: buildProperty(params) });
        static NORMAL: Sheet = { gap: "normal" };
        static cap = (...params: number[]): Sheet => ({ gap: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ gap: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ gap: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ gap: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ gap: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ gap: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ gap: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ gap: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ gap: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ gap: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ gap: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ gap: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ gap: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ gap: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ gap: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ gap: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ gap: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ gap: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ gap: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ gap: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ gap: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ gap: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ gap: Length.X(...params) });
    }
    export class Grid {
        static set = (...params: Param[]): Sheet => ({ grid: buildProperty(params) });
        static NONE: Sheet = { grid: "none" };
        static cap = (...params: number[]): Sheet => ({ grid: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ grid: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ grid: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ grid: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ grid: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ grid: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ grid: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ grid: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ grid: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ grid: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ grid: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ grid: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ grid: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ grid: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ grid: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ grid: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ grid: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ grid: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ grid: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ grid: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ grid: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ grid: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ grid: Length.X(...params) });
        static MIN_CONTENT: Sheet = { grid: "min-content" };
        static MAX_CONTENT: Sheet = { grid: "max-content" };
        static AUTO: Sheet = { grid: "auto" };
        static AUTO_FILL: Sheet = { grid: "auto-fill" };
        static AUTO_FIT: Sheet = { grid: "auto-fit" };
        static AUTO_FLOW: Sheet = { grid: "auto-flow" };
        static DENSE: Sheet = { grid: "dense" };
    }
    export class GridArea {
        static set = (...params: Param[]): Sheet => ({ gridArea: buildProperty(params) });
        static AUTO: Sheet = { gridArea: "auto" };
        static SPAN: Sheet = { gridArea: "span" };
    }
    export class GridAutoColumns {
        static set = (...params: Param[]): Sheet => ({ gridAutoColumns: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ gridAutoColumns: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ gridAutoColumns: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ gridAutoColumns: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ gridAutoColumns: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ gridAutoColumns: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ gridAutoColumns: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ gridAutoColumns: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ gridAutoColumns: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ gridAutoColumns: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ gridAutoColumns: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ gridAutoColumns: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ gridAutoColumns: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ gridAutoColumns: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ gridAutoColumns: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ gridAutoColumns: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ gridAutoColumns: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ gridAutoColumns: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ gridAutoColumns: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ gridAutoColumns: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ gridAutoColumns: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ gridAutoColumns: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ gridAutoColumns: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ gridAutoColumns: Length.X(...params) });
        static MIN_CONTENT: Sheet = { gridAutoColumns: "min-content" };
        static MAX_CONTENT: Sheet = { gridAutoColumns: "max-content" };
        static AUTO: Sheet = { gridAutoColumns: "auto" };
    }
    export class GridAutoFlow {
        static set = (...params: Param[]): Sheet => ({ gridAutoFlow: buildProperty(params) });
        static ROW: Sheet = { gridAutoFlow: "row" };
        static COLUMN: Sheet = { gridAutoFlow: "column" };
        static DENSE: Sheet = { gridAutoFlow: "dense" };
    }
    export class GridAutoRows {
        static set = (...params: Param[]): Sheet => ({ gridAutoRows: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ gridAutoRows: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ gridAutoRows: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ gridAutoRows: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ gridAutoRows: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ gridAutoRows: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ gridAutoRows: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ gridAutoRows: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ gridAutoRows: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ gridAutoRows: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ gridAutoRows: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ gridAutoRows: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ gridAutoRows: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ gridAutoRows: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ gridAutoRows: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ gridAutoRows: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ gridAutoRows: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ gridAutoRows: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ gridAutoRows: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ gridAutoRows: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ gridAutoRows: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ gridAutoRows: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ gridAutoRows: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ gridAutoRows: Length.X(...params) });
        static MIN_CONTENT: Sheet = { gridAutoRows: "min-content" };
        static MAX_CONTENT: Sheet = { gridAutoRows: "max-content" };
        static AUTO: Sheet = { gridAutoRows: "auto" };
    }
    export class GridColumn {
        static set = (...params: Param[]): Sheet => ({ gridColumn: buildProperty(params) });
        static AUTO: Sheet = { gridColumn: "auto" };
        static SPAN: Sheet = { gridColumn: "span" };
    }
    export class GridColumnEnd {
        static set = (...params: Param[]): Sheet => ({ gridColumnEnd: buildProperty(params) });
        static AUTO: Sheet = { gridColumnEnd: "auto" };
        static SPAN: Sheet = { gridColumnEnd: "span" };
    }
    export class GridColumnGap {
        static set = (...params: Param[]): Sheet => ({ gridColumnGap: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ gridColumnGap: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ gridColumnGap: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ gridColumnGap: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ gridColumnGap: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ gridColumnGap: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ gridColumnGap: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ gridColumnGap: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ gridColumnGap: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ gridColumnGap: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ gridColumnGap: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ gridColumnGap: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ gridColumnGap: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ gridColumnGap: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ gridColumnGap: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ gridColumnGap: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ gridColumnGap: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ gridColumnGap: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ gridColumnGap: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ gridColumnGap: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ gridColumnGap: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ gridColumnGap: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ gridColumnGap: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ gridColumnGap: Length.X(...params) });
    }
    export class GridColumnStart {
        static set = (...params: Param[]): Sheet => ({ gridColumnStart: buildProperty(params) });
        static AUTO: Sheet = { gridColumnStart: "auto" };
        static SPAN: Sheet = { gridColumnStart: "span" };
    }
    export class GridGap {
        static set = (...params: Param[]): Sheet => ({ gridGap: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ gridGap: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ gridGap: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ gridGap: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ gridGap: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ gridGap: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ gridGap: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ gridGap: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ gridGap: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ gridGap: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ gridGap: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ gridGap: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ gridGap: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ gridGap: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ gridGap: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ gridGap: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ gridGap: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ gridGap: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ gridGap: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ gridGap: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ gridGap: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ gridGap: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ gridGap: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ gridGap: Length.X(...params) });
    }
    export class GridRow {
        static set = (...params: Param[]): Sheet => ({ gridRow: buildProperty(params) });
        static AUTO: Sheet = { gridRow: "auto" };
        static SPAN: Sheet = { gridRow: "span" };
    }
    export class GridRowEnd {
        static set = (...params: Param[]): Sheet => ({ gridRowEnd: buildProperty(params) });
        static AUTO: Sheet = { gridRowEnd: "auto" };
        static SPAN: Sheet = { gridRowEnd: "span" };
    }
    export class GridRowGap {
        static set = (...params: Param[]): Sheet => ({ gridRowGap: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ gridRowGap: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ gridRowGap: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ gridRowGap: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ gridRowGap: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ gridRowGap: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ gridRowGap: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ gridRowGap: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ gridRowGap: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ gridRowGap: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ gridRowGap: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ gridRowGap: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ gridRowGap: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ gridRowGap: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ gridRowGap: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ gridRowGap: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ gridRowGap: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ gridRowGap: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ gridRowGap: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ gridRowGap: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ gridRowGap: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ gridRowGap: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ gridRowGap: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ gridRowGap: Length.X(...params) });
    }
    export class GridRowStart {
        static set = (...params: Param[]): Sheet => ({ gridRowStart: buildProperty(params) });
        static AUTO: Sheet = { gridRowStart: "auto" };
        static SPAN: Sheet = { gridRowStart: "span" };
    }
    export class GridTemplate {
        static set = (...params: Param[]): Sheet => ({ gridTemplate: buildProperty(params) });
        static NONE: Sheet = { gridTemplate: "none" };
        static cap = (...params: number[]): Sheet => ({ gridTemplate: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ gridTemplate: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ gridTemplate: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ gridTemplate: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ gridTemplate: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ gridTemplate: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ gridTemplate: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ gridTemplate: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ gridTemplate: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ gridTemplate: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ gridTemplate: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ gridTemplate: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ gridTemplate: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ gridTemplate: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ gridTemplate: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ gridTemplate: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ gridTemplate: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ gridTemplate: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ gridTemplate: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ gridTemplate: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ gridTemplate: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ gridTemplate: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ gridTemplate: Length.X(...params) });
        static MIN_CONTENT: Sheet = { gridTemplate: "min-content" };
        static MAX_CONTENT: Sheet = { gridTemplate: "max-content" };
        static AUTO: Sheet = { gridTemplate: "auto" };
        static AUTO_FILL: Sheet = { gridTemplate: "auto-fill" };
        static AUTO_FIT: Sheet = { gridTemplate: "auto-fit" };
    }
    export class GridTemplateAreas {
        static set = (...params: Param[]): Sheet => ({ gridTemplateAreas: buildProperty(params) });
        static NONE: Sheet = { gridTemplateAreas: "none" };
    }
    export class GridTemplateColumns {
        static set = (...params: Param[]): Sheet => ({ gridTemplateColumns: buildProperty(params) });
        static NONE: Sheet = { gridTemplateColumns: "none" };
        static cap = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ gridTemplateColumns: Length.X(...params) });
        static MIN_CONTENT: Sheet = { gridTemplateColumns: "min-content" };
        static MAX_CONTENT: Sheet = { gridTemplateColumns: "max-content" };
        static AUTO: Sheet = { gridTemplateColumns: "auto" };
        static AUTO_FILL: Sheet = { gridTemplateColumns: "auto-fill" };
        static AUTO_FIT: Sheet = { gridTemplateColumns: "auto-fit" };
    }
    export class GridTemplateRows {
        static set = (...params: Param[]): Sheet => ({ gridTemplateRows: buildProperty(params) });
        static NONE: Sheet = { gridTemplateRows: "none" };
        static cap = (...params: number[]): Sheet => ({ gridTemplateRows: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ gridTemplateRows: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ gridTemplateRows: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ gridTemplateRows: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ gridTemplateRows: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ gridTemplateRows: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ gridTemplateRows: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ gridTemplateRows: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ gridTemplateRows: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ gridTemplateRows: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ gridTemplateRows: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ gridTemplateRows: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ gridTemplateRows: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ gridTemplateRows: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ gridTemplateRows: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ gridTemplateRows: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ gridTemplateRows: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ gridTemplateRows: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ gridTemplateRows: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ gridTemplateRows: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ gridTemplateRows: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ gridTemplateRows: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ gridTemplateRows: Length.X(...params) });
        static MIN_CONTENT: Sheet = { gridTemplateRows: "min-content" };
        static MAX_CONTENT: Sheet = { gridTemplateRows: "max-content" };
        static AUTO: Sheet = { gridTemplateRows: "auto" };
        static AUTO_FILL: Sheet = { gridTemplateRows: "auto-fill" };
        static AUTO_FIT: Sheet = { gridTemplateRows: "auto-fit" };
    }
    export class HangingPunctuation {
        static set = (...params: Param[]): Sheet => ({ hangingPunctuation: buildProperty(params) });
        static NONE: Sheet = { hangingPunctuation: "none" };
        static FIRST: Sheet = { hangingPunctuation: "first" };
        static FORCE_END: Sheet = { hangingPunctuation: "force-end" };
        static ALLOW_END: Sheet = { hangingPunctuation: "allow-end" };
        static LAST: Sheet = { hangingPunctuation: "last" };
    }
    export class Height {
        static set = (...params: Param[]): Sheet => ({ height: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ height: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ height: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ height: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ height: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ height: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ height: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ height: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ height: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ height: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ height: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ height: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ height: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ height: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ height: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ height: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ height: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ height: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ height: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ height: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ height: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ height: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ height: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ height: Length.X(...params) });
        static BORDER_BOX: Sheet = { height: "border-box" };
        static CONTENT_BOX: Sheet = { height: "content-box" };
        static AVAILABLE: Sheet = { height: "available" };
        static MIN_CONTENT: Sheet = { height: "min-content" };
        static MAX_CONTENT: Sheet = { height: "max-content" };
        static FIT_CONTENT: Sheet = { height: "fit-content" };
        static AUTO: Sheet = { height: "auto" };
    }
    export class Hyphens {
        static set = (...params: Param[]): Sheet => ({ hyphens: buildProperty(params) });
        static NONE: Sheet = { hyphens: "none" };
        static MANUAL: Sheet = { hyphens: "manual" };
        static AUTO: Sheet = { hyphens: "auto" };
    }
    export class ImageOrientation {
        static set = (...params: Param[]): Sheet => ({ imageOrientation: buildProperty(params) });
        static FROM_IMAGE: Sheet = { imageOrientation: "from-image" };
        static deg = (...params: number[]): Sheet => ({ imageOrientation: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ imageOrientation: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ imageOrientation: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ imageOrientation: Angle.turn(...params) });
        static FLIP: Sheet = { imageOrientation: "flip" };
    }
    export class ImageRendering {
        static set = (...params: Param[]): Sheet => ({ imageRendering: buildProperty(params) });
        static AUTO: Sheet = { imageRendering: "auto" };
        static CRISP_EDGES: Sheet = { imageRendering: "crisp-edges" };
        static PIXELATED: Sheet = { imageRendering: "pixelated" };
    }
    export class ImageResolution {
        static set = (...params: Param[]): Sheet => ({ imageResolution: buildProperty(params) });
        static FROM_IMAGE: Sheet = { imageResolution: "from-image" };
        static dpi = (...params: number[]): Sheet => ({ imageResolution: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ imageResolution: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ imageResolution: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ imageResolution: Resolution.x(...params) });
        static SNAP: Sheet = { imageResolution: "snap" };
    }
    export class ImeMode {
        static set = (...params: Param[]): Sheet => ({ imeMode: buildProperty(params) });
        static AUTO: Sheet = { imeMode: "auto" };
        static NORMAL: Sheet = { imeMode: "normal" };
        static ACTIVE: Sheet = { imeMode: "active" };
        static INACTIVE: Sheet = { imeMode: "inactive" };
        static DISABLED: Sheet = { imeMode: "disabled" };
    }
    export class InitialLetter {
        static set = (...params: Param[]): Sheet => ({ initialLetter: buildProperty(params) });
        static NORMAL: Sheet = { initialLetter: "normal" };
    }
    export class InitialLetterAlign {
        static set = (...params: Param[]): Sheet => ({ initialLetterAlign: buildProperty(params) });
        static AUTO: Sheet = { initialLetterAlign: "auto" };
        static ALPHABETIC: Sheet = { initialLetterAlign: "alphabetic" };
        static HANGING: Sheet = { initialLetterAlign: "hanging" };
        static IDEOGRAPHIC: Sheet = { initialLetterAlign: "ideographic" };
    }
    export class InlineSize {
        static set = (...params: Param[]): Sheet => ({ inlineSize: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ inlineSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ inlineSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ inlineSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ inlineSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ inlineSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ inlineSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ inlineSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ inlineSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ inlineSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ inlineSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ inlineSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ inlineSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ inlineSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ inlineSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ inlineSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ inlineSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ inlineSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ inlineSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ inlineSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ inlineSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ inlineSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ inlineSize: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ inlineSize: Length.X(...params) });
        static BORDER_BOX: Sheet = { inlineSize: "border-box" };
        static CONTENT_BOX: Sheet = { inlineSize: "content-box" };
        static AVAILABLE: Sheet = { inlineSize: "available" };
        static MIN_CONTENT: Sheet = { inlineSize: "min-content" };
        static MAX_CONTENT: Sheet = { inlineSize: "max-content" };
        static FIT_CONTENT: Sheet = { inlineSize: "fit-content" };
        static AUTO: Sheet = { inlineSize: "auto" };
    }
    export class InsetBlockEnd {
        static set = (...params: Param[]): Sheet => ({ insetBlockEnd: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ insetBlockEnd: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ insetBlockEnd: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ insetBlockEnd: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ insetBlockEnd: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ insetBlockEnd: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ insetBlockEnd: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ insetBlockEnd: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ insetBlockEnd: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ insetBlockEnd: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ insetBlockEnd: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ insetBlockEnd: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ insetBlockEnd: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ insetBlockEnd: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ insetBlockEnd: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ insetBlockEnd: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ insetBlockEnd: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ insetBlockEnd: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ insetBlockEnd: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ insetBlockEnd: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ insetBlockEnd: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ insetBlockEnd: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ insetBlockEnd: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ insetBlockEnd: Length.X(...params) });
        static AUTO: Sheet = { insetBlockEnd: "auto" };
    }
    export class InsetBlockStart {
        static set = (...params: Param[]): Sheet => ({ insetBlockStart: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ insetBlockStart: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ insetBlockStart: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ insetBlockStart: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ insetBlockStart: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ insetBlockStart: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ insetBlockStart: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ insetBlockStart: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ insetBlockStart: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ insetBlockStart: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ insetBlockStart: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ insetBlockStart: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ insetBlockStart: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ insetBlockStart: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ insetBlockStart: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ insetBlockStart: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ insetBlockStart: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ insetBlockStart: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ insetBlockStart: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ insetBlockStart: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ insetBlockStart: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ insetBlockStart: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ insetBlockStart: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ insetBlockStart: Length.X(...params) });
        static AUTO: Sheet = { insetBlockStart: "auto" };
    }
    export class InsetInlineEnd {
        static set = (...params: Param[]): Sheet => ({ insetInlineEnd: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ insetInlineEnd: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ insetInlineEnd: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ insetInlineEnd: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ insetInlineEnd: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ insetInlineEnd: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ insetInlineEnd: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ insetInlineEnd: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ insetInlineEnd: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ insetInlineEnd: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ insetInlineEnd: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ insetInlineEnd: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ insetInlineEnd: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ insetInlineEnd: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ insetInlineEnd: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ insetInlineEnd: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ insetInlineEnd: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ insetInlineEnd: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ insetInlineEnd: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ insetInlineEnd: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ insetInlineEnd: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ insetInlineEnd: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ insetInlineEnd: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ insetInlineEnd: Length.X(...params) });
        static AUTO: Sheet = { insetInlineEnd: "auto" };
    }
    export class InsetInlineStart {
        static set = (...params: Param[]): Sheet => ({ insetInlineStart: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ insetInlineStart: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ insetInlineStart: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ insetInlineStart: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ insetInlineStart: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ insetInlineStart: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ insetInlineStart: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ insetInlineStart: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ insetInlineStart: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ insetInlineStart: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ insetInlineStart: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ insetInlineStart: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ insetInlineStart: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ insetInlineStart: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ insetInlineStart: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ insetInlineStart: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ insetInlineStart: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ insetInlineStart: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ insetInlineStart: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ insetInlineStart: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ insetInlineStart: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ insetInlineStart: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ insetInlineStart: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ insetInlineStart: Length.X(...params) });
        static AUTO: Sheet = { insetInlineStart: "auto" };
    }
    export class Isolation {
        static set = (...params: Param[]): Sheet => ({ isolation: buildProperty(params) });
        static AUTO: Sheet = { isolation: "auto" };
        static ISOLATE: Sheet = { isolation: "isolate" };
    }
    export class JustifyContent {
        static set = (...params: Param[]): Sheet => ({ justifyContent: buildProperty(params) });
        static NORMAL: Sheet = { justifyContent: "normal" };
        static SPACE_BETWEEN: Sheet = { justifyContent: "space-between" };
        static SPACE_AROUND: Sheet = { justifyContent: "space-around" };
        static SPACE_EVENLY: Sheet = { justifyContent: "space-evenly" };
        static STRETCH: Sheet = { justifyContent: "stretch" };
        static UNSAFE: Sheet = { justifyContent: "unsafe" };
        static SAFE: Sheet = { justifyContent: "safe" };
        static CENTER: Sheet = { justifyContent: "center" };
        static START: Sheet = { justifyContent: "start" };
        static END: Sheet = { justifyContent: "end" };
        static FLEX_START: Sheet = { justifyContent: "flex-start" };
        static FLEX_END: Sheet = { justifyContent: "flex-end" };
        static LEFT: Sheet = { justifyContent: "left" };
        static RIGHT: Sheet = { justifyContent: "right" };
    }
    export class JustifyItems {
        static set = (...params: Param[]): Sheet => ({ justifyItems: buildProperty(params) });
        static NORMAL: Sheet = { justifyItems: "normal" };
        static STRETCH: Sheet = { justifyItems: "stretch" };
        static FIRST: Sheet = { justifyItems: "first" };
        static LAST: Sheet = { justifyItems: "last" };
        static BASELINE: Sheet = { justifyItems: "baseline" };
        static UNSAFE: Sheet = { justifyItems: "unsafe" };
        static SAFE: Sheet = { justifyItems: "safe" };
        static CENTER: Sheet = { justifyItems: "center" };
        static START: Sheet = { justifyItems: "start" };
        static END: Sheet = { justifyItems: "end" };
        static SELF_START: Sheet = { justifyItems: "self-start" };
        static SELF_END: Sheet = { justifyItems: "self-end" };
        static FLEX_START: Sheet = { justifyItems: "flex-start" };
        static FLEX_END: Sheet = { justifyItems: "flex-end" };
        static LEFT: Sheet = { justifyItems: "left" };
        static RIGHT: Sheet = { justifyItems: "right" };
        static LEGACY: Sheet = { justifyItems: "legacy" };
    }
    export class JustifySelf {
        static set = (...params: Param[]): Sheet => ({ justifySelf: buildProperty(params) });
        static AUTO: Sheet = { justifySelf: "auto" };
        static NORMAL: Sheet = { justifySelf: "normal" };
        static STRETCH: Sheet = { justifySelf: "stretch" };
        static FIRST: Sheet = { justifySelf: "first" };
        static LAST: Sheet = { justifySelf: "last" };
        static BASELINE: Sheet = { justifySelf: "baseline" };
        static UNSAFE: Sheet = { justifySelf: "unsafe" };
        static SAFE: Sheet = { justifySelf: "safe" };
        static CENTER: Sheet = { justifySelf: "center" };
        static START: Sheet = { justifySelf: "start" };
        static END: Sheet = { justifySelf: "end" };
        static SELF_START: Sheet = { justifySelf: "self-start" };
        static SELF_END: Sheet = { justifySelf: "self-end" };
        static FLEX_START: Sheet = { justifySelf: "flex-start" };
        static FLEX_END: Sheet = { justifySelf: "flex-end" };
        static LEFT: Sheet = { justifySelf: "left" };
        static RIGHT: Sheet = { justifySelf: "right" };
    }
    export class Left {
        static set = (...params: Param[]): Sheet => ({ left: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ left: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ left: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ left: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ left: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ left: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ left: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ left: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ left: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ left: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ left: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ left: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ left: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ left: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ left: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ left: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ left: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ left: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ left: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ left: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ left: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ left: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ left: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ left: Length.X(...params) });
        static AUTO: Sheet = { left: "auto" };
    }
    export class LetterSpacing {
        static set = (...params: Param[]): Sheet => ({ letterSpacing: buildProperty(params) });
        static NORMAL: Sheet = { letterSpacing: "normal" };
        static cap = (...params: number[]): Sheet => ({ letterSpacing: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ letterSpacing: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ letterSpacing: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ letterSpacing: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ letterSpacing: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ letterSpacing: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ letterSpacing: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ letterSpacing: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ letterSpacing: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ letterSpacing: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ letterSpacing: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ letterSpacing: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ letterSpacing: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ letterSpacing: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ letterSpacing: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ letterSpacing: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ letterSpacing: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ letterSpacing: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ letterSpacing: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ letterSpacing: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ letterSpacing: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ letterSpacing: Length.fr(...params) });
    }
    export class LineBreak {
        static set = (...params: Param[]): Sheet => ({ lineBreak: buildProperty(params) });
        static AUTO: Sheet = { lineBreak: "auto" };
        static LOOSE: Sheet = { lineBreak: "loose" };
        static NORMAL: Sheet = { lineBreak: "normal" };
        static STRICT: Sheet = { lineBreak: "strict" };
    }
    export class LineClamp {
        static set = (...params: Param[]): Sheet => ({ lineClamp: buildProperty(params) });
        static NONE: Sheet = { lineClamp: "none" };
    }
    export class LineHeight {
        static set = (...params: Param[]): Sheet => ({ lineHeight: buildProperty(params) });
        static NORMAL: Sheet = { lineHeight: "normal" };
        static cap = (...params: number[]): Sheet => ({ lineHeight: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ lineHeight: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ lineHeight: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ lineHeight: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ lineHeight: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ lineHeight: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ lineHeight: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ lineHeight: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ lineHeight: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ lineHeight: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ lineHeight: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ lineHeight: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ lineHeight: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ lineHeight: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ lineHeight: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ lineHeight: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ lineHeight: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ lineHeight: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ lineHeight: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ lineHeight: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ lineHeight: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ lineHeight: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ lineHeight: Length.X(...params) });
    }
    export class ListStyle {
        static set = (...params: Param[]): Sheet => ({ listStyle: buildProperty(params) });
        static NONE: Sheet = { listStyle: "none" };
        static INSIDE: Sheet = { listStyle: "inside" };
        static OUTSIDE: Sheet = { listStyle: "outside" };
    }
    export class ListStyleImage {
        static set = (...params: Param[]): Sheet => ({ listStyleImage: buildProperty(params) });
        static NONE: Sheet = { listStyleImage: "none" };
    }
    export class ListStylePosition {
        static set = (...params: Param[]): Sheet => ({ listStylePosition: buildProperty(params) });
        static INSIDE: Sheet = { listStylePosition: "inside" };
        static OUTSIDE: Sheet = { listStylePosition: "outside" };
    }
    export class ListStyleType {
        static set = (...params: Param[]): Sheet => ({ listStyleType: buildProperty(params) });
        static NONE: Sheet = { listStyleType: "none" };
    }
    export class Margin {
        static set = (...params: Param[]): Sheet => ({ margin: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ margin: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ margin: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ margin: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ margin: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ margin: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ margin: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ margin: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ margin: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ margin: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ margin: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ margin: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ margin: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ margin: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ margin: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ margin: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ margin: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ margin: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ margin: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ margin: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ margin: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ margin: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ margin: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ margin: Length.X(...params) });
        static AUTO: Sheet = { margin: "auto" };
    }
    export class MarginBlockEnd {
        static set = (...params: Param[]): Sheet => ({ marginBlockEnd: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ marginBlockEnd: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ marginBlockEnd: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ marginBlockEnd: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ marginBlockEnd: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ marginBlockEnd: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ marginBlockEnd: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ marginBlockEnd: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ marginBlockEnd: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ marginBlockEnd: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ marginBlockEnd: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ marginBlockEnd: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ marginBlockEnd: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ marginBlockEnd: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ marginBlockEnd: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ marginBlockEnd: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ marginBlockEnd: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ marginBlockEnd: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ marginBlockEnd: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ marginBlockEnd: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ marginBlockEnd: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ marginBlockEnd: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ marginBlockEnd: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ marginBlockEnd: Length.X(...params) });
        static AUTO: Sheet = { marginBlockEnd: "auto" };
    }
    export class MarginBlockStart {
        static set = (...params: Param[]): Sheet => ({ marginBlockStart: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ marginBlockStart: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ marginBlockStart: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ marginBlockStart: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ marginBlockStart: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ marginBlockStart: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ marginBlockStart: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ marginBlockStart: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ marginBlockStart: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ marginBlockStart: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ marginBlockStart: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ marginBlockStart: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ marginBlockStart: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ marginBlockStart: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ marginBlockStart: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ marginBlockStart: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ marginBlockStart: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ marginBlockStart: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ marginBlockStart: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ marginBlockStart: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ marginBlockStart: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ marginBlockStart: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ marginBlockStart: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ marginBlockStart: Length.X(...params) });
        static AUTO: Sheet = { marginBlockStart: "auto" };
    }
    export class MarginBottom {
        static set = (...params: Param[]): Sheet => ({ marginBottom: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ marginBottom: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ marginBottom: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ marginBottom: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ marginBottom: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ marginBottom: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ marginBottom: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ marginBottom: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ marginBottom: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ marginBottom: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ marginBottom: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ marginBottom: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ marginBottom: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ marginBottom: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ marginBottom: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ marginBottom: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ marginBottom: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ marginBottom: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ marginBottom: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ marginBottom: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ marginBottom: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ marginBottom: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ marginBottom: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ marginBottom: Length.X(...params) });
        static AUTO: Sheet = { marginBottom: "auto" };
    }
    export class MarginInlineEnd {
        static set = (...params: Param[]): Sheet => ({ marginInlineEnd: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ marginInlineEnd: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ marginInlineEnd: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ marginInlineEnd: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ marginInlineEnd: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ marginInlineEnd: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ marginInlineEnd: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ marginInlineEnd: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ marginInlineEnd: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ marginInlineEnd: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ marginInlineEnd: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ marginInlineEnd: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ marginInlineEnd: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ marginInlineEnd: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ marginInlineEnd: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ marginInlineEnd: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ marginInlineEnd: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ marginInlineEnd: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ marginInlineEnd: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ marginInlineEnd: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ marginInlineEnd: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ marginInlineEnd: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ marginInlineEnd: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ marginInlineEnd: Length.X(...params) });
        static AUTO: Sheet = { marginInlineEnd: "auto" };
    }
    export class MarginInlineStart {
        static set = (...params: Param[]): Sheet => ({ marginInlineStart: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ marginInlineStart: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ marginInlineStart: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ marginInlineStart: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ marginInlineStart: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ marginInlineStart: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ marginInlineStart: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ marginInlineStart: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ marginInlineStart: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ marginInlineStart: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ marginInlineStart: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ marginInlineStart: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ marginInlineStart: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ marginInlineStart: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ marginInlineStart: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ marginInlineStart: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ marginInlineStart: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ marginInlineStart: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ marginInlineStart: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ marginInlineStart: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ marginInlineStart: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ marginInlineStart: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ marginInlineStart: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ marginInlineStart: Length.X(...params) });
        static AUTO: Sheet = { marginInlineStart: "auto" };
    }
    export class MarginLeft {
        static set = (...params: Param[]): Sheet => ({ marginLeft: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ marginLeft: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ marginLeft: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ marginLeft: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ marginLeft: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ marginLeft: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ marginLeft: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ marginLeft: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ marginLeft: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ marginLeft: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ marginLeft: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ marginLeft: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ marginLeft: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ marginLeft: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ marginLeft: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ marginLeft: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ marginLeft: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ marginLeft: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ marginLeft: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ marginLeft: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ marginLeft: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ marginLeft: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ marginLeft: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ marginLeft: Length.X(...params) });
        static AUTO: Sheet = { marginLeft: "auto" };
    }
    export class MarginRight {
        static set = (...params: Param[]): Sheet => ({ marginRight: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ marginRight: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ marginRight: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ marginRight: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ marginRight: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ marginRight: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ marginRight: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ marginRight: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ marginRight: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ marginRight: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ marginRight: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ marginRight: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ marginRight: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ marginRight: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ marginRight: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ marginRight: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ marginRight: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ marginRight: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ marginRight: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ marginRight: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ marginRight: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ marginRight: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ marginRight: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ marginRight: Length.X(...params) });
        static AUTO: Sheet = { marginRight: "auto" };
    }
    export class MarginTop {
        static set = (...params: Param[]): Sheet => ({ marginTop: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ marginTop: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ marginTop: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ marginTop: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ marginTop: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ marginTop: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ marginTop: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ marginTop: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ marginTop: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ marginTop: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ marginTop: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ marginTop: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ marginTop: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ marginTop: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ marginTop: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ marginTop: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ marginTop: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ marginTop: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ marginTop: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ marginTop: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ marginTop: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ marginTop: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ marginTop: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ marginTop: Length.X(...params) });
        static AUTO: Sheet = { marginTop: "auto" };
    }
    export class Mask {
        static set = (...params: Param[]): Sheet => ({ mask: buildProperty(params) });
        static NONE: Sheet = { mask: "none" };
        static X = (...params: number[]): Sheet => ({ mask: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ mask: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ mask: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ mask: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ mask: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { mask: "transparent" };
        static ALICEBLUE: Sheet = { mask: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { mask: "antiquewhite" };
        static AQUA: Sheet = { mask: "aqua" };
        static AQUAMARINE: Sheet = { mask: "aquamarine" };
        static AZURE: Sheet = { mask: "azure" };
        static BEIGE: Sheet = { mask: "beige" };
        static BISQUE: Sheet = { mask: "bisque" };
        static BLACK: Sheet = { mask: "black" };
        static BLANCHEDALMOND: Sheet = { mask: "blanchedalmond" };
        static BLUE: Sheet = { mask: "blue" };
        static BLUEVIOLET: Sheet = { mask: "blueviolet" };
        static BROWN: Sheet = { mask: "brown" };
        static BURLYWOOD: Sheet = { mask: "burlywood" };
        static CADETBLUE: Sheet = { mask: "cadetblue" };
        static CHARTREUSE: Sheet = { mask: "chartreuse" };
        static CHOCOLATE: Sheet = { mask: "chocolate" };
        static CORAL: Sheet = { mask: "coral" };
        static CORNFLOWERBLUE: Sheet = { mask: "cornflowerblue" };
        static CORNSILK: Sheet = { mask: "cornsilk" };
        static CRIMSON: Sheet = { mask: "crimson" };
        static CYAN: Sheet = { mask: "cyan" };
        static DARKBLUE: Sheet = { mask: "darkblue" };
        static DARKCYAN: Sheet = { mask: "darkcyan" };
        static DARKGOLDENROD: Sheet = { mask: "darkgoldenrod" };
        static DARKGRAY: Sheet = { mask: "darkgray" };
        static DARKGREEN: Sheet = { mask: "darkgreen" };
        static DARKGREY: Sheet = { mask: "darkgrey" };
        static DARKKHAKI: Sheet = { mask: "darkkhaki" };
        static DARKMAGENTA: Sheet = { mask: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { mask: "darkolivegreen" };
        static DARKORANGE: Sheet = { mask: "darkorange" };
        static DARKORCHID: Sheet = { mask: "darkorchid" };
        static DARKRED: Sheet = { mask: "darkred" };
        static DARKSALMON: Sheet = { mask: "darksalmon" };
        static DARKSEAGREEN: Sheet = { mask: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { mask: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { mask: "darkslategray" };
        static DARKSLATEGREY: Sheet = { mask: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { mask: "darkturquoise" };
        static DARKVIOLET: Sheet = { mask: "darkviolet" };
        static DEEPPINK: Sheet = { mask: "deeppink" };
        static DEEPSKYBLUE: Sheet = { mask: "deepskyblue" };
        static DIMGRAY: Sheet = { mask: "dimgray" };
        static DIMGREY: Sheet = { mask: "dimgrey" };
        static DODGERBLUE: Sheet = { mask: "dodgerblue" };
        static FIREBRICK: Sheet = { mask: "firebrick" };
        static FLORALWHITE: Sheet = { mask: "floralwhite" };
        static FORESTGREEN: Sheet = { mask: "forestgreen" };
        static FUCHSIA: Sheet = { mask: "fuchsia" };
        static GAINSBORO: Sheet = { mask: "gainsboro" };
        static GHOSTWHITE: Sheet = { mask: "ghostwhite" };
        static GOLD: Sheet = { mask: "gold" };
        static GOLDENROD: Sheet = { mask: "goldenrod" };
        static GRAY: Sheet = { mask: "gray" };
        static GREEN: Sheet = { mask: "green" };
        static GREENYELLOW: Sheet = { mask: "greenyellow" };
        static GREY: Sheet = { mask: "grey" };
        static HONEYDEW: Sheet = { mask: "honeydew" };
        static HOTPINK: Sheet = { mask: "hotpink" };
        static INDIANRED: Sheet = { mask: "indianred" };
        static INDIGO: Sheet = { mask: "indigo" };
        static IVORY: Sheet = { mask: "ivory" };
        static KHAKI: Sheet = { mask: "khaki" };
        static LAVENDER: Sheet = { mask: "lavender" };
        static LAVENDERBLUSH: Sheet = { mask: "lavenderblush" };
        static LAWNGREEN: Sheet = { mask: "lawngreen" };
        static LEMONCHIFFON: Sheet = { mask: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { mask: "lightblue" };
        static LIGHTCORAL: Sheet = { mask: "lightcoral" };
        static LIGHTCYAN: Sheet = { mask: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { mask: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { mask: "lightgray" };
        static LIGHTGREEN: Sheet = { mask: "lightgreen" };
        static LIGHTGREY: Sheet = { mask: "lightgrey" };
        static LIGHTPINK: Sheet = { mask: "lightpink" };
        static LIGHTSALMON: Sheet = { mask: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { mask: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { mask: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { mask: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { mask: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { mask: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { mask: "lightyellow" };
        static LIME: Sheet = { mask: "lime" };
        static LIMEGREEN: Sheet = { mask: "limegreen" };
        static LINEN: Sheet = { mask: "linen" };
        static MAGENTA: Sheet = { mask: "magenta" };
        static MAROON: Sheet = { mask: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { mask: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { mask: "mediumblue" };
        static MEDIUMORCHID: Sheet = { mask: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { mask: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { mask: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { mask: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { mask: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { mask: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { mask: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { mask: "midnightblue" };
        static MINTCREAM: Sheet = { mask: "mintcream" };
        static MISTYROSE: Sheet = { mask: "mistyrose" };
        static MOCCASIN: Sheet = { mask: "moccasin" };
        static NAVAJOWHITE: Sheet = { mask: "navajowhite" };
        static NAVY: Sheet = { mask: "navy" };
        static OLDLACE: Sheet = { mask: "oldlace" };
        static OLIVE: Sheet = { mask: "olive" };
        static OLIVEDRAB: Sheet = { mask: "olivedrab" };
        static ORANGE: Sheet = { mask: "orange" };
        static ORANGERED: Sheet = { mask: "orangered" };
        static ORCHID: Sheet = { mask: "orchid" };
        static PALEGOLDENROD: Sheet = { mask: "palegoldenrod" };
        static PALEGREEN: Sheet = { mask: "palegreen" };
        static PALETURQUOISE: Sheet = { mask: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { mask: "palevioletred" };
        static PAPAYAWHIP: Sheet = { mask: "papayawhip" };
        static PEACHPUFF: Sheet = { mask: "peachpuff" };
        static PERU: Sheet = { mask: "peru" };
        static PINK: Sheet = { mask: "pink" };
        static PLUM: Sheet = { mask: "plum" };
        static POWDERBLUE: Sheet = { mask: "powderblue" };
        static PURPLE: Sheet = { mask: "purple" };
        static REBECCAPURPLE: Sheet = { mask: "rebeccapurple" };
        static RED: Sheet = { mask: "red" };
        static ROSYBROWN: Sheet = { mask: "rosybrown" };
        static ROYALBLUE: Sheet = { mask: "royalblue" };
        static SADDLEBROWN: Sheet = { mask: "saddlebrown" };
        static SALMON: Sheet = { mask: "salmon" };
        static SANDYBROWN: Sheet = { mask: "sandybrown" };
        static SEAGREEN: Sheet = { mask: "seagreen" };
        static SEASHELL: Sheet = { mask: "seashell" };
        static SIENNA: Sheet = { mask: "sienna" };
        static SILVER: Sheet = { mask: "silver" };
        static SKYBLUE: Sheet = { mask: "skyblue" };
        static SLATEBLUE: Sheet = { mask: "slateblue" };
        static SLATEGRAY: Sheet = { mask: "slategray" };
        static SLATEGREY: Sheet = { mask: "slategrey" };
        static SNOW: Sheet = { mask: "snow" };
        static SPRINGGREEN: Sheet = { mask: "springgreen" };
        static STEELBLUE: Sheet = { mask: "steelblue" };
        static TAN: Sheet = { mask: "tan" };
        static TEAL: Sheet = { mask: "teal" };
        static THISTLE: Sheet = { mask: "thistle" };
        static TOMATO: Sheet = { mask: "tomato" };
        static TURQUOISE: Sheet = { mask: "turquoise" };
        static VIOLET: Sheet = { mask: "violet" };
        static WHEAT: Sheet = { mask: "wheat" };
        static WHITE: Sheet = { mask: "white" };
        static WHITESMOKE: Sheet = { mask: "whitesmoke" };
        static YELLOW: Sheet = { mask: "yellow" };
        static YELLOWGREEN: Sheet = { mask: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { mask: "currentcolor" };
        static ACTIVEBORDER: Sheet = { mask: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { mask: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { mask: "AppWorkspace" };
        static BACKGROUND: Sheet = { mask: "Background" };
        static BUTTONFACE: Sheet = { mask: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { mask: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { mask: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { mask: "ButtonText" };
        static CAPTIONTEXT: Sheet = { mask: "CaptionText" };
        static GRAYTEXT: Sheet = { mask: "GrayText" };
        static HIGHLIGHT: Sheet = { mask: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { mask: "HighlightText" };
        static INACTIVEBORDER: Sheet = { mask: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { mask: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { mask: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { mask: "InfoBackground" };
        static INFOTEXT: Sheet = { mask: "InfoText" };
        static MENU: Sheet = { mask: "Menu" };
        static MENUTEXT: Sheet = { mask: "MenuText" };
        static SCROLLBAR: Sheet = { mask: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { mask: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { mask: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { mask: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { mask: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { mask: "ThreeDShadow" };
        static WINDOW: Sheet = { mask: "Window" };
        static WINDOWFRAME: Sheet = { mask: "WindowFrame" };
        static WINDOWTEXT: Sheet = { mask: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ mask: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ mask: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ mask: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ mask: Resolution.x(...params) });
        static TO: Sheet = { mask: "to" };
        static LEFT: Sheet = { mask: "left" };
        static RIGHT: Sheet = { mask: "right" };
        static TOP: Sheet = { mask: "top" };
        static BOTTOM: Sheet = { mask: "bottom" };
        static cap = (...params: number[]): Sheet => ({ mask: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ mask: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ mask: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ mask: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ mask: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ mask: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ mask: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ mask: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ mask: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ mask: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ mask: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ mask: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ mask: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ mask: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ mask: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ mask: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ mask: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ mask: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ mask: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ mask: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ mask: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ mask: Length.fr(...params) });
        static CIRCLE: Sheet = { mask: "circle" };
        static ELLIPSE: Sheet = { mask: "ellipse" };
        static CLOSEST_SIDE: Sheet = { mask: "closest-side" };
        static FARTHEST_SIDE: Sheet = { mask: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { mask: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { mask: "farthest-corner" };
        static AT: Sheet = { mask: "at" };
        static CENTER: Sheet = { mask: "center" };
        static AUTO: Sheet = { mask: "auto" };
        static COVER: Sheet = { mask: "cover" };
        static CONTAIN: Sheet = { mask: "contain" };
        static REPEAT_X: Sheet = { mask: "repeat-x" };
        static REPEAT_Y: Sheet = { mask: "repeat-y" };
        static REPEAT: Sheet = { mask: "repeat" };
        static SPACE: Sheet = { mask: "space" };
        static ROUND: Sheet = { mask: "round" };
        static NO_REPEAT: Sheet = { mask: "no-repeat" };
        static BORDER_BOX: Sheet = { mask: "border-box" };
        static PADDING_BOX: Sheet = { mask: "padding-box" };
        static CONTENT_BOX: Sheet = { mask: "content-box" };
        static MARGIN_BOX: Sheet = { mask: "margin-box" };
        static FILL_BOX: Sheet = { mask: "fill-box" };
        static STROKE_BOX: Sheet = { mask: "stroke-box" };
        static VIEW_BOX: Sheet = { mask: "view-box" };
        static NO_CLIP: Sheet = { mask: "no-clip" };
        static ADD: Sheet = { mask: "add" };
        static SUBTRACT: Sheet = { mask: "subtract" };
        static INTERSECT: Sheet = { mask: "intersect" };
        static EXCLUDE: Sheet = { mask: "exclude" };
        static ALPHA: Sheet = { mask: "alpha" };
        static LUMINANCE: Sheet = { mask: "luminance" };
        static MATCH_SOURCE: Sheet = { mask: "match-source" };
    }
    export class MaskBorder {
        static set = (...params: Param[]): Sheet => ({ maskBorder: buildProperty(params) });
        static NONE: Sheet = { maskBorder: "none" };
        static X = (...params: number[]): Sheet => ({ maskBorder: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ maskBorder: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ maskBorder: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ maskBorder: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ maskBorder: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { maskBorder: "transparent" };
        static ALICEBLUE: Sheet = { maskBorder: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { maskBorder: "antiquewhite" };
        static AQUA: Sheet = { maskBorder: "aqua" };
        static AQUAMARINE: Sheet = { maskBorder: "aquamarine" };
        static AZURE: Sheet = { maskBorder: "azure" };
        static BEIGE: Sheet = { maskBorder: "beige" };
        static BISQUE: Sheet = { maskBorder: "bisque" };
        static BLACK: Sheet = { maskBorder: "black" };
        static BLANCHEDALMOND: Sheet = { maskBorder: "blanchedalmond" };
        static BLUE: Sheet = { maskBorder: "blue" };
        static BLUEVIOLET: Sheet = { maskBorder: "blueviolet" };
        static BROWN: Sheet = { maskBorder: "brown" };
        static BURLYWOOD: Sheet = { maskBorder: "burlywood" };
        static CADETBLUE: Sheet = { maskBorder: "cadetblue" };
        static CHARTREUSE: Sheet = { maskBorder: "chartreuse" };
        static CHOCOLATE: Sheet = { maskBorder: "chocolate" };
        static CORAL: Sheet = { maskBorder: "coral" };
        static CORNFLOWERBLUE: Sheet = { maskBorder: "cornflowerblue" };
        static CORNSILK: Sheet = { maskBorder: "cornsilk" };
        static CRIMSON: Sheet = { maskBorder: "crimson" };
        static CYAN: Sheet = { maskBorder: "cyan" };
        static DARKBLUE: Sheet = { maskBorder: "darkblue" };
        static DARKCYAN: Sheet = { maskBorder: "darkcyan" };
        static DARKGOLDENROD: Sheet = { maskBorder: "darkgoldenrod" };
        static DARKGRAY: Sheet = { maskBorder: "darkgray" };
        static DARKGREEN: Sheet = { maskBorder: "darkgreen" };
        static DARKGREY: Sheet = { maskBorder: "darkgrey" };
        static DARKKHAKI: Sheet = { maskBorder: "darkkhaki" };
        static DARKMAGENTA: Sheet = { maskBorder: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { maskBorder: "darkolivegreen" };
        static DARKORANGE: Sheet = { maskBorder: "darkorange" };
        static DARKORCHID: Sheet = { maskBorder: "darkorchid" };
        static DARKRED: Sheet = { maskBorder: "darkred" };
        static DARKSALMON: Sheet = { maskBorder: "darksalmon" };
        static DARKSEAGREEN: Sheet = { maskBorder: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { maskBorder: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { maskBorder: "darkslategray" };
        static DARKSLATEGREY: Sheet = { maskBorder: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { maskBorder: "darkturquoise" };
        static DARKVIOLET: Sheet = { maskBorder: "darkviolet" };
        static DEEPPINK: Sheet = { maskBorder: "deeppink" };
        static DEEPSKYBLUE: Sheet = { maskBorder: "deepskyblue" };
        static DIMGRAY: Sheet = { maskBorder: "dimgray" };
        static DIMGREY: Sheet = { maskBorder: "dimgrey" };
        static DODGERBLUE: Sheet = { maskBorder: "dodgerblue" };
        static FIREBRICK: Sheet = { maskBorder: "firebrick" };
        static FLORALWHITE: Sheet = { maskBorder: "floralwhite" };
        static FORESTGREEN: Sheet = { maskBorder: "forestgreen" };
        static FUCHSIA: Sheet = { maskBorder: "fuchsia" };
        static GAINSBORO: Sheet = { maskBorder: "gainsboro" };
        static GHOSTWHITE: Sheet = { maskBorder: "ghostwhite" };
        static GOLD: Sheet = { maskBorder: "gold" };
        static GOLDENROD: Sheet = { maskBorder: "goldenrod" };
        static GRAY: Sheet = { maskBorder: "gray" };
        static GREEN: Sheet = { maskBorder: "green" };
        static GREENYELLOW: Sheet = { maskBorder: "greenyellow" };
        static GREY: Sheet = { maskBorder: "grey" };
        static HONEYDEW: Sheet = { maskBorder: "honeydew" };
        static HOTPINK: Sheet = { maskBorder: "hotpink" };
        static INDIANRED: Sheet = { maskBorder: "indianred" };
        static INDIGO: Sheet = { maskBorder: "indigo" };
        static IVORY: Sheet = { maskBorder: "ivory" };
        static KHAKI: Sheet = { maskBorder: "khaki" };
        static LAVENDER: Sheet = { maskBorder: "lavender" };
        static LAVENDERBLUSH: Sheet = { maskBorder: "lavenderblush" };
        static LAWNGREEN: Sheet = { maskBorder: "lawngreen" };
        static LEMONCHIFFON: Sheet = { maskBorder: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { maskBorder: "lightblue" };
        static LIGHTCORAL: Sheet = { maskBorder: "lightcoral" };
        static LIGHTCYAN: Sheet = { maskBorder: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { maskBorder: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { maskBorder: "lightgray" };
        static LIGHTGREEN: Sheet = { maskBorder: "lightgreen" };
        static LIGHTGREY: Sheet = { maskBorder: "lightgrey" };
        static LIGHTPINK: Sheet = { maskBorder: "lightpink" };
        static LIGHTSALMON: Sheet = { maskBorder: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { maskBorder: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { maskBorder: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { maskBorder: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { maskBorder: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { maskBorder: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { maskBorder: "lightyellow" };
        static LIME: Sheet = { maskBorder: "lime" };
        static LIMEGREEN: Sheet = { maskBorder: "limegreen" };
        static LINEN: Sheet = { maskBorder: "linen" };
        static MAGENTA: Sheet = { maskBorder: "magenta" };
        static MAROON: Sheet = { maskBorder: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { maskBorder: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { maskBorder: "mediumblue" };
        static MEDIUMORCHID: Sheet = { maskBorder: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { maskBorder: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { maskBorder: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { maskBorder: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { maskBorder: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { maskBorder: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { maskBorder: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { maskBorder: "midnightblue" };
        static MINTCREAM: Sheet = { maskBorder: "mintcream" };
        static MISTYROSE: Sheet = { maskBorder: "mistyrose" };
        static MOCCASIN: Sheet = { maskBorder: "moccasin" };
        static NAVAJOWHITE: Sheet = { maskBorder: "navajowhite" };
        static NAVY: Sheet = { maskBorder: "navy" };
        static OLDLACE: Sheet = { maskBorder: "oldlace" };
        static OLIVE: Sheet = { maskBorder: "olive" };
        static OLIVEDRAB: Sheet = { maskBorder: "olivedrab" };
        static ORANGE: Sheet = { maskBorder: "orange" };
        static ORANGERED: Sheet = { maskBorder: "orangered" };
        static ORCHID: Sheet = { maskBorder: "orchid" };
        static PALEGOLDENROD: Sheet = { maskBorder: "palegoldenrod" };
        static PALEGREEN: Sheet = { maskBorder: "palegreen" };
        static PALETURQUOISE: Sheet = { maskBorder: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { maskBorder: "palevioletred" };
        static PAPAYAWHIP: Sheet = { maskBorder: "papayawhip" };
        static PEACHPUFF: Sheet = { maskBorder: "peachpuff" };
        static PERU: Sheet = { maskBorder: "peru" };
        static PINK: Sheet = { maskBorder: "pink" };
        static PLUM: Sheet = { maskBorder: "plum" };
        static POWDERBLUE: Sheet = { maskBorder: "powderblue" };
        static PURPLE: Sheet = { maskBorder: "purple" };
        static REBECCAPURPLE: Sheet = { maskBorder: "rebeccapurple" };
        static RED: Sheet = { maskBorder: "red" };
        static ROSYBROWN: Sheet = { maskBorder: "rosybrown" };
        static ROYALBLUE: Sheet = { maskBorder: "royalblue" };
        static SADDLEBROWN: Sheet = { maskBorder: "saddlebrown" };
        static SALMON: Sheet = { maskBorder: "salmon" };
        static SANDYBROWN: Sheet = { maskBorder: "sandybrown" };
        static SEAGREEN: Sheet = { maskBorder: "seagreen" };
        static SEASHELL: Sheet = { maskBorder: "seashell" };
        static SIENNA: Sheet = { maskBorder: "sienna" };
        static SILVER: Sheet = { maskBorder: "silver" };
        static SKYBLUE: Sheet = { maskBorder: "skyblue" };
        static SLATEBLUE: Sheet = { maskBorder: "slateblue" };
        static SLATEGRAY: Sheet = { maskBorder: "slategray" };
        static SLATEGREY: Sheet = { maskBorder: "slategrey" };
        static SNOW: Sheet = { maskBorder: "snow" };
        static SPRINGGREEN: Sheet = { maskBorder: "springgreen" };
        static STEELBLUE: Sheet = { maskBorder: "steelblue" };
        static TAN: Sheet = { maskBorder: "tan" };
        static TEAL: Sheet = { maskBorder: "teal" };
        static THISTLE: Sheet = { maskBorder: "thistle" };
        static TOMATO: Sheet = { maskBorder: "tomato" };
        static TURQUOISE: Sheet = { maskBorder: "turquoise" };
        static VIOLET: Sheet = { maskBorder: "violet" };
        static WHEAT: Sheet = { maskBorder: "wheat" };
        static WHITE: Sheet = { maskBorder: "white" };
        static WHITESMOKE: Sheet = { maskBorder: "whitesmoke" };
        static YELLOW: Sheet = { maskBorder: "yellow" };
        static YELLOWGREEN: Sheet = { maskBorder: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { maskBorder: "currentcolor" };
        static ACTIVEBORDER: Sheet = { maskBorder: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { maskBorder: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { maskBorder: "AppWorkspace" };
        static BACKGROUND: Sheet = { maskBorder: "Background" };
        static BUTTONFACE: Sheet = { maskBorder: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { maskBorder: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { maskBorder: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { maskBorder: "ButtonText" };
        static CAPTIONTEXT: Sheet = { maskBorder: "CaptionText" };
        static GRAYTEXT: Sheet = { maskBorder: "GrayText" };
        static HIGHLIGHT: Sheet = { maskBorder: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { maskBorder: "HighlightText" };
        static INACTIVEBORDER: Sheet = { maskBorder: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { maskBorder: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { maskBorder: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { maskBorder: "InfoBackground" };
        static INFOTEXT: Sheet = { maskBorder: "InfoText" };
        static MENU: Sheet = { maskBorder: "Menu" };
        static MENUTEXT: Sheet = { maskBorder: "MenuText" };
        static SCROLLBAR: Sheet = { maskBorder: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { maskBorder: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { maskBorder: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { maskBorder: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { maskBorder: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { maskBorder: "ThreeDShadow" };
        static WINDOW: Sheet = { maskBorder: "Window" };
        static WINDOWFRAME: Sheet = { maskBorder: "WindowFrame" };
        static WINDOWTEXT: Sheet = { maskBorder: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ maskBorder: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ maskBorder: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ maskBorder: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ maskBorder: Resolution.x(...params) });
        static TO: Sheet = { maskBorder: "to" };
        static LEFT: Sheet = { maskBorder: "left" };
        static RIGHT: Sheet = { maskBorder: "right" };
        static TOP: Sheet = { maskBorder: "top" };
        static BOTTOM: Sheet = { maskBorder: "bottom" };
        static cap = (...params: number[]): Sheet => ({ maskBorder: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maskBorder: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maskBorder: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maskBorder: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maskBorder: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maskBorder: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maskBorder: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maskBorder: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maskBorder: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maskBorder: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maskBorder: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maskBorder: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maskBorder: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maskBorder: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maskBorder: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maskBorder: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maskBorder: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maskBorder: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maskBorder: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maskBorder: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maskBorder: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maskBorder: Length.fr(...params) });
        static CIRCLE: Sheet = { maskBorder: "circle" };
        static ELLIPSE: Sheet = { maskBorder: "ellipse" };
        static CLOSEST_SIDE: Sheet = { maskBorder: "closest-side" };
        static FARTHEST_SIDE: Sheet = { maskBorder: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { maskBorder: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { maskBorder: "farthest-corner" };
        static AT: Sheet = { maskBorder: "at" };
        static CENTER: Sheet = { maskBorder: "center" };
        static FILL: Sheet = { maskBorder: "fill" };
        static AUTO: Sheet = { maskBorder: "auto" };
        static STRETCH: Sheet = { maskBorder: "stretch" };
        static REPEAT: Sheet = { maskBorder: "repeat" };
        static ROUND: Sheet = { maskBorder: "round" };
        static SPACE: Sheet = { maskBorder: "space" };
        static LUMINANCE: Sheet = { maskBorder: "luminance" };
        static ALPHA: Sheet = { maskBorder: "alpha" };
    }
    export class MaskBorderMode {
        static set = (...params: Param[]): Sheet => ({ maskBorderMode: buildProperty(params) });
        static LUMINANCE: Sheet = { maskBorderMode: "luminance" };
        static ALPHA: Sheet = { maskBorderMode: "alpha" };
    }
    export class MaskBorderOutset {
        static set = (...params: Param[]): Sheet => ({ maskBorderOutset: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ maskBorderOutset: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maskBorderOutset: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maskBorderOutset: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maskBorderOutset: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maskBorderOutset: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maskBorderOutset: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maskBorderOutset: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maskBorderOutset: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maskBorderOutset: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maskBorderOutset: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maskBorderOutset: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maskBorderOutset: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maskBorderOutset: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maskBorderOutset: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maskBorderOutset: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maskBorderOutset: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maskBorderOutset: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maskBorderOutset: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maskBorderOutset: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maskBorderOutset: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maskBorderOutset: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maskBorderOutset: Length.fr(...params) });
    }
    export class MaskBorderRepeat {
        static set = (...params: Param[]): Sheet => ({ maskBorderRepeat: buildProperty(params) });
        static STRETCH: Sheet = { maskBorderRepeat: "stretch" };
        static REPEAT: Sheet = { maskBorderRepeat: "repeat" };
        static ROUND: Sheet = { maskBorderRepeat: "round" };
        static SPACE: Sheet = { maskBorderRepeat: "space" };
    }
    export class MaskBorderSlice {
        static set = (...params: Param[]): Sheet => ({ maskBorderSlice: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ maskBorderSlice: Length.X(...params) });
        static FILL: Sheet = { maskBorderSlice: "fill" };
    }
    export class MaskBorderSource {
        static set = (...params: Param[]): Sheet => ({ maskBorderSource: buildProperty(params) });
        static NONE: Sheet = { maskBorderSource: "none" };
        static X = (...params: number[]): Sheet => ({ maskBorderSource: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ maskBorderSource: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ maskBorderSource: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ maskBorderSource: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ maskBorderSource: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { maskBorderSource: "transparent" };
        static ALICEBLUE: Sheet = { maskBorderSource: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { maskBorderSource: "antiquewhite" };
        static AQUA: Sheet = { maskBorderSource: "aqua" };
        static AQUAMARINE: Sheet = { maskBorderSource: "aquamarine" };
        static AZURE: Sheet = { maskBorderSource: "azure" };
        static BEIGE: Sheet = { maskBorderSource: "beige" };
        static BISQUE: Sheet = { maskBorderSource: "bisque" };
        static BLACK: Sheet = { maskBorderSource: "black" };
        static BLANCHEDALMOND: Sheet = { maskBorderSource: "blanchedalmond" };
        static BLUE: Sheet = { maskBorderSource: "blue" };
        static BLUEVIOLET: Sheet = { maskBorderSource: "blueviolet" };
        static BROWN: Sheet = { maskBorderSource: "brown" };
        static BURLYWOOD: Sheet = { maskBorderSource: "burlywood" };
        static CADETBLUE: Sheet = { maskBorderSource: "cadetblue" };
        static CHARTREUSE: Sheet = { maskBorderSource: "chartreuse" };
        static CHOCOLATE: Sheet = { maskBorderSource: "chocolate" };
        static CORAL: Sheet = { maskBorderSource: "coral" };
        static CORNFLOWERBLUE: Sheet = { maskBorderSource: "cornflowerblue" };
        static CORNSILK: Sheet = { maskBorderSource: "cornsilk" };
        static CRIMSON: Sheet = { maskBorderSource: "crimson" };
        static CYAN: Sheet = { maskBorderSource: "cyan" };
        static DARKBLUE: Sheet = { maskBorderSource: "darkblue" };
        static DARKCYAN: Sheet = { maskBorderSource: "darkcyan" };
        static DARKGOLDENROD: Sheet = { maskBorderSource: "darkgoldenrod" };
        static DARKGRAY: Sheet = { maskBorderSource: "darkgray" };
        static DARKGREEN: Sheet = { maskBorderSource: "darkgreen" };
        static DARKGREY: Sheet = { maskBorderSource: "darkgrey" };
        static DARKKHAKI: Sheet = { maskBorderSource: "darkkhaki" };
        static DARKMAGENTA: Sheet = { maskBorderSource: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { maskBorderSource: "darkolivegreen" };
        static DARKORANGE: Sheet = { maskBorderSource: "darkorange" };
        static DARKORCHID: Sheet = { maskBorderSource: "darkorchid" };
        static DARKRED: Sheet = { maskBorderSource: "darkred" };
        static DARKSALMON: Sheet = { maskBorderSource: "darksalmon" };
        static DARKSEAGREEN: Sheet = { maskBorderSource: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { maskBorderSource: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { maskBorderSource: "darkslategray" };
        static DARKSLATEGREY: Sheet = { maskBorderSource: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { maskBorderSource: "darkturquoise" };
        static DARKVIOLET: Sheet = { maskBorderSource: "darkviolet" };
        static DEEPPINK: Sheet = { maskBorderSource: "deeppink" };
        static DEEPSKYBLUE: Sheet = { maskBorderSource: "deepskyblue" };
        static DIMGRAY: Sheet = { maskBorderSource: "dimgray" };
        static DIMGREY: Sheet = { maskBorderSource: "dimgrey" };
        static DODGERBLUE: Sheet = { maskBorderSource: "dodgerblue" };
        static FIREBRICK: Sheet = { maskBorderSource: "firebrick" };
        static FLORALWHITE: Sheet = { maskBorderSource: "floralwhite" };
        static FORESTGREEN: Sheet = { maskBorderSource: "forestgreen" };
        static FUCHSIA: Sheet = { maskBorderSource: "fuchsia" };
        static GAINSBORO: Sheet = { maskBorderSource: "gainsboro" };
        static GHOSTWHITE: Sheet = { maskBorderSource: "ghostwhite" };
        static GOLD: Sheet = { maskBorderSource: "gold" };
        static GOLDENROD: Sheet = { maskBorderSource: "goldenrod" };
        static GRAY: Sheet = { maskBorderSource: "gray" };
        static GREEN: Sheet = { maskBorderSource: "green" };
        static GREENYELLOW: Sheet = { maskBorderSource: "greenyellow" };
        static GREY: Sheet = { maskBorderSource: "grey" };
        static HONEYDEW: Sheet = { maskBorderSource: "honeydew" };
        static HOTPINK: Sheet = { maskBorderSource: "hotpink" };
        static INDIANRED: Sheet = { maskBorderSource: "indianred" };
        static INDIGO: Sheet = { maskBorderSource: "indigo" };
        static IVORY: Sheet = { maskBorderSource: "ivory" };
        static KHAKI: Sheet = { maskBorderSource: "khaki" };
        static LAVENDER: Sheet = { maskBorderSource: "lavender" };
        static LAVENDERBLUSH: Sheet = { maskBorderSource: "lavenderblush" };
        static LAWNGREEN: Sheet = { maskBorderSource: "lawngreen" };
        static LEMONCHIFFON: Sheet = { maskBorderSource: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { maskBorderSource: "lightblue" };
        static LIGHTCORAL: Sheet = { maskBorderSource: "lightcoral" };
        static LIGHTCYAN: Sheet = { maskBorderSource: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { maskBorderSource: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { maskBorderSource: "lightgray" };
        static LIGHTGREEN: Sheet = { maskBorderSource: "lightgreen" };
        static LIGHTGREY: Sheet = { maskBorderSource: "lightgrey" };
        static LIGHTPINK: Sheet = { maskBorderSource: "lightpink" };
        static LIGHTSALMON: Sheet = { maskBorderSource: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { maskBorderSource: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { maskBorderSource: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { maskBorderSource: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { maskBorderSource: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { maskBorderSource: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { maskBorderSource: "lightyellow" };
        static LIME: Sheet = { maskBorderSource: "lime" };
        static LIMEGREEN: Sheet = { maskBorderSource: "limegreen" };
        static LINEN: Sheet = { maskBorderSource: "linen" };
        static MAGENTA: Sheet = { maskBorderSource: "magenta" };
        static MAROON: Sheet = { maskBorderSource: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { maskBorderSource: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { maskBorderSource: "mediumblue" };
        static MEDIUMORCHID: Sheet = { maskBorderSource: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { maskBorderSource: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { maskBorderSource: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { maskBorderSource: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { maskBorderSource: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { maskBorderSource: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { maskBorderSource: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { maskBorderSource: "midnightblue" };
        static MINTCREAM: Sheet = { maskBorderSource: "mintcream" };
        static MISTYROSE: Sheet = { maskBorderSource: "mistyrose" };
        static MOCCASIN: Sheet = { maskBorderSource: "moccasin" };
        static NAVAJOWHITE: Sheet = { maskBorderSource: "navajowhite" };
        static NAVY: Sheet = { maskBorderSource: "navy" };
        static OLDLACE: Sheet = { maskBorderSource: "oldlace" };
        static OLIVE: Sheet = { maskBorderSource: "olive" };
        static OLIVEDRAB: Sheet = { maskBorderSource: "olivedrab" };
        static ORANGE: Sheet = { maskBorderSource: "orange" };
        static ORANGERED: Sheet = { maskBorderSource: "orangered" };
        static ORCHID: Sheet = { maskBorderSource: "orchid" };
        static PALEGOLDENROD: Sheet = { maskBorderSource: "palegoldenrod" };
        static PALEGREEN: Sheet = { maskBorderSource: "palegreen" };
        static PALETURQUOISE: Sheet = { maskBorderSource: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { maskBorderSource: "palevioletred" };
        static PAPAYAWHIP: Sheet = { maskBorderSource: "papayawhip" };
        static PEACHPUFF: Sheet = { maskBorderSource: "peachpuff" };
        static PERU: Sheet = { maskBorderSource: "peru" };
        static PINK: Sheet = { maskBorderSource: "pink" };
        static PLUM: Sheet = { maskBorderSource: "plum" };
        static POWDERBLUE: Sheet = { maskBorderSource: "powderblue" };
        static PURPLE: Sheet = { maskBorderSource: "purple" };
        static REBECCAPURPLE: Sheet = { maskBorderSource: "rebeccapurple" };
        static RED: Sheet = { maskBorderSource: "red" };
        static ROSYBROWN: Sheet = { maskBorderSource: "rosybrown" };
        static ROYALBLUE: Sheet = { maskBorderSource: "royalblue" };
        static SADDLEBROWN: Sheet = { maskBorderSource: "saddlebrown" };
        static SALMON: Sheet = { maskBorderSource: "salmon" };
        static SANDYBROWN: Sheet = { maskBorderSource: "sandybrown" };
        static SEAGREEN: Sheet = { maskBorderSource: "seagreen" };
        static SEASHELL: Sheet = { maskBorderSource: "seashell" };
        static SIENNA: Sheet = { maskBorderSource: "sienna" };
        static SILVER: Sheet = { maskBorderSource: "silver" };
        static SKYBLUE: Sheet = { maskBorderSource: "skyblue" };
        static SLATEBLUE: Sheet = { maskBorderSource: "slateblue" };
        static SLATEGRAY: Sheet = { maskBorderSource: "slategray" };
        static SLATEGREY: Sheet = { maskBorderSource: "slategrey" };
        static SNOW: Sheet = { maskBorderSource: "snow" };
        static SPRINGGREEN: Sheet = { maskBorderSource: "springgreen" };
        static STEELBLUE: Sheet = { maskBorderSource: "steelblue" };
        static TAN: Sheet = { maskBorderSource: "tan" };
        static TEAL: Sheet = { maskBorderSource: "teal" };
        static THISTLE: Sheet = { maskBorderSource: "thistle" };
        static TOMATO: Sheet = { maskBorderSource: "tomato" };
        static TURQUOISE: Sheet = { maskBorderSource: "turquoise" };
        static VIOLET: Sheet = { maskBorderSource: "violet" };
        static WHEAT: Sheet = { maskBorderSource: "wheat" };
        static WHITE: Sheet = { maskBorderSource: "white" };
        static WHITESMOKE: Sheet = { maskBorderSource: "whitesmoke" };
        static YELLOW: Sheet = { maskBorderSource: "yellow" };
        static YELLOWGREEN: Sheet = { maskBorderSource: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { maskBorderSource: "currentcolor" };
        static ACTIVEBORDER: Sheet = { maskBorderSource: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { maskBorderSource: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { maskBorderSource: "AppWorkspace" };
        static BACKGROUND: Sheet = { maskBorderSource: "Background" };
        static BUTTONFACE: Sheet = { maskBorderSource: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { maskBorderSource: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { maskBorderSource: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { maskBorderSource: "ButtonText" };
        static CAPTIONTEXT: Sheet = { maskBorderSource: "CaptionText" };
        static GRAYTEXT: Sheet = { maskBorderSource: "GrayText" };
        static HIGHLIGHT: Sheet = { maskBorderSource: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { maskBorderSource: "HighlightText" };
        static INACTIVEBORDER: Sheet = { maskBorderSource: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { maskBorderSource: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { maskBorderSource: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { maskBorderSource: "InfoBackground" };
        static INFOTEXT: Sheet = { maskBorderSource: "InfoText" };
        static MENU: Sheet = { maskBorderSource: "Menu" };
        static MENUTEXT: Sheet = { maskBorderSource: "MenuText" };
        static SCROLLBAR: Sheet = { maskBorderSource: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { maskBorderSource: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { maskBorderSource: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { maskBorderSource: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { maskBorderSource: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { maskBorderSource: "ThreeDShadow" };
        static WINDOW: Sheet = { maskBorderSource: "Window" };
        static WINDOWFRAME: Sheet = { maskBorderSource: "WindowFrame" };
        static WINDOWTEXT: Sheet = { maskBorderSource: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ maskBorderSource: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ maskBorderSource: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ maskBorderSource: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ maskBorderSource: Resolution.x(...params) });
        static TO: Sheet = { maskBorderSource: "to" };
        static LEFT: Sheet = { maskBorderSource: "left" };
        static RIGHT: Sheet = { maskBorderSource: "right" };
        static TOP: Sheet = { maskBorderSource: "top" };
        static BOTTOM: Sheet = { maskBorderSource: "bottom" };
        static cap = (...params: number[]): Sheet => ({ maskBorderSource: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maskBorderSource: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maskBorderSource: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maskBorderSource: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maskBorderSource: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maskBorderSource: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maskBorderSource: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maskBorderSource: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maskBorderSource: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maskBorderSource: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maskBorderSource: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maskBorderSource: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maskBorderSource: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maskBorderSource: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maskBorderSource: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maskBorderSource: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maskBorderSource: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maskBorderSource: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maskBorderSource: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maskBorderSource: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maskBorderSource: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maskBorderSource: Length.fr(...params) });
        static CIRCLE: Sheet = { maskBorderSource: "circle" };
        static ELLIPSE: Sheet = { maskBorderSource: "ellipse" };
        static CLOSEST_SIDE: Sheet = { maskBorderSource: "closest-side" };
        static FARTHEST_SIDE: Sheet = { maskBorderSource: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { maskBorderSource: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { maskBorderSource: "farthest-corner" };
        static AT: Sheet = { maskBorderSource: "at" };
        static CENTER: Sheet = { maskBorderSource: "center" };
    }
    export class MaskBorderWidth {
        static set = (...params: Param[]): Sheet => ({ maskBorderWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ maskBorderWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maskBorderWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maskBorderWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maskBorderWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maskBorderWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maskBorderWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maskBorderWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maskBorderWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maskBorderWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maskBorderWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maskBorderWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maskBorderWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maskBorderWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maskBorderWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maskBorderWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maskBorderWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maskBorderWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maskBorderWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maskBorderWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maskBorderWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maskBorderWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maskBorderWidth: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ maskBorderWidth: Length.X(...params) });
        static AUTO: Sheet = { maskBorderWidth: "auto" };
    }
    export class MaskClip {
        static set = (...params: Param[]): Sheet => ({ maskClip: buildProperty(params) });
        static BORDER_BOX: Sheet = { maskClip: "border-box" };
        static PADDING_BOX: Sheet = { maskClip: "padding-box" };
        static CONTENT_BOX: Sheet = { maskClip: "content-box" };
        static MARGIN_BOX: Sheet = { maskClip: "margin-box" };
        static FILL_BOX: Sheet = { maskClip: "fill-box" };
        static STROKE_BOX: Sheet = { maskClip: "stroke-box" };
        static VIEW_BOX: Sheet = { maskClip: "view-box" };
        static NO_CLIP: Sheet = { maskClip: "no-clip" };
    }
    export class MaskComposite {
        static set = (...params: Param[]): Sheet => ({ maskComposite: buildProperty(params) });
        static ADD: Sheet = { maskComposite: "add" };
        static SUBTRACT: Sheet = { maskComposite: "subtract" };
        static INTERSECT: Sheet = { maskComposite: "intersect" };
        static EXCLUDE: Sheet = { maskComposite: "exclude" };
    }
    export class MaskImage {
        static set = (...params: Param[]): Sheet => ({ maskImage: buildProperty(params) });
        static NONE: Sheet = { maskImage: "none" };
        static X = (...params: number[]): Sheet => ({ maskImage: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ maskImage: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ maskImage: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ maskImage: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ maskImage: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { maskImage: "transparent" };
        static ALICEBLUE: Sheet = { maskImage: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { maskImage: "antiquewhite" };
        static AQUA: Sheet = { maskImage: "aqua" };
        static AQUAMARINE: Sheet = { maskImage: "aquamarine" };
        static AZURE: Sheet = { maskImage: "azure" };
        static BEIGE: Sheet = { maskImage: "beige" };
        static BISQUE: Sheet = { maskImage: "bisque" };
        static BLACK: Sheet = { maskImage: "black" };
        static BLANCHEDALMOND: Sheet = { maskImage: "blanchedalmond" };
        static BLUE: Sheet = { maskImage: "blue" };
        static BLUEVIOLET: Sheet = { maskImage: "blueviolet" };
        static BROWN: Sheet = { maskImage: "brown" };
        static BURLYWOOD: Sheet = { maskImage: "burlywood" };
        static CADETBLUE: Sheet = { maskImage: "cadetblue" };
        static CHARTREUSE: Sheet = { maskImage: "chartreuse" };
        static CHOCOLATE: Sheet = { maskImage: "chocolate" };
        static CORAL: Sheet = { maskImage: "coral" };
        static CORNFLOWERBLUE: Sheet = { maskImage: "cornflowerblue" };
        static CORNSILK: Sheet = { maskImage: "cornsilk" };
        static CRIMSON: Sheet = { maskImage: "crimson" };
        static CYAN: Sheet = { maskImage: "cyan" };
        static DARKBLUE: Sheet = { maskImage: "darkblue" };
        static DARKCYAN: Sheet = { maskImage: "darkcyan" };
        static DARKGOLDENROD: Sheet = { maskImage: "darkgoldenrod" };
        static DARKGRAY: Sheet = { maskImage: "darkgray" };
        static DARKGREEN: Sheet = { maskImage: "darkgreen" };
        static DARKGREY: Sheet = { maskImage: "darkgrey" };
        static DARKKHAKI: Sheet = { maskImage: "darkkhaki" };
        static DARKMAGENTA: Sheet = { maskImage: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { maskImage: "darkolivegreen" };
        static DARKORANGE: Sheet = { maskImage: "darkorange" };
        static DARKORCHID: Sheet = { maskImage: "darkorchid" };
        static DARKRED: Sheet = { maskImage: "darkred" };
        static DARKSALMON: Sheet = { maskImage: "darksalmon" };
        static DARKSEAGREEN: Sheet = { maskImage: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { maskImage: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { maskImage: "darkslategray" };
        static DARKSLATEGREY: Sheet = { maskImage: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { maskImage: "darkturquoise" };
        static DARKVIOLET: Sheet = { maskImage: "darkviolet" };
        static DEEPPINK: Sheet = { maskImage: "deeppink" };
        static DEEPSKYBLUE: Sheet = { maskImage: "deepskyblue" };
        static DIMGRAY: Sheet = { maskImage: "dimgray" };
        static DIMGREY: Sheet = { maskImage: "dimgrey" };
        static DODGERBLUE: Sheet = { maskImage: "dodgerblue" };
        static FIREBRICK: Sheet = { maskImage: "firebrick" };
        static FLORALWHITE: Sheet = { maskImage: "floralwhite" };
        static FORESTGREEN: Sheet = { maskImage: "forestgreen" };
        static FUCHSIA: Sheet = { maskImage: "fuchsia" };
        static GAINSBORO: Sheet = { maskImage: "gainsboro" };
        static GHOSTWHITE: Sheet = { maskImage: "ghostwhite" };
        static GOLD: Sheet = { maskImage: "gold" };
        static GOLDENROD: Sheet = { maskImage: "goldenrod" };
        static GRAY: Sheet = { maskImage: "gray" };
        static GREEN: Sheet = { maskImage: "green" };
        static GREENYELLOW: Sheet = { maskImage: "greenyellow" };
        static GREY: Sheet = { maskImage: "grey" };
        static HONEYDEW: Sheet = { maskImage: "honeydew" };
        static HOTPINK: Sheet = { maskImage: "hotpink" };
        static INDIANRED: Sheet = { maskImage: "indianred" };
        static INDIGO: Sheet = { maskImage: "indigo" };
        static IVORY: Sheet = { maskImage: "ivory" };
        static KHAKI: Sheet = { maskImage: "khaki" };
        static LAVENDER: Sheet = { maskImage: "lavender" };
        static LAVENDERBLUSH: Sheet = { maskImage: "lavenderblush" };
        static LAWNGREEN: Sheet = { maskImage: "lawngreen" };
        static LEMONCHIFFON: Sheet = { maskImage: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { maskImage: "lightblue" };
        static LIGHTCORAL: Sheet = { maskImage: "lightcoral" };
        static LIGHTCYAN: Sheet = { maskImage: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { maskImage: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { maskImage: "lightgray" };
        static LIGHTGREEN: Sheet = { maskImage: "lightgreen" };
        static LIGHTGREY: Sheet = { maskImage: "lightgrey" };
        static LIGHTPINK: Sheet = { maskImage: "lightpink" };
        static LIGHTSALMON: Sheet = { maskImage: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { maskImage: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { maskImage: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { maskImage: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { maskImage: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { maskImage: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { maskImage: "lightyellow" };
        static LIME: Sheet = { maskImage: "lime" };
        static LIMEGREEN: Sheet = { maskImage: "limegreen" };
        static LINEN: Sheet = { maskImage: "linen" };
        static MAGENTA: Sheet = { maskImage: "magenta" };
        static MAROON: Sheet = { maskImage: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { maskImage: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { maskImage: "mediumblue" };
        static MEDIUMORCHID: Sheet = { maskImage: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { maskImage: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { maskImage: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { maskImage: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { maskImage: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { maskImage: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { maskImage: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { maskImage: "midnightblue" };
        static MINTCREAM: Sheet = { maskImage: "mintcream" };
        static MISTYROSE: Sheet = { maskImage: "mistyrose" };
        static MOCCASIN: Sheet = { maskImage: "moccasin" };
        static NAVAJOWHITE: Sheet = { maskImage: "navajowhite" };
        static NAVY: Sheet = { maskImage: "navy" };
        static OLDLACE: Sheet = { maskImage: "oldlace" };
        static OLIVE: Sheet = { maskImage: "olive" };
        static OLIVEDRAB: Sheet = { maskImage: "olivedrab" };
        static ORANGE: Sheet = { maskImage: "orange" };
        static ORANGERED: Sheet = { maskImage: "orangered" };
        static ORCHID: Sheet = { maskImage: "orchid" };
        static PALEGOLDENROD: Sheet = { maskImage: "palegoldenrod" };
        static PALEGREEN: Sheet = { maskImage: "palegreen" };
        static PALETURQUOISE: Sheet = { maskImage: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { maskImage: "palevioletred" };
        static PAPAYAWHIP: Sheet = { maskImage: "papayawhip" };
        static PEACHPUFF: Sheet = { maskImage: "peachpuff" };
        static PERU: Sheet = { maskImage: "peru" };
        static PINK: Sheet = { maskImage: "pink" };
        static PLUM: Sheet = { maskImage: "plum" };
        static POWDERBLUE: Sheet = { maskImage: "powderblue" };
        static PURPLE: Sheet = { maskImage: "purple" };
        static REBECCAPURPLE: Sheet = { maskImage: "rebeccapurple" };
        static RED: Sheet = { maskImage: "red" };
        static ROSYBROWN: Sheet = { maskImage: "rosybrown" };
        static ROYALBLUE: Sheet = { maskImage: "royalblue" };
        static SADDLEBROWN: Sheet = { maskImage: "saddlebrown" };
        static SALMON: Sheet = { maskImage: "salmon" };
        static SANDYBROWN: Sheet = { maskImage: "sandybrown" };
        static SEAGREEN: Sheet = { maskImage: "seagreen" };
        static SEASHELL: Sheet = { maskImage: "seashell" };
        static SIENNA: Sheet = { maskImage: "sienna" };
        static SILVER: Sheet = { maskImage: "silver" };
        static SKYBLUE: Sheet = { maskImage: "skyblue" };
        static SLATEBLUE: Sheet = { maskImage: "slateblue" };
        static SLATEGRAY: Sheet = { maskImage: "slategray" };
        static SLATEGREY: Sheet = { maskImage: "slategrey" };
        static SNOW: Sheet = { maskImage: "snow" };
        static SPRINGGREEN: Sheet = { maskImage: "springgreen" };
        static STEELBLUE: Sheet = { maskImage: "steelblue" };
        static TAN: Sheet = { maskImage: "tan" };
        static TEAL: Sheet = { maskImage: "teal" };
        static THISTLE: Sheet = { maskImage: "thistle" };
        static TOMATO: Sheet = { maskImage: "tomato" };
        static TURQUOISE: Sheet = { maskImage: "turquoise" };
        static VIOLET: Sheet = { maskImage: "violet" };
        static WHEAT: Sheet = { maskImage: "wheat" };
        static WHITE: Sheet = { maskImage: "white" };
        static WHITESMOKE: Sheet = { maskImage: "whitesmoke" };
        static YELLOW: Sheet = { maskImage: "yellow" };
        static YELLOWGREEN: Sheet = { maskImage: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { maskImage: "currentcolor" };
        static ACTIVEBORDER: Sheet = { maskImage: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { maskImage: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { maskImage: "AppWorkspace" };
        static BACKGROUND: Sheet = { maskImage: "Background" };
        static BUTTONFACE: Sheet = { maskImage: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { maskImage: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { maskImage: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { maskImage: "ButtonText" };
        static CAPTIONTEXT: Sheet = { maskImage: "CaptionText" };
        static GRAYTEXT: Sheet = { maskImage: "GrayText" };
        static HIGHLIGHT: Sheet = { maskImage: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { maskImage: "HighlightText" };
        static INACTIVEBORDER: Sheet = { maskImage: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { maskImage: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { maskImage: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { maskImage: "InfoBackground" };
        static INFOTEXT: Sheet = { maskImage: "InfoText" };
        static MENU: Sheet = { maskImage: "Menu" };
        static MENUTEXT: Sheet = { maskImage: "MenuText" };
        static SCROLLBAR: Sheet = { maskImage: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { maskImage: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { maskImage: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { maskImage: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { maskImage: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { maskImage: "ThreeDShadow" };
        static WINDOW: Sheet = { maskImage: "Window" };
        static WINDOWFRAME: Sheet = { maskImage: "WindowFrame" };
        static WINDOWTEXT: Sheet = { maskImage: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ maskImage: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ maskImage: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ maskImage: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ maskImage: Resolution.x(...params) });
        static TO: Sheet = { maskImage: "to" };
        static LEFT: Sheet = { maskImage: "left" };
        static RIGHT: Sheet = { maskImage: "right" };
        static TOP: Sheet = { maskImage: "top" };
        static BOTTOM: Sheet = { maskImage: "bottom" };
        static cap = (...params: number[]): Sheet => ({ maskImage: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maskImage: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maskImage: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maskImage: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maskImage: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maskImage: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maskImage: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maskImage: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maskImage: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maskImage: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maskImage: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maskImage: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maskImage: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maskImage: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maskImage: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maskImage: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maskImage: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maskImage: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maskImage: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maskImage: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maskImage: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maskImage: Length.fr(...params) });
        static CIRCLE: Sheet = { maskImage: "circle" };
        static ELLIPSE: Sheet = { maskImage: "ellipse" };
        static CLOSEST_SIDE: Sheet = { maskImage: "closest-side" };
        static FARTHEST_SIDE: Sheet = { maskImage: "farthest-side" };
        static CLOSEST_CORNER: Sheet = { maskImage: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { maskImage: "farthest-corner" };
        static AT: Sheet = { maskImage: "at" };
        static CENTER: Sheet = { maskImage: "center" };
    }
    export class MaskMode {
        static set = (...params: Param[]): Sheet => ({ maskMode: buildProperty(params) });
        static ALPHA: Sheet = { maskMode: "alpha" };
        static LUMINANCE: Sheet = { maskMode: "luminance" };
        static MATCH_SOURCE: Sheet = { maskMode: "match-source" };
    }
    export class MaskOrigin {
        static set = (...params: Param[]): Sheet => ({ maskOrigin: buildProperty(params) });
        static BORDER_BOX: Sheet = { maskOrigin: "border-box" };
        static PADDING_BOX: Sheet = { maskOrigin: "padding-box" };
        static CONTENT_BOX: Sheet = { maskOrigin: "content-box" };
        static MARGIN_BOX: Sheet = { maskOrigin: "margin-box" };
        static FILL_BOX: Sheet = { maskOrigin: "fill-box" };
        static STROKE_BOX: Sheet = { maskOrigin: "stroke-box" };
        static VIEW_BOX: Sheet = { maskOrigin: "view-box" };
    }
    export class MaskPosition {
        static set = (...params: Param[]): Sheet => ({ maskPosition: buildProperty(params) });
        static LEFT: Sheet = { maskPosition: "left" };
        static CENTER: Sheet = { maskPosition: "center" };
        static RIGHT: Sheet = { maskPosition: "right" };
        static TOP: Sheet = { maskPosition: "top" };
        static BOTTOM: Sheet = { maskPosition: "bottom" };
        static cap = (...params: number[]): Sheet => ({ maskPosition: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maskPosition: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maskPosition: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maskPosition: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maskPosition: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maskPosition: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maskPosition: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maskPosition: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maskPosition: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maskPosition: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maskPosition: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maskPosition: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maskPosition: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maskPosition: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maskPosition: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maskPosition: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maskPosition: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maskPosition: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maskPosition: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maskPosition: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maskPosition: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maskPosition: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ maskPosition: Length.X(...params) });
    }
    export class MaskRepeat {
        static set = (...params: Param[]): Sheet => ({ maskRepeat: buildProperty(params) });
        static REPEAT_X: Sheet = { maskRepeat: "repeat-x" };
        static REPEAT_Y: Sheet = { maskRepeat: "repeat-y" };
        static REPEAT: Sheet = { maskRepeat: "repeat" };
        static SPACE: Sheet = { maskRepeat: "space" };
        static ROUND: Sheet = { maskRepeat: "round" };
        static NO_REPEAT: Sheet = { maskRepeat: "no-repeat" };
    }
    export class MaskSize {
        static set = (...params: Param[]): Sheet => ({ maskSize: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ maskSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maskSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maskSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maskSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maskSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maskSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maskSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maskSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maskSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maskSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maskSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maskSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maskSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maskSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maskSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maskSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maskSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maskSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maskSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maskSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maskSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maskSize: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ maskSize: Length.X(...params) });
        static AUTO: Sheet = { maskSize: "auto" };
        static COVER: Sheet = { maskSize: "cover" };
        static CONTAIN: Sheet = { maskSize: "contain" };
    }
    export class MaskType {
        static set = (...params: Param[]): Sheet => ({ maskType: buildProperty(params) });
        static LUMINANCE: Sheet = { maskType: "luminance" };
        static ALPHA: Sheet = { maskType: "alpha" };
    }
    export class MaxBlockSize {
        static set = (...params: Param[]): Sheet => ({ maxBlockSize: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ maxBlockSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maxBlockSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maxBlockSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maxBlockSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maxBlockSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maxBlockSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maxBlockSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maxBlockSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maxBlockSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maxBlockSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maxBlockSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maxBlockSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maxBlockSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maxBlockSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maxBlockSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maxBlockSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maxBlockSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maxBlockSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maxBlockSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maxBlockSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maxBlockSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maxBlockSize: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ maxBlockSize: Length.X(...params) });
        static NONE: Sheet = { maxBlockSize: "none" };
        static MAX_CONTENT: Sheet = { maxBlockSize: "max-content" };
        static MIN_CONTENT: Sheet = { maxBlockSize: "min-content" };
        static FIT_CONTENT: Sheet = { maxBlockSize: "fit-content" };
        static FILL_AVAILABLE: Sheet = { maxBlockSize: "fill-available" };
    }
    export class MaxHeight {
        static set = (...params: Param[]): Sheet => ({ maxHeight: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ maxHeight: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maxHeight: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maxHeight: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maxHeight: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maxHeight: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maxHeight: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maxHeight: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maxHeight: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maxHeight: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maxHeight: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maxHeight: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maxHeight: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maxHeight: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maxHeight: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maxHeight: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maxHeight: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maxHeight: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maxHeight: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maxHeight: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maxHeight: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maxHeight: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maxHeight: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ maxHeight: Length.X(...params) });
        static NONE: Sheet = { maxHeight: "none" };
        static MAX_CONTENT: Sheet = { maxHeight: "max-content" };
        static MIN_CONTENT: Sheet = { maxHeight: "min-content" };
        static FIT_CONTENT: Sheet = { maxHeight: "fit-content" };
        static FILL_AVAILABLE: Sheet = { maxHeight: "fill-available" };
    }
    export class MaxInlineSize {
        static set = (...params: Param[]): Sheet => ({ maxInlineSize: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ maxInlineSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maxInlineSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maxInlineSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maxInlineSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maxInlineSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maxInlineSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maxInlineSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maxInlineSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maxInlineSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maxInlineSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maxInlineSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maxInlineSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maxInlineSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maxInlineSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maxInlineSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maxInlineSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maxInlineSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maxInlineSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maxInlineSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maxInlineSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maxInlineSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maxInlineSize: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ maxInlineSize: Length.X(...params) });
        static NONE: Sheet = { maxInlineSize: "none" };
        static MAX_CONTENT: Sheet = { maxInlineSize: "max-content" };
        static MIN_CONTENT: Sheet = { maxInlineSize: "min-content" };
        static FIT_CONTENT: Sheet = { maxInlineSize: "fit-content" };
        static FILL_AVAILABLE: Sheet = { maxInlineSize: "fill-available" };
    }
    export class MaxLines {
        static set = (...params: Param[]): Sheet => ({ maxLines: buildProperty(params) });
        static NONE: Sheet = { maxLines: "none" };
    }
    export class MaxWidth {
        static set = (...params: Param[]): Sheet => ({ maxWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ maxWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ maxWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ maxWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ maxWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ maxWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ maxWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ maxWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ maxWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ maxWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ maxWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ maxWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ maxWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ maxWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ maxWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ maxWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ maxWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ maxWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ maxWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ maxWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ maxWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ maxWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ maxWidth: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ maxWidth: Length.X(...params) });
        static NONE: Sheet = { maxWidth: "none" };
        static MAX_CONTENT: Sheet = { maxWidth: "max-content" };
        static MIN_CONTENT: Sheet = { maxWidth: "min-content" };
        static FIT_CONTENT: Sheet = { maxWidth: "fit-content" };
        static FILL_AVAILABLE: Sheet = { maxWidth: "fill-available" };
    }
    export class MinBlockSize {
        static set = (...params: Param[]): Sheet => ({ minBlockSize: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ minBlockSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ minBlockSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ minBlockSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ minBlockSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ minBlockSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ minBlockSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ minBlockSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ minBlockSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ minBlockSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ minBlockSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ minBlockSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ minBlockSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ minBlockSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ minBlockSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ minBlockSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ minBlockSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ minBlockSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ minBlockSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ minBlockSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ minBlockSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ minBlockSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ minBlockSize: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ minBlockSize: Length.X(...params) });
        static AUTO: Sheet = { minBlockSize: "auto" };
        static MAX_CONTENT: Sheet = { minBlockSize: "max-content" };
        static MIN_CONTENT: Sheet = { minBlockSize: "min-content" };
        static FIT_CONTENT: Sheet = { minBlockSize: "fit-content" };
        static FILL_AVAILABLE: Sheet = { minBlockSize: "fill-available" };
    }
    export class MinHeight {
        static set = (...params: Param[]): Sheet => ({ minHeight: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ minHeight: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ minHeight: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ minHeight: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ minHeight: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ minHeight: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ minHeight: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ minHeight: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ minHeight: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ minHeight: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ minHeight: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ minHeight: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ minHeight: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ minHeight: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ minHeight: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ minHeight: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ minHeight: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ minHeight: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ minHeight: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ minHeight: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ minHeight: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ minHeight: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ minHeight: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ minHeight: Length.X(...params) });
        static AUTO: Sheet = { minHeight: "auto" };
        static MAX_CONTENT: Sheet = { minHeight: "max-content" };
        static MIN_CONTENT: Sheet = { minHeight: "min-content" };
        static FIT_CONTENT: Sheet = { minHeight: "fit-content" };
        static FILL_AVAILABLE: Sheet = { minHeight: "fill-available" };
    }
    export class MinInlineSize {
        static set = (...params: Param[]): Sheet => ({ minInlineSize: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ minInlineSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ minInlineSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ minInlineSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ minInlineSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ minInlineSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ minInlineSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ minInlineSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ minInlineSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ minInlineSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ minInlineSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ minInlineSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ minInlineSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ minInlineSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ minInlineSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ minInlineSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ minInlineSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ minInlineSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ minInlineSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ minInlineSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ minInlineSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ minInlineSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ minInlineSize: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ minInlineSize: Length.X(...params) });
        static AUTO: Sheet = { minInlineSize: "auto" };
        static MAX_CONTENT: Sheet = { minInlineSize: "max-content" };
        static MIN_CONTENT: Sheet = { minInlineSize: "min-content" };
        static FIT_CONTENT: Sheet = { minInlineSize: "fit-content" };
        static FILL_AVAILABLE: Sheet = { minInlineSize: "fill-available" };
    }
    export class MinWidth {
        static set = (...params: Param[]): Sheet => ({ minWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ minWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ minWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ minWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ minWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ minWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ minWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ minWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ minWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ minWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ minWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ minWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ minWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ minWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ minWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ minWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ minWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ minWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ minWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ minWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ minWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ minWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ minWidth: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ minWidth: Length.X(...params) });
        static AUTO: Sheet = { minWidth: "auto" };
        static MAX_CONTENT: Sheet = { minWidth: "max-content" };
        static MIN_CONTENT: Sheet = { minWidth: "min-content" };
        static FIT_CONTENT: Sheet = { minWidth: "fit-content" };
        static FILL_AVAILABLE: Sheet = { minWidth: "fill-available" };
    }
    export class MixBlendMode {
        static set = (...params: Param[]): Sheet => ({ mixBlendMode: buildProperty(params) });
        static NORMAL: Sheet = { mixBlendMode: "normal" };
        static MULTIPLY: Sheet = { mixBlendMode: "multiply" };
        static SCREEN: Sheet = { mixBlendMode: "screen" };
        static OVERLAY: Sheet = { mixBlendMode: "overlay" };
        static DARKEN: Sheet = { mixBlendMode: "darken" };
        static LIGHTEN: Sheet = { mixBlendMode: "lighten" };
        static COLOR_DODGE: Sheet = { mixBlendMode: "color-dodge" };
        static COLOR_BURN: Sheet = { mixBlendMode: "color-burn" };
        static HARD_LIGHT: Sheet = { mixBlendMode: "hard-light" };
        static SOFT_LIGHT: Sheet = { mixBlendMode: "soft-light" };
        static DIFFERENCE: Sheet = { mixBlendMode: "difference" };
        static EXCLUSION: Sheet = { mixBlendMode: "exclusion" };
        static HUE: Sheet = { mixBlendMode: "hue" };
        static SATURATION: Sheet = { mixBlendMode: "saturation" };
        static COLOR: Sheet = { mixBlendMode: "color" };
        static LUMINOSITY: Sheet = { mixBlendMode: "luminosity" };
    }
    export class Motion {
        static set = (...params: Param[]): Sheet => ({ motion: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ motion: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ motion: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ motion: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ motion: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ motion: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ motion: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ motion: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ motion: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ motion: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ motion: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ motion: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ motion: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ motion: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ motion: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ motion: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ motion: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ motion: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ motion: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ motion: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ motion: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ motion: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ motion: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ motion: Length.X(...params) });
        static ROUND: Sheet = { motion: "round" };
        static CLOSEST_SIDE: Sheet = { motion: "closest-side" };
        static FARTHEST_SIDE: Sheet = { motion: "farthest-side" };
        static AT: Sheet = { motion: "at" };
        static LEFT: Sheet = { motion: "left" };
        static CENTER: Sheet = { motion: "center" };
        static RIGHT: Sheet = { motion: "right" };
        static TOP: Sheet = { motion: "top" };
        static BOTTOM: Sheet = { motion: "bottom" };
        static NONZERO: Sheet = { motion: "nonzero" };
        static EVENODD: Sheet = { motion: "evenodd" };
        static BORDER_BOX: Sheet = { motion: "border-box" };
        static PADDING_BOX: Sheet = { motion: "padding-box" };
        static CONTENT_BOX: Sheet = { motion: "content-box" };
        static MARGIN_BOX: Sheet = { motion: "margin-box" };
        static FILL_BOX: Sheet = { motion: "fill-box" };
        static STROKE_BOX: Sheet = { motion: "stroke-box" };
        static VIEW_BOX: Sheet = { motion: "view-box" };
        static NONE: Sheet = { motion: "none" };
        static AMP: Sheet = { motion: "amp;" };
        static AUTO: Sheet = { motion: "auto" };
        static REVERSE: Sheet = { motion: "reverse" };
        static deg = (...params: number[]): Sheet => ({ motion: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ motion: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ motion: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ motion: Angle.turn(...params) });
    }
    export class MotionOffset {
        static set = (...params: Param[]): Sheet => ({ motionOffset: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ motionOffset: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ motionOffset: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ motionOffset: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ motionOffset: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ motionOffset: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ motionOffset: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ motionOffset: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ motionOffset: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ motionOffset: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ motionOffset: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ motionOffset: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ motionOffset: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ motionOffset: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ motionOffset: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ motionOffset: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ motionOffset: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ motionOffset: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ motionOffset: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ motionOffset: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ motionOffset: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ motionOffset: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ motionOffset: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ motionOffset: Length.X(...params) });
    }
    export class MotionPath {
        static set = (...params: Param[]): Sheet => ({ motionPath: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ motionPath: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ motionPath: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ motionPath: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ motionPath: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ motionPath: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ motionPath: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ motionPath: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ motionPath: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ motionPath: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ motionPath: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ motionPath: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ motionPath: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ motionPath: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ motionPath: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ motionPath: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ motionPath: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ motionPath: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ motionPath: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ motionPath: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ motionPath: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ motionPath: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ motionPath: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ motionPath: Length.X(...params) });
        static ROUND: Sheet = { motionPath: "round" };
        static CLOSEST_SIDE: Sheet = { motionPath: "closest-side" };
        static FARTHEST_SIDE: Sheet = { motionPath: "farthest-side" };
        static AT: Sheet = { motionPath: "at" };
        static LEFT: Sheet = { motionPath: "left" };
        static CENTER: Sheet = { motionPath: "center" };
        static RIGHT: Sheet = { motionPath: "right" };
        static TOP: Sheet = { motionPath: "top" };
        static BOTTOM: Sheet = { motionPath: "bottom" };
        static NONZERO: Sheet = { motionPath: "nonzero" };
        static EVENODD: Sheet = { motionPath: "evenodd" };
        static BORDER_BOX: Sheet = { motionPath: "border-box" };
        static PADDING_BOX: Sheet = { motionPath: "padding-box" };
        static CONTENT_BOX: Sheet = { motionPath: "content-box" };
        static MARGIN_BOX: Sheet = { motionPath: "margin-box" };
        static FILL_BOX: Sheet = { motionPath: "fill-box" };
        static STROKE_BOX: Sheet = { motionPath: "stroke-box" };
        static VIEW_BOX: Sheet = { motionPath: "view-box" };
        static NONE: Sheet = { motionPath: "none" };
    }
    export class MotionRotation {
        static set = (...params: Param[]): Sheet => ({ motionRotation: buildProperty(params) });
        static AUTO: Sheet = { motionRotation: "auto" };
        static REVERSE: Sheet = { motionRotation: "reverse" };
        static AMP: Sheet = { motionRotation: "amp;" };
        static deg = (...params: number[]): Sheet => ({ motionRotation: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ motionRotation: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ motionRotation: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ motionRotation: Angle.turn(...params) });
    }
    export class ObjectFit {
        static set = (...params: Param[]): Sheet => ({ objectFit: buildProperty(params) });
        static FILL: Sheet = { objectFit: "fill" };
        static CONTAIN: Sheet = { objectFit: "contain" };
        static COVER: Sheet = { objectFit: "cover" };
        static NONE: Sheet = { objectFit: "none" };
        static SCALE_DOWN: Sheet = { objectFit: "scale-down" };
    }
    export class ObjectPosition {
        static set = (...params: Param[]): Sheet => ({ objectPosition: buildProperty(params) });
        static LEFT: Sheet = { objectPosition: "left" };
        static CENTER: Sheet = { objectPosition: "center" };
        static RIGHT: Sheet = { objectPosition: "right" };
        static TOP: Sheet = { objectPosition: "top" };
        static BOTTOM: Sheet = { objectPosition: "bottom" };
        static cap = (...params: number[]): Sheet => ({ objectPosition: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ objectPosition: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ objectPosition: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ objectPosition: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ objectPosition: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ objectPosition: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ objectPosition: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ objectPosition: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ objectPosition: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ objectPosition: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ objectPosition: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ objectPosition: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ objectPosition: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ objectPosition: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ objectPosition: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ objectPosition: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ objectPosition: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ objectPosition: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ objectPosition: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ objectPosition: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ objectPosition: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ objectPosition: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ objectPosition: Length.X(...params) });
    }
    export class OffsetPosition {
        static set = (...params: Param[]): Sheet => ({ offsetPosition: buildProperty(params) });
        static AUTO: Sheet = { offsetPosition: "auto" };
        static LEFT: Sheet = { offsetPosition: "left" };
        static CENTER: Sheet = { offsetPosition: "center" };
        static RIGHT: Sheet = { offsetPosition: "right" };
        static TOP: Sheet = { offsetPosition: "top" };
        static BOTTOM: Sheet = { offsetPosition: "bottom" };
        static cap = (...params: number[]): Sheet => ({ offsetPosition: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ offsetPosition: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ offsetPosition: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ offsetPosition: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ offsetPosition: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ offsetPosition: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ offsetPosition: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ offsetPosition: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ offsetPosition: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ offsetPosition: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ offsetPosition: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ offsetPosition: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ offsetPosition: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ offsetPosition: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ offsetPosition: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ offsetPosition: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ offsetPosition: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ offsetPosition: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ offsetPosition: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ offsetPosition: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ offsetPosition: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ offsetPosition: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ offsetPosition: Length.X(...params) });
    }
    export class Opacity {
        static set = (...params: Param[]): Sheet => ({ opacity: buildProperty(params) });
    }
    export class Order {
        static set = (...params: Param[]): Sheet => ({ order: buildProperty(params) });
    }
    export class Orphans {
        static set = (...params: Param[]): Sheet => ({ orphans: buildProperty(params) });
    }
    export class Outline {
        static set = (...params: Param[]): Sheet => ({ outline: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ outline: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ outline: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ outline: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ outline: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ outline: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { outline: "transparent" };
        static ALICEBLUE: Sheet = { outline: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { outline: "antiquewhite" };
        static AQUA: Sheet = { outline: "aqua" };
        static AQUAMARINE: Sheet = { outline: "aquamarine" };
        static AZURE: Sheet = { outline: "azure" };
        static BEIGE: Sheet = { outline: "beige" };
        static BISQUE: Sheet = { outline: "bisque" };
        static BLACK: Sheet = { outline: "black" };
        static BLANCHEDALMOND: Sheet = { outline: "blanchedalmond" };
        static BLUE: Sheet = { outline: "blue" };
        static BLUEVIOLET: Sheet = { outline: "blueviolet" };
        static BROWN: Sheet = { outline: "brown" };
        static BURLYWOOD: Sheet = { outline: "burlywood" };
        static CADETBLUE: Sheet = { outline: "cadetblue" };
        static CHARTREUSE: Sheet = { outline: "chartreuse" };
        static CHOCOLATE: Sheet = { outline: "chocolate" };
        static CORAL: Sheet = { outline: "coral" };
        static CORNFLOWERBLUE: Sheet = { outline: "cornflowerblue" };
        static CORNSILK: Sheet = { outline: "cornsilk" };
        static CRIMSON: Sheet = { outline: "crimson" };
        static CYAN: Sheet = { outline: "cyan" };
        static DARKBLUE: Sheet = { outline: "darkblue" };
        static DARKCYAN: Sheet = { outline: "darkcyan" };
        static DARKGOLDENROD: Sheet = { outline: "darkgoldenrod" };
        static DARKGRAY: Sheet = { outline: "darkgray" };
        static DARKGREEN: Sheet = { outline: "darkgreen" };
        static DARKGREY: Sheet = { outline: "darkgrey" };
        static DARKKHAKI: Sheet = { outline: "darkkhaki" };
        static DARKMAGENTA: Sheet = { outline: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { outline: "darkolivegreen" };
        static DARKORANGE: Sheet = { outline: "darkorange" };
        static DARKORCHID: Sheet = { outline: "darkorchid" };
        static DARKRED: Sheet = { outline: "darkred" };
        static DARKSALMON: Sheet = { outline: "darksalmon" };
        static DARKSEAGREEN: Sheet = { outline: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { outline: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { outline: "darkslategray" };
        static DARKSLATEGREY: Sheet = { outline: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { outline: "darkturquoise" };
        static DARKVIOLET: Sheet = { outline: "darkviolet" };
        static DEEPPINK: Sheet = { outline: "deeppink" };
        static DEEPSKYBLUE: Sheet = { outline: "deepskyblue" };
        static DIMGRAY: Sheet = { outline: "dimgray" };
        static DIMGREY: Sheet = { outline: "dimgrey" };
        static DODGERBLUE: Sheet = { outline: "dodgerblue" };
        static FIREBRICK: Sheet = { outline: "firebrick" };
        static FLORALWHITE: Sheet = { outline: "floralwhite" };
        static FORESTGREEN: Sheet = { outline: "forestgreen" };
        static FUCHSIA: Sheet = { outline: "fuchsia" };
        static GAINSBORO: Sheet = { outline: "gainsboro" };
        static GHOSTWHITE: Sheet = { outline: "ghostwhite" };
        static GOLD: Sheet = { outline: "gold" };
        static GOLDENROD: Sheet = { outline: "goldenrod" };
        static GRAY: Sheet = { outline: "gray" };
        static GREEN: Sheet = { outline: "green" };
        static GREENYELLOW: Sheet = { outline: "greenyellow" };
        static GREY: Sheet = { outline: "grey" };
        static HONEYDEW: Sheet = { outline: "honeydew" };
        static HOTPINK: Sheet = { outline: "hotpink" };
        static INDIANRED: Sheet = { outline: "indianred" };
        static INDIGO: Sheet = { outline: "indigo" };
        static IVORY: Sheet = { outline: "ivory" };
        static KHAKI: Sheet = { outline: "khaki" };
        static LAVENDER: Sheet = { outline: "lavender" };
        static LAVENDERBLUSH: Sheet = { outline: "lavenderblush" };
        static LAWNGREEN: Sheet = { outline: "lawngreen" };
        static LEMONCHIFFON: Sheet = { outline: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { outline: "lightblue" };
        static LIGHTCORAL: Sheet = { outline: "lightcoral" };
        static LIGHTCYAN: Sheet = { outline: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { outline: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { outline: "lightgray" };
        static LIGHTGREEN: Sheet = { outline: "lightgreen" };
        static LIGHTGREY: Sheet = { outline: "lightgrey" };
        static LIGHTPINK: Sheet = { outline: "lightpink" };
        static LIGHTSALMON: Sheet = { outline: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { outline: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { outline: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { outline: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { outline: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { outline: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { outline: "lightyellow" };
        static LIME: Sheet = { outline: "lime" };
        static LIMEGREEN: Sheet = { outline: "limegreen" };
        static LINEN: Sheet = { outline: "linen" };
        static MAGENTA: Sheet = { outline: "magenta" };
        static MAROON: Sheet = { outline: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { outline: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { outline: "mediumblue" };
        static MEDIUMORCHID: Sheet = { outline: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { outline: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { outline: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { outline: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { outline: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { outline: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { outline: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { outline: "midnightblue" };
        static MINTCREAM: Sheet = { outline: "mintcream" };
        static MISTYROSE: Sheet = { outline: "mistyrose" };
        static MOCCASIN: Sheet = { outline: "moccasin" };
        static NAVAJOWHITE: Sheet = { outline: "navajowhite" };
        static NAVY: Sheet = { outline: "navy" };
        static OLDLACE: Sheet = { outline: "oldlace" };
        static OLIVE: Sheet = { outline: "olive" };
        static OLIVEDRAB: Sheet = { outline: "olivedrab" };
        static ORANGE: Sheet = { outline: "orange" };
        static ORANGERED: Sheet = { outline: "orangered" };
        static ORCHID: Sheet = { outline: "orchid" };
        static PALEGOLDENROD: Sheet = { outline: "palegoldenrod" };
        static PALEGREEN: Sheet = { outline: "palegreen" };
        static PALETURQUOISE: Sheet = { outline: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { outline: "palevioletred" };
        static PAPAYAWHIP: Sheet = { outline: "papayawhip" };
        static PEACHPUFF: Sheet = { outline: "peachpuff" };
        static PERU: Sheet = { outline: "peru" };
        static PINK: Sheet = { outline: "pink" };
        static PLUM: Sheet = { outline: "plum" };
        static POWDERBLUE: Sheet = { outline: "powderblue" };
        static PURPLE: Sheet = { outline: "purple" };
        static REBECCAPURPLE: Sheet = { outline: "rebeccapurple" };
        static RED: Sheet = { outline: "red" };
        static ROSYBROWN: Sheet = { outline: "rosybrown" };
        static ROYALBLUE: Sheet = { outline: "royalblue" };
        static SADDLEBROWN: Sheet = { outline: "saddlebrown" };
        static SALMON: Sheet = { outline: "salmon" };
        static SANDYBROWN: Sheet = { outline: "sandybrown" };
        static SEAGREEN: Sheet = { outline: "seagreen" };
        static SEASHELL: Sheet = { outline: "seashell" };
        static SIENNA: Sheet = { outline: "sienna" };
        static SILVER: Sheet = { outline: "silver" };
        static SKYBLUE: Sheet = { outline: "skyblue" };
        static SLATEBLUE: Sheet = { outline: "slateblue" };
        static SLATEGRAY: Sheet = { outline: "slategray" };
        static SLATEGREY: Sheet = { outline: "slategrey" };
        static SNOW: Sheet = { outline: "snow" };
        static SPRINGGREEN: Sheet = { outline: "springgreen" };
        static STEELBLUE: Sheet = { outline: "steelblue" };
        static TAN: Sheet = { outline: "tan" };
        static TEAL: Sheet = { outline: "teal" };
        static THISTLE: Sheet = { outline: "thistle" };
        static TOMATO: Sheet = { outline: "tomato" };
        static TURQUOISE: Sheet = { outline: "turquoise" };
        static VIOLET: Sheet = { outline: "violet" };
        static WHEAT: Sheet = { outline: "wheat" };
        static WHITE: Sheet = { outline: "white" };
        static WHITESMOKE: Sheet = { outline: "whitesmoke" };
        static YELLOW: Sheet = { outline: "yellow" };
        static YELLOWGREEN: Sheet = { outline: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { outline: "currentcolor" };
        static ACTIVEBORDER: Sheet = { outline: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { outline: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { outline: "AppWorkspace" };
        static BACKGROUND: Sheet = { outline: "Background" };
        static BUTTONFACE: Sheet = { outline: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { outline: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { outline: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { outline: "ButtonText" };
        static CAPTIONTEXT: Sheet = { outline: "CaptionText" };
        static GRAYTEXT: Sheet = { outline: "GrayText" };
        static HIGHLIGHT: Sheet = { outline: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { outline: "HighlightText" };
        static INACTIVEBORDER: Sheet = { outline: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { outline: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { outline: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { outline: "InfoBackground" };
        static INFOTEXT: Sheet = { outline: "InfoText" };
        static MENU: Sheet = { outline: "Menu" };
        static MENUTEXT: Sheet = { outline: "MenuText" };
        static SCROLLBAR: Sheet = { outline: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { outline: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { outline: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { outline: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { outline: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { outline: "ThreeDShadow" };
        static WINDOW: Sheet = { outline: "Window" };
        static WINDOWFRAME: Sheet = { outline: "WindowFrame" };
        static WINDOWTEXT: Sheet = { outline: "WindowText" };
        static INVERT: Sheet = { outline: "invert" };
        static AUTO: Sheet = { outline: "auto" };
        static NONE: Sheet = { outline: "none" };
        static HIDDEN: Sheet = { outline: "hidden" };
        static DOTTED: Sheet = { outline: "dotted" };
        static DASHED: Sheet = { outline: "dashed" };
        static SOLID: Sheet = { outline: "solid" };
        static DOUBLE: Sheet = { outline: "double" };
        static GROOVE: Sheet = { outline: "groove" };
        static RIDGE: Sheet = { outline: "ridge" };
        static INSET: Sheet = { outline: "inset" };
        static OUTSET: Sheet = { outline: "outset" };
        static cap = (...params: number[]): Sheet => ({ outline: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ outline: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ outline: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ outline: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ outline: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ outline: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ outline: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ outline: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ outline: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ outline: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ outline: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ outline: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ outline: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ outline: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ outline: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ outline: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ outline: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ outline: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ outline: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ outline: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ outline: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ outline: Length.fr(...params) });
        static THIN: Sheet = { outline: "thin" };
        static MEDIUM: Sheet = { outline: "medium" };
        static THICK: Sheet = { outline: "thick" };
    }
    export class OutlineColor {
        static set = (...params: Param[]): Sheet => ({ outlineColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ outlineColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ outlineColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ outlineColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ outlineColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ outlineColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { outlineColor: "transparent" };
        static ALICEBLUE: Sheet = { outlineColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { outlineColor: "antiquewhite" };
        static AQUA: Sheet = { outlineColor: "aqua" };
        static AQUAMARINE: Sheet = { outlineColor: "aquamarine" };
        static AZURE: Sheet = { outlineColor: "azure" };
        static BEIGE: Sheet = { outlineColor: "beige" };
        static BISQUE: Sheet = { outlineColor: "bisque" };
        static BLACK: Sheet = { outlineColor: "black" };
        static BLANCHEDALMOND: Sheet = { outlineColor: "blanchedalmond" };
        static BLUE: Sheet = { outlineColor: "blue" };
        static BLUEVIOLET: Sheet = { outlineColor: "blueviolet" };
        static BROWN: Sheet = { outlineColor: "brown" };
        static BURLYWOOD: Sheet = { outlineColor: "burlywood" };
        static CADETBLUE: Sheet = { outlineColor: "cadetblue" };
        static CHARTREUSE: Sheet = { outlineColor: "chartreuse" };
        static CHOCOLATE: Sheet = { outlineColor: "chocolate" };
        static CORAL: Sheet = { outlineColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { outlineColor: "cornflowerblue" };
        static CORNSILK: Sheet = { outlineColor: "cornsilk" };
        static CRIMSON: Sheet = { outlineColor: "crimson" };
        static CYAN: Sheet = { outlineColor: "cyan" };
        static DARKBLUE: Sheet = { outlineColor: "darkblue" };
        static DARKCYAN: Sheet = { outlineColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { outlineColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { outlineColor: "darkgray" };
        static DARKGREEN: Sheet = { outlineColor: "darkgreen" };
        static DARKGREY: Sheet = { outlineColor: "darkgrey" };
        static DARKKHAKI: Sheet = { outlineColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { outlineColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { outlineColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { outlineColor: "darkorange" };
        static DARKORCHID: Sheet = { outlineColor: "darkorchid" };
        static DARKRED: Sheet = { outlineColor: "darkred" };
        static DARKSALMON: Sheet = { outlineColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { outlineColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { outlineColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { outlineColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { outlineColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { outlineColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { outlineColor: "darkviolet" };
        static DEEPPINK: Sheet = { outlineColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { outlineColor: "deepskyblue" };
        static DIMGRAY: Sheet = { outlineColor: "dimgray" };
        static DIMGREY: Sheet = { outlineColor: "dimgrey" };
        static DODGERBLUE: Sheet = { outlineColor: "dodgerblue" };
        static FIREBRICK: Sheet = { outlineColor: "firebrick" };
        static FLORALWHITE: Sheet = { outlineColor: "floralwhite" };
        static FORESTGREEN: Sheet = { outlineColor: "forestgreen" };
        static FUCHSIA: Sheet = { outlineColor: "fuchsia" };
        static GAINSBORO: Sheet = { outlineColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { outlineColor: "ghostwhite" };
        static GOLD: Sheet = { outlineColor: "gold" };
        static GOLDENROD: Sheet = { outlineColor: "goldenrod" };
        static GRAY: Sheet = { outlineColor: "gray" };
        static GREEN: Sheet = { outlineColor: "green" };
        static GREENYELLOW: Sheet = { outlineColor: "greenyellow" };
        static GREY: Sheet = { outlineColor: "grey" };
        static HONEYDEW: Sheet = { outlineColor: "honeydew" };
        static HOTPINK: Sheet = { outlineColor: "hotpink" };
        static INDIANRED: Sheet = { outlineColor: "indianred" };
        static INDIGO: Sheet = { outlineColor: "indigo" };
        static IVORY: Sheet = { outlineColor: "ivory" };
        static KHAKI: Sheet = { outlineColor: "khaki" };
        static LAVENDER: Sheet = { outlineColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { outlineColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { outlineColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { outlineColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { outlineColor: "lightblue" };
        static LIGHTCORAL: Sheet = { outlineColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { outlineColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { outlineColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { outlineColor: "lightgray" };
        static LIGHTGREEN: Sheet = { outlineColor: "lightgreen" };
        static LIGHTGREY: Sheet = { outlineColor: "lightgrey" };
        static LIGHTPINK: Sheet = { outlineColor: "lightpink" };
        static LIGHTSALMON: Sheet = { outlineColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { outlineColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { outlineColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { outlineColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { outlineColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { outlineColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { outlineColor: "lightyellow" };
        static LIME: Sheet = { outlineColor: "lime" };
        static LIMEGREEN: Sheet = { outlineColor: "limegreen" };
        static LINEN: Sheet = { outlineColor: "linen" };
        static MAGENTA: Sheet = { outlineColor: "magenta" };
        static MAROON: Sheet = { outlineColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { outlineColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { outlineColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { outlineColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { outlineColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { outlineColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { outlineColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { outlineColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { outlineColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { outlineColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { outlineColor: "midnightblue" };
        static MINTCREAM: Sheet = { outlineColor: "mintcream" };
        static MISTYROSE: Sheet = { outlineColor: "mistyrose" };
        static MOCCASIN: Sheet = { outlineColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { outlineColor: "navajowhite" };
        static NAVY: Sheet = { outlineColor: "navy" };
        static OLDLACE: Sheet = { outlineColor: "oldlace" };
        static OLIVE: Sheet = { outlineColor: "olive" };
        static OLIVEDRAB: Sheet = { outlineColor: "olivedrab" };
        static ORANGE: Sheet = { outlineColor: "orange" };
        static ORANGERED: Sheet = { outlineColor: "orangered" };
        static ORCHID: Sheet = { outlineColor: "orchid" };
        static PALEGOLDENROD: Sheet = { outlineColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { outlineColor: "palegreen" };
        static PALETURQUOISE: Sheet = { outlineColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { outlineColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { outlineColor: "papayawhip" };
        static PEACHPUFF: Sheet = { outlineColor: "peachpuff" };
        static PERU: Sheet = { outlineColor: "peru" };
        static PINK: Sheet = { outlineColor: "pink" };
        static PLUM: Sheet = { outlineColor: "plum" };
        static POWDERBLUE: Sheet = { outlineColor: "powderblue" };
        static PURPLE: Sheet = { outlineColor: "purple" };
        static REBECCAPURPLE: Sheet = { outlineColor: "rebeccapurple" };
        static RED: Sheet = { outlineColor: "red" };
        static ROSYBROWN: Sheet = { outlineColor: "rosybrown" };
        static ROYALBLUE: Sheet = { outlineColor: "royalblue" };
        static SADDLEBROWN: Sheet = { outlineColor: "saddlebrown" };
        static SALMON: Sheet = { outlineColor: "salmon" };
        static SANDYBROWN: Sheet = { outlineColor: "sandybrown" };
        static SEAGREEN: Sheet = { outlineColor: "seagreen" };
        static SEASHELL: Sheet = { outlineColor: "seashell" };
        static SIENNA: Sheet = { outlineColor: "sienna" };
        static SILVER: Sheet = { outlineColor: "silver" };
        static SKYBLUE: Sheet = { outlineColor: "skyblue" };
        static SLATEBLUE: Sheet = { outlineColor: "slateblue" };
        static SLATEGRAY: Sheet = { outlineColor: "slategray" };
        static SLATEGREY: Sheet = { outlineColor: "slategrey" };
        static SNOW: Sheet = { outlineColor: "snow" };
        static SPRINGGREEN: Sheet = { outlineColor: "springgreen" };
        static STEELBLUE: Sheet = { outlineColor: "steelblue" };
        static TAN: Sheet = { outlineColor: "tan" };
        static TEAL: Sheet = { outlineColor: "teal" };
        static THISTLE: Sheet = { outlineColor: "thistle" };
        static TOMATO: Sheet = { outlineColor: "tomato" };
        static TURQUOISE: Sheet = { outlineColor: "turquoise" };
        static VIOLET: Sheet = { outlineColor: "violet" };
        static WHEAT: Sheet = { outlineColor: "wheat" };
        static WHITE: Sheet = { outlineColor: "white" };
        static WHITESMOKE: Sheet = { outlineColor: "whitesmoke" };
        static YELLOW: Sheet = { outlineColor: "yellow" };
        static YELLOWGREEN: Sheet = { outlineColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { outlineColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { outlineColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { outlineColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { outlineColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { outlineColor: "Background" };
        static BUTTONFACE: Sheet = { outlineColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { outlineColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { outlineColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { outlineColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { outlineColor: "CaptionText" };
        static GRAYTEXT: Sheet = { outlineColor: "GrayText" };
        static HIGHLIGHT: Sheet = { outlineColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { outlineColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { outlineColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { outlineColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { outlineColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { outlineColor: "InfoBackground" };
        static INFOTEXT: Sheet = { outlineColor: "InfoText" };
        static MENU: Sheet = { outlineColor: "Menu" };
        static MENUTEXT: Sheet = { outlineColor: "MenuText" };
        static SCROLLBAR: Sheet = { outlineColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { outlineColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { outlineColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { outlineColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { outlineColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { outlineColor: "ThreeDShadow" };
        static WINDOW: Sheet = { outlineColor: "Window" };
        static WINDOWFRAME: Sheet = { outlineColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { outlineColor: "WindowText" };
        static INVERT: Sheet = { outlineColor: "invert" };
    }
    export class OutlineOffset {
        static set = (...params: Param[]): Sheet => ({ outlineOffset: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ outlineOffset: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ outlineOffset: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ outlineOffset: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ outlineOffset: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ outlineOffset: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ outlineOffset: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ outlineOffset: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ outlineOffset: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ outlineOffset: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ outlineOffset: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ outlineOffset: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ outlineOffset: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ outlineOffset: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ outlineOffset: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ outlineOffset: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ outlineOffset: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ outlineOffset: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ outlineOffset: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ outlineOffset: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ outlineOffset: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ outlineOffset: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ outlineOffset: Length.fr(...params) });
    }
    export class OutlineStyle {
        static set = (...params: Param[]): Sheet => ({ outlineStyle: buildProperty(params) });
        static AUTO: Sheet = { outlineStyle: "auto" };
        static NONE: Sheet = { outlineStyle: "none" };
        static HIDDEN: Sheet = { outlineStyle: "hidden" };
        static DOTTED: Sheet = { outlineStyle: "dotted" };
        static DASHED: Sheet = { outlineStyle: "dashed" };
        static SOLID: Sheet = { outlineStyle: "solid" };
        static DOUBLE: Sheet = { outlineStyle: "double" };
        static GROOVE: Sheet = { outlineStyle: "groove" };
        static RIDGE: Sheet = { outlineStyle: "ridge" };
        static INSET: Sheet = { outlineStyle: "inset" };
        static OUTSET: Sheet = { outlineStyle: "outset" };
    }
    export class OutlineWidth {
        static set = (...params: Param[]): Sheet => ({ outlineWidth: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ outlineWidth: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ outlineWidth: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ outlineWidth: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ outlineWidth: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ outlineWidth: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ outlineWidth: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ outlineWidth: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ outlineWidth: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ outlineWidth: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ outlineWidth: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ outlineWidth: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ outlineWidth: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ outlineWidth: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ outlineWidth: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ outlineWidth: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ outlineWidth: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ outlineWidth: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ outlineWidth: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ outlineWidth: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ outlineWidth: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ outlineWidth: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ outlineWidth: Length.fr(...params) });
        static THIN: Sheet = { outlineWidth: "thin" };
        static MEDIUM: Sheet = { outlineWidth: "medium" };
        static THICK: Sheet = { outlineWidth: "thick" };
    }
    export class Overflow {
        static set = (...params: Param[]): Sheet => ({ overflow: buildProperty(params) });
        static VISIBLE: Sheet = { overflow: "visible" };
        static HIDDEN: Sheet = { overflow: "hidden" };
        static CLIP: Sheet = { overflow: "clip" };
        static SCROLL: Sheet = { overflow: "scroll" };
        static AUTO: Sheet = { overflow: "auto" };
    }
    export class OverflowAnchor {
        static set = (...params: Param[]): Sheet => ({ overflowAnchor: buildProperty(params) });
        static AUTO: Sheet = { overflowAnchor: "auto" };
        static NONE: Sheet = { overflowAnchor: "none" };
    }
    export class OverflowBlock {
        static set = (...params: Param[]): Sheet => ({ overflowBlock: buildProperty(params) });
        static VISIBLE: Sheet = { overflowBlock: "visible" };
        static HIDDEN: Sheet = { overflowBlock: "hidden" };
        static CLIP: Sheet = { overflowBlock: "clip" };
        static SCROLL: Sheet = { overflowBlock: "scroll" };
        static AUTO: Sheet = { overflowBlock: "auto" };
    }
    export class OverflowClipBox {
        static set = (...params: Param[]): Sheet => ({ overflowClipBox: buildProperty(params) });
        static PADDING_BOX: Sheet = { overflowClipBox: "padding-box" };
        static CONTENT_BOX: Sheet = { overflowClipBox: "content-box" };
    }
    export class OverflowInline {
        static set = (...params: Param[]): Sheet => ({ overflowInline: buildProperty(params) });
        static VISIBLE: Sheet = { overflowInline: "visible" };
        static HIDDEN: Sheet = { overflowInline: "hidden" };
        static CLIP: Sheet = { overflowInline: "clip" };
        static SCROLL: Sheet = { overflowInline: "scroll" };
        static AUTO: Sheet = { overflowInline: "auto" };
    }
    export class OverflowWrap {
        static set = (...params: Param[]): Sheet => ({ overflowWrap: buildProperty(params) });
        static NORMAL: Sheet = { overflowWrap: "normal" };
        static BREAK_WORD: Sheet = { overflowWrap: "break-word" };
    }
    export class OverflowX {
        static set = (...params: Param[]): Sheet => ({ overflowX: buildProperty(params) });
        static VISIBLE: Sheet = { overflowX: "visible" };
        static HIDDEN: Sheet = { overflowX: "hidden" };
        static CLIP: Sheet = { overflowX: "clip" };
        static SCROLL: Sheet = { overflowX: "scroll" };
        static AUTO: Sheet = { overflowX: "auto" };
    }
    export class OverflowY {
        static set = (...params: Param[]): Sheet => ({ overflowY: buildProperty(params) });
        static VISIBLE: Sheet = { overflowY: "visible" };
        static HIDDEN: Sheet = { overflowY: "hidden" };
        static CLIP: Sheet = { overflowY: "clip" };
        static SCROLL: Sheet = { overflowY: "scroll" };
        static AUTO: Sheet = { overflowY: "auto" };
    }
    export class OverscrollBehavior {
        static set = (...params: Param[]): Sheet => ({ overscrollBehavior: buildProperty(params) });
        static CONTAIN: Sheet = { overscrollBehavior: "contain" };
        static NONE: Sheet = { overscrollBehavior: "none" };
        static AUTO: Sheet = { overscrollBehavior: "auto" };
    }
    export class OverscrollBehaviorX {
        static set = (...params: Param[]): Sheet => ({ overscrollBehaviorX: buildProperty(params) });
        static CONTAIN: Sheet = { overscrollBehaviorX: "contain" };
        static NONE: Sheet = { overscrollBehaviorX: "none" };
        static AUTO: Sheet = { overscrollBehaviorX: "auto" };
    }
    export class OverscrollBehaviorY {
        static set = (...params: Param[]): Sheet => ({ overscrollBehaviorY: buildProperty(params) });
        static CONTAIN: Sheet = { overscrollBehaviorY: "contain" };
        static NONE: Sheet = { overscrollBehaviorY: "none" };
        static AUTO: Sheet = { overscrollBehaviorY: "auto" };
    }
    export class Padding {
        static set = (...params: Param[]): Sheet => ({ padding: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ padding: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ padding: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ padding: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ padding: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ padding: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ padding: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ padding: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ padding: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ padding: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ padding: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ padding: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ padding: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ padding: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ padding: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ padding: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ padding: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ padding: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ padding: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ padding: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ padding: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ padding: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ padding: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ padding: Length.X(...params) });
    }
    export class PaddingBlockEnd {
        static set = (...params: Param[]): Sheet => ({ paddingBlockEnd: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ paddingBlockEnd: Length.X(...params) });
    }
    export class PaddingBlockStart {
        static set = (...params: Param[]): Sheet => ({ paddingBlockStart: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ paddingBlockStart: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ paddingBlockStart: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ paddingBlockStart: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ paddingBlockStart: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ paddingBlockStart: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ paddingBlockStart: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ paddingBlockStart: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ paddingBlockStart: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ paddingBlockStart: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ paddingBlockStart: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ paddingBlockStart: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ paddingBlockStart: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ paddingBlockStart: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ paddingBlockStart: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ paddingBlockStart: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ paddingBlockStart: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ paddingBlockStart: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ paddingBlockStart: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ paddingBlockStart: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ paddingBlockStart: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ paddingBlockStart: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ paddingBlockStart: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ paddingBlockStart: Length.X(...params) });
    }
    export class PaddingBottom {
        static set = (...params: Param[]): Sheet => ({ paddingBottom: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ paddingBottom: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ paddingBottom: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ paddingBottom: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ paddingBottom: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ paddingBottom: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ paddingBottom: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ paddingBottom: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ paddingBottom: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ paddingBottom: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ paddingBottom: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ paddingBottom: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ paddingBottom: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ paddingBottom: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ paddingBottom: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ paddingBottom: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ paddingBottom: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ paddingBottom: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ paddingBottom: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ paddingBottom: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ paddingBottom: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ paddingBottom: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ paddingBottom: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ paddingBottom: Length.X(...params) });
    }
    export class PaddingInlineEnd {
        static set = (...params: Param[]): Sheet => ({ paddingInlineEnd: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ paddingInlineEnd: Length.X(...params) });
    }
    export class PaddingInlineStart {
        static set = (...params: Param[]): Sheet => ({ paddingInlineStart: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ paddingInlineStart: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ paddingInlineStart: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ paddingInlineStart: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ paddingInlineStart: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ paddingInlineStart: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ paddingInlineStart: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ paddingInlineStart: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ paddingInlineStart: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ paddingInlineStart: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ paddingInlineStart: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ paddingInlineStart: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ paddingInlineStart: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ paddingInlineStart: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ paddingInlineStart: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ paddingInlineStart: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ paddingInlineStart: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ paddingInlineStart: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ paddingInlineStart: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ paddingInlineStart: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ paddingInlineStart: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ paddingInlineStart: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ paddingInlineStart: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ paddingInlineStart: Length.X(...params) });
    }
    export class PaddingLeft {
        static set = (...params: Param[]): Sheet => ({ paddingLeft: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ paddingLeft: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ paddingLeft: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ paddingLeft: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ paddingLeft: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ paddingLeft: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ paddingLeft: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ paddingLeft: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ paddingLeft: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ paddingLeft: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ paddingLeft: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ paddingLeft: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ paddingLeft: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ paddingLeft: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ paddingLeft: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ paddingLeft: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ paddingLeft: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ paddingLeft: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ paddingLeft: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ paddingLeft: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ paddingLeft: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ paddingLeft: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ paddingLeft: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ paddingLeft: Length.X(...params) });
    }
    export class PaddingRight {
        static set = (...params: Param[]): Sheet => ({ paddingRight: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ paddingRight: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ paddingRight: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ paddingRight: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ paddingRight: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ paddingRight: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ paddingRight: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ paddingRight: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ paddingRight: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ paddingRight: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ paddingRight: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ paddingRight: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ paddingRight: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ paddingRight: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ paddingRight: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ paddingRight: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ paddingRight: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ paddingRight: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ paddingRight: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ paddingRight: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ paddingRight: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ paddingRight: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ paddingRight: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ paddingRight: Length.X(...params) });
    }
    export class PaddingTop {
        static set = (...params: Param[]): Sheet => ({ paddingTop: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ paddingTop: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ paddingTop: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ paddingTop: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ paddingTop: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ paddingTop: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ paddingTop: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ paddingTop: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ paddingTop: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ paddingTop: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ paddingTop: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ paddingTop: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ paddingTop: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ paddingTop: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ paddingTop: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ paddingTop: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ paddingTop: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ paddingTop: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ paddingTop: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ paddingTop: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ paddingTop: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ paddingTop: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ paddingTop: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ paddingTop: Length.X(...params) });
    }
    export class PageBreakAfter {
        static set = (...params: Param[]): Sheet => ({ pageBreakAfter: buildProperty(params) });
        static AUTO: Sheet = { pageBreakAfter: "auto" };
        static ALWAYS: Sheet = { pageBreakAfter: "always" };
        static AVOID: Sheet = { pageBreakAfter: "avoid" };
        static LEFT: Sheet = { pageBreakAfter: "left" };
        static RIGHT: Sheet = { pageBreakAfter: "right" };
        static RECTO: Sheet = { pageBreakAfter: "recto" };
        static VERSO: Sheet = { pageBreakAfter: "verso" };
    }
    export class PageBreakBefore {
        static set = (...params: Param[]): Sheet => ({ pageBreakBefore: buildProperty(params) });
        static AUTO: Sheet = { pageBreakBefore: "auto" };
        static ALWAYS: Sheet = { pageBreakBefore: "always" };
        static AVOID: Sheet = { pageBreakBefore: "avoid" };
        static LEFT: Sheet = { pageBreakBefore: "left" };
        static RIGHT: Sheet = { pageBreakBefore: "right" };
        static RECTO: Sheet = { pageBreakBefore: "recto" };
        static VERSO: Sheet = { pageBreakBefore: "verso" };
    }
    export class PageBreakInside {
        static set = (...params: Param[]): Sheet => ({ pageBreakInside: buildProperty(params) });
        static AUTO: Sheet = { pageBreakInside: "auto" };
        static AVOID: Sheet = { pageBreakInside: "avoid" };
    }
    export class PaintOrder {
        static set = (...params: Param[]): Sheet => ({ paintOrder: buildProperty(params) });
        static NORMAL: Sheet = { paintOrder: "normal" };
        static FILL: Sheet = { paintOrder: "fill" };
        static STROKE: Sheet = { paintOrder: "stroke" };
        static MARKERS: Sheet = { paintOrder: "markers" };
    }
    export class Perspective {
        static set = (...params: Param[]): Sheet => ({ perspective: buildProperty(params) });
        static NONE: Sheet = { perspective: "none" };
        static cap = (...params: number[]): Sheet => ({ perspective: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ perspective: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ perspective: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ perspective: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ perspective: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ perspective: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ perspective: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ perspective: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ perspective: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ perspective: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ perspective: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ perspective: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ perspective: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ perspective: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ perspective: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ perspective: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ perspective: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ perspective: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ perspective: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ perspective: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ perspective: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ perspective: Length.fr(...params) });
    }
    export class PerspectiveOrigin {
        static set = (...params: Param[]): Sheet => ({ perspectiveOrigin: buildProperty(params) });
        static LEFT: Sheet = { perspectiveOrigin: "left" };
        static CENTER: Sheet = { perspectiveOrigin: "center" };
        static RIGHT: Sheet = { perspectiveOrigin: "right" };
        static TOP: Sheet = { perspectiveOrigin: "top" };
        static BOTTOM: Sheet = { perspectiveOrigin: "bottom" };
        static cap = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ perspectiveOrigin: Length.X(...params) });
    }
    export class PlaceContent {
        static set = (...params: Param[]): Sheet => ({ placeContent: buildProperty(params) });
        static NORMAL: Sheet = { placeContent: "normal" };
        static FIRST: Sheet = { placeContent: "first" };
        static LAST: Sheet = { placeContent: "last" };
        static BASELINE: Sheet = { placeContent: "baseline" };
        static SPACE_BETWEEN: Sheet = { placeContent: "space-between" };
        static SPACE_AROUND: Sheet = { placeContent: "space-around" };
        static SPACE_EVENLY: Sheet = { placeContent: "space-evenly" };
        static STRETCH: Sheet = { placeContent: "stretch" };
        static UNSAFE: Sheet = { placeContent: "unsafe" };
        static SAFE: Sheet = { placeContent: "safe" };
        static CENTER: Sheet = { placeContent: "center" };
        static START: Sheet = { placeContent: "start" };
        static END: Sheet = { placeContent: "end" };
        static FLEX_START: Sheet = { placeContent: "flex-start" };
        static FLEX_END: Sheet = { placeContent: "flex-end" };
        static LEFT: Sheet = { placeContent: "left" };
        static RIGHT: Sheet = { placeContent: "right" };
    }
    export class PlaceItems {
        static set = (...params: Param[]): Sheet => ({ placeItems: buildProperty(params) });
        static NORMAL: Sheet = { placeItems: "normal" };
        static STRETCH: Sheet = { placeItems: "stretch" };
        static FIRST: Sheet = { placeItems: "first" };
        static LAST: Sheet = { placeItems: "last" };
        static BASELINE: Sheet = { placeItems: "baseline" };
        static UNSAFE: Sheet = { placeItems: "unsafe" };
        static SAFE: Sheet = { placeItems: "safe" };
        static CENTER: Sheet = { placeItems: "center" };
        static START: Sheet = { placeItems: "start" };
        static END: Sheet = { placeItems: "end" };
        static SELF_START: Sheet = { placeItems: "self-start" };
        static SELF_END: Sheet = { placeItems: "self-end" };
        static FLEX_START: Sheet = { placeItems: "flex-start" };
        static FLEX_END: Sheet = { placeItems: "flex-end" };
        static LEFT: Sheet = { placeItems: "left" };
        static RIGHT: Sheet = { placeItems: "right" };
        static LEGACY: Sheet = { placeItems: "legacy" };
    }
    export class PointerEvents {
        static set = (...params: Param[]): Sheet => ({ pointerEvents: buildProperty(params) });
        static AUTO: Sheet = { pointerEvents: "auto" };
        static NONE: Sheet = { pointerEvents: "none" };
        static VISIBLEPAINTED: Sheet = { pointerEvents: "visiblePainted" };
        static VISIBLEFILL: Sheet = { pointerEvents: "visibleFill" };
        static VISIBLESTROKE: Sheet = { pointerEvents: "visibleStroke" };
        static VISIBLE: Sheet = { pointerEvents: "visible" };
        static PAINTED: Sheet = { pointerEvents: "painted" };
        static FILL: Sheet = { pointerEvents: "fill" };
        static STROKE: Sheet = { pointerEvents: "stroke" };
        static ALL: Sheet = { pointerEvents: "all" };
        static INHERIT: Sheet = { pointerEvents: "inherit" };
    }
    export class Position {
        static set = (...params: Param[]): Sheet => ({ position: buildProperty(params) });
        static STATIC: Sheet = { position: "static" };
        static RELATIVE: Sheet = { position: "relative" };
        static ABSOLUTE: Sheet = { position: "absolute" };
        static STICKY: Sheet = { position: "sticky" };
        static FIXED: Sheet = { position: "fixed" };
    }
    export class Quotes {
        static set = (...params: Param[]): Sheet => ({ quotes: buildProperty(params) });
        static NONE: Sheet = { quotes: "none" };
    }
    export class Resize {
        static set = (...params: Param[]): Sheet => ({ resize: buildProperty(params) });
        static NONE: Sheet = { resize: "none" };
        static BOTH: Sheet = { resize: "both" };
        static HORIZONTAL: Sheet = { resize: "horizontal" };
        static VERTICAL: Sheet = { resize: "vertical" };
        static BLOCK: Sheet = { resize: "block" };
        static INLINE: Sheet = { resize: "inline" };
    }
    export class Right {
        static set = (...params: Param[]): Sheet => ({ right: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ right: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ right: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ right: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ right: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ right: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ right: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ right: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ right: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ right: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ right: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ right: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ right: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ right: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ right: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ right: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ right: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ right: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ right: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ right: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ right: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ right: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ right: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ right: Length.X(...params) });
        static AUTO: Sheet = { right: "auto" };
    }
    export class Rotate {
        static set = (...params: Param[]): Sheet => ({ rotate: buildProperty(params) });
        static NONE: Sheet = { rotate: "none" };
        static X: Sheet = { rotate: "x" };
        static Y: Sheet = { rotate: "y" };
        static Z: Sheet = { rotate: "z" };
        static deg = (...params: number[]): Sheet => ({ rotate: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ rotate: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ rotate: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ rotate: Angle.turn(...params) });
    }
    export class RowGap {
        static set = (...params: Param[]): Sheet => ({ rowGap: buildProperty(params) });
        static NORMAL: Sheet = { rowGap: "normal" };
        static cap = (...params: number[]): Sheet => ({ rowGap: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ rowGap: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ rowGap: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ rowGap: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ rowGap: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ rowGap: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ rowGap: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ rowGap: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ rowGap: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ rowGap: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ rowGap: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ rowGap: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ rowGap: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ rowGap: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ rowGap: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ rowGap: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ rowGap: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ rowGap: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ rowGap: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ rowGap: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ rowGap: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ rowGap: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ rowGap: Length.X(...params) });
    }
    export class RubyAlign {
        static set = (...params: Param[]): Sheet => ({ rubyAlign: buildProperty(params) });
        static START: Sheet = { rubyAlign: "start" };
        static CENTER: Sheet = { rubyAlign: "center" };
        static SPACE_BETWEEN: Sheet = { rubyAlign: "space-between" };
        static SPACE_AROUND: Sheet = { rubyAlign: "space-around" };
    }
    export class RubyMerge {
        static set = (...params: Param[]): Sheet => ({ rubyMerge: buildProperty(params) });
        static SEPARATE: Sheet = { rubyMerge: "separate" };
        static COLLAPSE: Sheet = { rubyMerge: "collapse" };
        static AUTO: Sheet = { rubyMerge: "auto" };
    }
    export class RubyPosition {
        static set = (...params: Param[]): Sheet => ({ rubyPosition: buildProperty(params) });
        static OVER: Sheet = { rubyPosition: "over" };
        static UNDER: Sheet = { rubyPosition: "under" };
        static INTER_CHARACTER: Sheet = { rubyPosition: "inter-character" };
    }
    export class Scale {
        static set = (...params: Param[]): Sheet => ({ scale: buildProperty(params) });
        static NONE: Sheet = { scale: "none" };
    }
    export class ScrollBehavior {
        static set = (...params: Param[]): Sheet => ({ scrollBehavior: buildProperty(params) });
        static AUTO: Sheet = { scrollBehavior: "auto" };
        static SMOOTH: Sheet = { scrollBehavior: "smooth" };
    }
    export class ScrollSnapCoordinate {
        static set = (...params: Param[]): Sheet => ({ scrollSnapCoordinate: buildProperty(params) });
        static NONE: Sheet = { scrollSnapCoordinate: "none" };
        static LEFT: Sheet = { scrollSnapCoordinate: "left" };
        static CENTER: Sheet = { scrollSnapCoordinate: "center" };
        static RIGHT: Sheet = { scrollSnapCoordinate: "right" };
        static TOP: Sheet = { scrollSnapCoordinate: "top" };
        static BOTTOM: Sheet = { scrollSnapCoordinate: "bottom" };
        static cap = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ scrollSnapCoordinate: Length.X(...params) });
    }
    export class ScrollSnapDestination {
        static set = (...params: Param[]): Sheet => ({ scrollSnapDestination: buildProperty(params) });
        static LEFT: Sheet = { scrollSnapDestination: "left" };
        static CENTER: Sheet = { scrollSnapDestination: "center" };
        static RIGHT: Sheet = { scrollSnapDestination: "right" };
        static TOP: Sheet = { scrollSnapDestination: "top" };
        static BOTTOM: Sheet = { scrollSnapDestination: "bottom" };
        static cap = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ scrollSnapDestination: Length.X(...params) });
    }
    export class ScrollSnapPointsX {
        static set = (...params: Param[]): Sheet => ({ scrollSnapPointsX: buildProperty(params) });
        static NONE: Sheet = { scrollSnapPointsX: "none" };
        static cap = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ scrollSnapPointsX: Length.X(...params) });
    }
    export class ScrollSnapPointsY {
        static set = (...params: Param[]): Sheet => ({ scrollSnapPointsY: buildProperty(params) });
        static NONE: Sheet = { scrollSnapPointsY: "none" };
        static cap = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ scrollSnapPointsY: Length.X(...params) });
    }
    export class ScrollSnapType {
        static set = (...params: Param[]): Sheet => ({ scrollSnapType: buildProperty(params) });
        static NONE: Sheet = { scrollSnapType: "none" };
        static MANDATORY: Sheet = { scrollSnapType: "mandatory" };
        static PROXIMITY: Sheet = { scrollSnapType: "proximity" };
    }
    export class ScrollSnapTypeX {
        static set = (...params: Param[]): Sheet => ({ scrollSnapTypeX: buildProperty(params) });
        static NONE: Sheet = { scrollSnapTypeX: "none" };
        static MANDATORY: Sheet = { scrollSnapTypeX: "mandatory" };
        static PROXIMITY: Sheet = { scrollSnapTypeX: "proximity" };
    }
    export class ScrollSnapTypeY {
        static set = (...params: Param[]): Sheet => ({ scrollSnapTypeY: buildProperty(params) });
        static NONE: Sheet = { scrollSnapTypeY: "none" };
        static MANDATORY: Sheet = { scrollSnapTypeY: "mandatory" };
        static PROXIMITY: Sheet = { scrollSnapTypeY: "proximity" };
    }
    export class ShapeImageThreshold {
        static set = (...params: Param[]): Sheet => ({ shapeImageThreshold: buildProperty(params) });
    }
    export class ShapeMargin {
        static set = (...params: Param[]): Sheet => ({ shapeMargin: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ shapeMargin: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ shapeMargin: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ shapeMargin: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ shapeMargin: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ shapeMargin: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ shapeMargin: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ shapeMargin: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ shapeMargin: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ shapeMargin: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ shapeMargin: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ shapeMargin: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ shapeMargin: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ shapeMargin: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ shapeMargin: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ shapeMargin: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ shapeMargin: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ shapeMargin: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ shapeMargin: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ shapeMargin: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ shapeMargin: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ shapeMargin: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ shapeMargin: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ shapeMargin: Length.X(...params) });
    }
    export class ShapeOutside {
        static set = (...params: Param[]): Sheet => ({ shapeOutside: buildProperty(params) });
        static NONE: Sheet = { shapeOutside: "none" };
        static BORDER_BOX: Sheet = { shapeOutside: "border-box" };
        static PADDING_BOX: Sheet = { shapeOutside: "padding-box" };
        static CONTENT_BOX: Sheet = { shapeOutside: "content-box" };
        static MARGIN_BOX: Sheet = { shapeOutside: "margin-box" };
        static cap = (...params: number[]): Sheet => ({ shapeOutside: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ shapeOutside: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ shapeOutside: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ shapeOutside: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ shapeOutside: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ shapeOutside: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ shapeOutside: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ shapeOutside: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ shapeOutside: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ shapeOutside: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ shapeOutside: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ shapeOutside: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ shapeOutside: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ shapeOutside: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ shapeOutside: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ shapeOutside: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ shapeOutside: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ shapeOutside: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ shapeOutside: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ shapeOutside: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ shapeOutside: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ shapeOutside: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ shapeOutside: Length.X(...params) });
        static ROUND: Sheet = { shapeOutside: "round" };
        static CLOSEST_SIDE: Sheet = { shapeOutside: "closest-side" };
        static FARTHEST_SIDE: Sheet = { shapeOutside: "farthest-side" };
        static AT: Sheet = { shapeOutside: "at" };
        static LEFT: Sheet = { shapeOutside: "left" };
        static CENTER: Sheet = { shapeOutside: "center" };
        static RIGHT: Sheet = { shapeOutside: "right" };
        static TOP: Sheet = { shapeOutside: "top" };
        static BOTTOM: Sheet = { shapeOutside: "bottom" };
        static NONZERO: Sheet = { shapeOutside: "nonzero" };
        static EVENODD: Sheet = { shapeOutside: "evenodd" };
        static deg = (...params: number[]): Sheet => ({ shapeOutside: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ shapeOutside: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ shapeOutside: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ shapeOutside: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { shapeOutside: "transparent" };
        static ALICEBLUE: Sheet = { shapeOutside: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { shapeOutside: "antiquewhite" };
        static AQUA: Sheet = { shapeOutside: "aqua" };
        static AQUAMARINE: Sheet = { shapeOutside: "aquamarine" };
        static AZURE: Sheet = { shapeOutside: "azure" };
        static BEIGE: Sheet = { shapeOutside: "beige" };
        static BISQUE: Sheet = { shapeOutside: "bisque" };
        static BLACK: Sheet = { shapeOutside: "black" };
        static BLANCHEDALMOND: Sheet = { shapeOutside: "blanchedalmond" };
        static BLUE: Sheet = { shapeOutside: "blue" };
        static BLUEVIOLET: Sheet = { shapeOutside: "blueviolet" };
        static BROWN: Sheet = { shapeOutside: "brown" };
        static BURLYWOOD: Sheet = { shapeOutside: "burlywood" };
        static CADETBLUE: Sheet = { shapeOutside: "cadetblue" };
        static CHARTREUSE: Sheet = { shapeOutside: "chartreuse" };
        static CHOCOLATE: Sheet = { shapeOutside: "chocolate" };
        static CORAL: Sheet = { shapeOutside: "coral" };
        static CORNFLOWERBLUE: Sheet = { shapeOutside: "cornflowerblue" };
        static CORNSILK: Sheet = { shapeOutside: "cornsilk" };
        static CRIMSON: Sheet = { shapeOutside: "crimson" };
        static CYAN: Sheet = { shapeOutside: "cyan" };
        static DARKBLUE: Sheet = { shapeOutside: "darkblue" };
        static DARKCYAN: Sheet = { shapeOutside: "darkcyan" };
        static DARKGOLDENROD: Sheet = { shapeOutside: "darkgoldenrod" };
        static DARKGRAY: Sheet = { shapeOutside: "darkgray" };
        static DARKGREEN: Sheet = { shapeOutside: "darkgreen" };
        static DARKGREY: Sheet = { shapeOutside: "darkgrey" };
        static DARKKHAKI: Sheet = { shapeOutside: "darkkhaki" };
        static DARKMAGENTA: Sheet = { shapeOutside: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { shapeOutside: "darkolivegreen" };
        static DARKORANGE: Sheet = { shapeOutside: "darkorange" };
        static DARKORCHID: Sheet = { shapeOutside: "darkorchid" };
        static DARKRED: Sheet = { shapeOutside: "darkred" };
        static DARKSALMON: Sheet = { shapeOutside: "darksalmon" };
        static DARKSEAGREEN: Sheet = { shapeOutside: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { shapeOutside: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { shapeOutside: "darkslategray" };
        static DARKSLATEGREY: Sheet = { shapeOutside: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { shapeOutside: "darkturquoise" };
        static DARKVIOLET: Sheet = { shapeOutside: "darkviolet" };
        static DEEPPINK: Sheet = { shapeOutside: "deeppink" };
        static DEEPSKYBLUE: Sheet = { shapeOutside: "deepskyblue" };
        static DIMGRAY: Sheet = { shapeOutside: "dimgray" };
        static DIMGREY: Sheet = { shapeOutside: "dimgrey" };
        static DODGERBLUE: Sheet = { shapeOutside: "dodgerblue" };
        static FIREBRICK: Sheet = { shapeOutside: "firebrick" };
        static FLORALWHITE: Sheet = { shapeOutside: "floralwhite" };
        static FORESTGREEN: Sheet = { shapeOutside: "forestgreen" };
        static FUCHSIA: Sheet = { shapeOutside: "fuchsia" };
        static GAINSBORO: Sheet = { shapeOutside: "gainsboro" };
        static GHOSTWHITE: Sheet = { shapeOutside: "ghostwhite" };
        static GOLD: Sheet = { shapeOutside: "gold" };
        static GOLDENROD: Sheet = { shapeOutside: "goldenrod" };
        static GRAY: Sheet = { shapeOutside: "gray" };
        static GREEN: Sheet = { shapeOutside: "green" };
        static GREENYELLOW: Sheet = { shapeOutside: "greenyellow" };
        static GREY: Sheet = { shapeOutside: "grey" };
        static HONEYDEW: Sheet = { shapeOutside: "honeydew" };
        static HOTPINK: Sheet = { shapeOutside: "hotpink" };
        static INDIANRED: Sheet = { shapeOutside: "indianred" };
        static INDIGO: Sheet = { shapeOutside: "indigo" };
        static IVORY: Sheet = { shapeOutside: "ivory" };
        static KHAKI: Sheet = { shapeOutside: "khaki" };
        static LAVENDER: Sheet = { shapeOutside: "lavender" };
        static LAVENDERBLUSH: Sheet = { shapeOutside: "lavenderblush" };
        static LAWNGREEN: Sheet = { shapeOutside: "lawngreen" };
        static LEMONCHIFFON: Sheet = { shapeOutside: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { shapeOutside: "lightblue" };
        static LIGHTCORAL: Sheet = { shapeOutside: "lightcoral" };
        static LIGHTCYAN: Sheet = { shapeOutside: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { shapeOutside: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { shapeOutside: "lightgray" };
        static LIGHTGREEN: Sheet = { shapeOutside: "lightgreen" };
        static LIGHTGREY: Sheet = { shapeOutside: "lightgrey" };
        static LIGHTPINK: Sheet = { shapeOutside: "lightpink" };
        static LIGHTSALMON: Sheet = { shapeOutside: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { shapeOutside: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { shapeOutside: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { shapeOutside: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { shapeOutside: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { shapeOutside: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { shapeOutside: "lightyellow" };
        static LIME: Sheet = { shapeOutside: "lime" };
        static LIMEGREEN: Sheet = { shapeOutside: "limegreen" };
        static LINEN: Sheet = { shapeOutside: "linen" };
        static MAGENTA: Sheet = { shapeOutside: "magenta" };
        static MAROON: Sheet = { shapeOutside: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { shapeOutside: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { shapeOutside: "mediumblue" };
        static MEDIUMORCHID: Sheet = { shapeOutside: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { shapeOutside: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { shapeOutside: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { shapeOutside: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { shapeOutside: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { shapeOutside: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { shapeOutside: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { shapeOutside: "midnightblue" };
        static MINTCREAM: Sheet = { shapeOutside: "mintcream" };
        static MISTYROSE: Sheet = { shapeOutside: "mistyrose" };
        static MOCCASIN: Sheet = { shapeOutside: "moccasin" };
        static NAVAJOWHITE: Sheet = { shapeOutside: "navajowhite" };
        static NAVY: Sheet = { shapeOutside: "navy" };
        static OLDLACE: Sheet = { shapeOutside: "oldlace" };
        static OLIVE: Sheet = { shapeOutside: "olive" };
        static OLIVEDRAB: Sheet = { shapeOutside: "olivedrab" };
        static ORANGE: Sheet = { shapeOutside: "orange" };
        static ORANGERED: Sheet = { shapeOutside: "orangered" };
        static ORCHID: Sheet = { shapeOutside: "orchid" };
        static PALEGOLDENROD: Sheet = { shapeOutside: "palegoldenrod" };
        static PALEGREEN: Sheet = { shapeOutside: "palegreen" };
        static PALETURQUOISE: Sheet = { shapeOutside: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { shapeOutside: "palevioletred" };
        static PAPAYAWHIP: Sheet = { shapeOutside: "papayawhip" };
        static PEACHPUFF: Sheet = { shapeOutside: "peachpuff" };
        static PERU: Sheet = { shapeOutside: "peru" };
        static PINK: Sheet = { shapeOutside: "pink" };
        static PLUM: Sheet = { shapeOutside: "plum" };
        static POWDERBLUE: Sheet = { shapeOutside: "powderblue" };
        static PURPLE: Sheet = { shapeOutside: "purple" };
        static REBECCAPURPLE: Sheet = { shapeOutside: "rebeccapurple" };
        static RED: Sheet = { shapeOutside: "red" };
        static ROSYBROWN: Sheet = { shapeOutside: "rosybrown" };
        static ROYALBLUE: Sheet = { shapeOutside: "royalblue" };
        static SADDLEBROWN: Sheet = { shapeOutside: "saddlebrown" };
        static SALMON: Sheet = { shapeOutside: "salmon" };
        static SANDYBROWN: Sheet = { shapeOutside: "sandybrown" };
        static SEAGREEN: Sheet = { shapeOutside: "seagreen" };
        static SEASHELL: Sheet = { shapeOutside: "seashell" };
        static SIENNA: Sheet = { shapeOutside: "sienna" };
        static SILVER: Sheet = { shapeOutside: "silver" };
        static SKYBLUE: Sheet = { shapeOutside: "skyblue" };
        static SLATEBLUE: Sheet = { shapeOutside: "slateblue" };
        static SLATEGRAY: Sheet = { shapeOutside: "slategray" };
        static SLATEGREY: Sheet = { shapeOutside: "slategrey" };
        static SNOW: Sheet = { shapeOutside: "snow" };
        static SPRINGGREEN: Sheet = { shapeOutside: "springgreen" };
        static STEELBLUE: Sheet = { shapeOutside: "steelblue" };
        static TAN: Sheet = { shapeOutside: "tan" };
        static TEAL: Sheet = { shapeOutside: "teal" };
        static THISTLE: Sheet = { shapeOutside: "thistle" };
        static TOMATO: Sheet = { shapeOutside: "tomato" };
        static TURQUOISE: Sheet = { shapeOutside: "turquoise" };
        static VIOLET: Sheet = { shapeOutside: "violet" };
        static WHEAT: Sheet = { shapeOutside: "wheat" };
        static WHITE: Sheet = { shapeOutside: "white" };
        static WHITESMOKE: Sheet = { shapeOutside: "whitesmoke" };
        static YELLOW: Sheet = { shapeOutside: "yellow" };
        static YELLOWGREEN: Sheet = { shapeOutside: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { shapeOutside: "currentcolor" };
        static ACTIVEBORDER: Sheet = { shapeOutside: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { shapeOutside: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { shapeOutside: "AppWorkspace" };
        static BACKGROUND: Sheet = { shapeOutside: "Background" };
        static BUTTONFACE: Sheet = { shapeOutside: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { shapeOutside: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { shapeOutside: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { shapeOutside: "ButtonText" };
        static CAPTIONTEXT: Sheet = { shapeOutside: "CaptionText" };
        static GRAYTEXT: Sheet = { shapeOutside: "GrayText" };
        static HIGHLIGHT: Sheet = { shapeOutside: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { shapeOutside: "HighlightText" };
        static INACTIVEBORDER: Sheet = { shapeOutside: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { shapeOutside: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { shapeOutside: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { shapeOutside: "InfoBackground" };
        static INFOTEXT: Sheet = { shapeOutside: "InfoText" };
        static MENU: Sheet = { shapeOutside: "Menu" };
        static MENUTEXT: Sheet = { shapeOutside: "MenuText" };
        static SCROLLBAR: Sheet = { shapeOutside: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { shapeOutside: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { shapeOutside: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { shapeOutside: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { shapeOutside: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { shapeOutside: "ThreeDShadow" };
        static WINDOW: Sheet = { shapeOutside: "Window" };
        static WINDOWFRAME: Sheet = { shapeOutside: "WindowFrame" };
        static WINDOWTEXT: Sheet = { shapeOutside: "WindowText" };
        static dpi = (...params: number[]): Sheet => ({ shapeOutside: Resolution.dpi(...params) });
        static dpcm = (...params: number[]): Sheet => ({ shapeOutside: Resolution.dpcm(...params) });
        static dppx = (...params: number[]): Sheet => ({ shapeOutside: Resolution.dppx(...params) });
        static x = (...params: number[]): Sheet => ({ shapeOutside: Resolution.x(...params) });
        static TO: Sheet = { shapeOutside: "to" };
        static CIRCLE: Sheet = { shapeOutside: "circle" };
        static ELLIPSE: Sheet = { shapeOutside: "ellipse" };
        static CLOSEST_CORNER: Sheet = { shapeOutside: "closest-corner" };
        static FARTHEST_CORNER: Sheet = { shapeOutside: "farthest-corner" };
    }
    export class TabSize {
        static set = (...params: Param[]): Sheet => ({ tabSize: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ tabSize: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ tabSize: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ tabSize: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ tabSize: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ tabSize: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ tabSize: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ tabSize: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ tabSize: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ tabSize: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ tabSize: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ tabSize: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ tabSize: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ tabSize: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ tabSize: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ tabSize: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ tabSize: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ tabSize: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ tabSize: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ tabSize: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ tabSize: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ tabSize: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ tabSize: Length.fr(...params) });
    }
    export class TableLayout {
        static set = (...params: Param[]): Sheet => ({ tableLayout: buildProperty(params) });
        static AUTO: Sheet = { tableLayout: "auto" };
        static FIXED: Sheet = { tableLayout: "fixed" };
    }
    export class TextAlign {
        static set = (...params: Param[]): Sheet => ({ textAlign: buildProperty(params) });
        static START: Sheet = { textAlign: "start" };
        static END: Sheet = { textAlign: "end" };
        static LEFT: Sheet = { textAlign: "left" };
        static RIGHT: Sheet = { textAlign: "right" };
        static CENTER: Sheet = { textAlign: "center" };
        static JUSTIFY: Sheet = { textAlign: "justify" };
        static MATCH_PARENT: Sheet = { textAlign: "match-parent" };
    }
    export class TextAlignLast {
        static set = (...params: Param[]): Sheet => ({ textAlignLast: buildProperty(params) });
        static AUTO: Sheet = { textAlignLast: "auto" };
        static START: Sheet = { textAlignLast: "start" };
        static END: Sheet = { textAlignLast: "end" };
        static LEFT: Sheet = { textAlignLast: "left" };
        static RIGHT: Sheet = { textAlignLast: "right" };
        static CENTER: Sheet = { textAlignLast: "center" };
        static JUSTIFY: Sheet = { textAlignLast: "justify" };
    }
    export class TextCombineUpright {
        static set = (...params: Param[]): Sheet => ({ textCombineUpright: buildProperty(params) });
        static NONE: Sheet = { textCombineUpright: "none" };
        static ALL: Sheet = { textCombineUpright: "all" };
        static DIGITS: Sheet = { textCombineUpright: "digits" };
    }
    export class TextDecoration {
        static set = (...params: Param[]): Sheet => ({ textDecoration: buildProperty(params) });
        static NONE: Sheet = { textDecoration: "none" };
        static UNDERLINE: Sheet = { textDecoration: "underline" };
        static OVERLINE: Sheet = { textDecoration: "overline" };
        static LINE_THROUGH: Sheet = { textDecoration: "line-through" };
        static BLINK: Sheet = { textDecoration: "blink" };
        static SOLID: Sheet = { textDecoration: "solid" };
        static DOUBLE: Sheet = { textDecoration: "double" };
        static DOTTED: Sheet = { textDecoration: "dotted" };
        static DASHED: Sheet = { textDecoration: "dashed" };
        static WAVY: Sheet = { textDecoration: "wavy" };
        static X = (...params: number[]): Sheet => ({ textDecoration: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ textDecoration: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ textDecoration: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ textDecoration: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ textDecoration: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { textDecoration: "transparent" };
        static ALICEBLUE: Sheet = { textDecoration: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { textDecoration: "antiquewhite" };
        static AQUA: Sheet = { textDecoration: "aqua" };
        static AQUAMARINE: Sheet = { textDecoration: "aquamarine" };
        static AZURE: Sheet = { textDecoration: "azure" };
        static BEIGE: Sheet = { textDecoration: "beige" };
        static BISQUE: Sheet = { textDecoration: "bisque" };
        static BLACK: Sheet = { textDecoration: "black" };
        static BLANCHEDALMOND: Sheet = { textDecoration: "blanchedalmond" };
        static BLUE: Sheet = { textDecoration: "blue" };
        static BLUEVIOLET: Sheet = { textDecoration: "blueviolet" };
        static BROWN: Sheet = { textDecoration: "brown" };
        static BURLYWOOD: Sheet = { textDecoration: "burlywood" };
        static CADETBLUE: Sheet = { textDecoration: "cadetblue" };
        static CHARTREUSE: Sheet = { textDecoration: "chartreuse" };
        static CHOCOLATE: Sheet = { textDecoration: "chocolate" };
        static CORAL: Sheet = { textDecoration: "coral" };
        static CORNFLOWERBLUE: Sheet = { textDecoration: "cornflowerblue" };
        static CORNSILK: Sheet = { textDecoration: "cornsilk" };
        static CRIMSON: Sheet = { textDecoration: "crimson" };
        static CYAN: Sheet = { textDecoration: "cyan" };
        static DARKBLUE: Sheet = { textDecoration: "darkblue" };
        static DARKCYAN: Sheet = { textDecoration: "darkcyan" };
        static DARKGOLDENROD: Sheet = { textDecoration: "darkgoldenrod" };
        static DARKGRAY: Sheet = { textDecoration: "darkgray" };
        static DARKGREEN: Sheet = { textDecoration: "darkgreen" };
        static DARKGREY: Sheet = { textDecoration: "darkgrey" };
        static DARKKHAKI: Sheet = { textDecoration: "darkkhaki" };
        static DARKMAGENTA: Sheet = { textDecoration: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { textDecoration: "darkolivegreen" };
        static DARKORANGE: Sheet = { textDecoration: "darkorange" };
        static DARKORCHID: Sheet = { textDecoration: "darkorchid" };
        static DARKRED: Sheet = { textDecoration: "darkred" };
        static DARKSALMON: Sheet = { textDecoration: "darksalmon" };
        static DARKSEAGREEN: Sheet = { textDecoration: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { textDecoration: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { textDecoration: "darkslategray" };
        static DARKSLATEGREY: Sheet = { textDecoration: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { textDecoration: "darkturquoise" };
        static DARKVIOLET: Sheet = { textDecoration: "darkviolet" };
        static DEEPPINK: Sheet = { textDecoration: "deeppink" };
        static DEEPSKYBLUE: Sheet = { textDecoration: "deepskyblue" };
        static DIMGRAY: Sheet = { textDecoration: "dimgray" };
        static DIMGREY: Sheet = { textDecoration: "dimgrey" };
        static DODGERBLUE: Sheet = { textDecoration: "dodgerblue" };
        static FIREBRICK: Sheet = { textDecoration: "firebrick" };
        static FLORALWHITE: Sheet = { textDecoration: "floralwhite" };
        static FORESTGREEN: Sheet = { textDecoration: "forestgreen" };
        static FUCHSIA: Sheet = { textDecoration: "fuchsia" };
        static GAINSBORO: Sheet = { textDecoration: "gainsboro" };
        static GHOSTWHITE: Sheet = { textDecoration: "ghostwhite" };
        static GOLD: Sheet = { textDecoration: "gold" };
        static GOLDENROD: Sheet = { textDecoration: "goldenrod" };
        static GRAY: Sheet = { textDecoration: "gray" };
        static GREEN: Sheet = { textDecoration: "green" };
        static GREENYELLOW: Sheet = { textDecoration: "greenyellow" };
        static GREY: Sheet = { textDecoration: "grey" };
        static HONEYDEW: Sheet = { textDecoration: "honeydew" };
        static HOTPINK: Sheet = { textDecoration: "hotpink" };
        static INDIANRED: Sheet = { textDecoration: "indianred" };
        static INDIGO: Sheet = { textDecoration: "indigo" };
        static IVORY: Sheet = { textDecoration: "ivory" };
        static KHAKI: Sheet = { textDecoration: "khaki" };
        static LAVENDER: Sheet = { textDecoration: "lavender" };
        static LAVENDERBLUSH: Sheet = { textDecoration: "lavenderblush" };
        static LAWNGREEN: Sheet = { textDecoration: "lawngreen" };
        static LEMONCHIFFON: Sheet = { textDecoration: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { textDecoration: "lightblue" };
        static LIGHTCORAL: Sheet = { textDecoration: "lightcoral" };
        static LIGHTCYAN: Sheet = { textDecoration: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { textDecoration: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { textDecoration: "lightgray" };
        static LIGHTGREEN: Sheet = { textDecoration: "lightgreen" };
        static LIGHTGREY: Sheet = { textDecoration: "lightgrey" };
        static LIGHTPINK: Sheet = { textDecoration: "lightpink" };
        static LIGHTSALMON: Sheet = { textDecoration: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { textDecoration: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { textDecoration: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { textDecoration: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { textDecoration: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { textDecoration: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { textDecoration: "lightyellow" };
        static LIME: Sheet = { textDecoration: "lime" };
        static LIMEGREEN: Sheet = { textDecoration: "limegreen" };
        static LINEN: Sheet = { textDecoration: "linen" };
        static MAGENTA: Sheet = { textDecoration: "magenta" };
        static MAROON: Sheet = { textDecoration: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { textDecoration: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { textDecoration: "mediumblue" };
        static MEDIUMORCHID: Sheet = { textDecoration: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { textDecoration: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { textDecoration: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { textDecoration: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { textDecoration: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { textDecoration: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { textDecoration: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { textDecoration: "midnightblue" };
        static MINTCREAM: Sheet = { textDecoration: "mintcream" };
        static MISTYROSE: Sheet = { textDecoration: "mistyrose" };
        static MOCCASIN: Sheet = { textDecoration: "moccasin" };
        static NAVAJOWHITE: Sheet = { textDecoration: "navajowhite" };
        static NAVY: Sheet = { textDecoration: "navy" };
        static OLDLACE: Sheet = { textDecoration: "oldlace" };
        static OLIVE: Sheet = { textDecoration: "olive" };
        static OLIVEDRAB: Sheet = { textDecoration: "olivedrab" };
        static ORANGE: Sheet = { textDecoration: "orange" };
        static ORANGERED: Sheet = { textDecoration: "orangered" };
        static ORCHID: Sheet = { textDecoration: "orchid" };
        static PALEGOLDENROD: Sheet = { textDecoration: "palegoldenrod" };
        static PALEGREEN: Sheet = { textDecoration: "palegreen" };
        static PALETURQUOISE: Sheet = { textDecoration: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { textDecoration: "palevioletred" };
        static PAPAYAWHIP: Sheet = { textDecoration: "papayawhip" };
        static PEACHPUFF: Sheet = { textDecoration: "peachpuff" };
        static PERU: Sheet = { textDecoration: "peru" };
        static PINK: Sheet = { textDecoration: "pink" };
        static PLUM: Sheet = { textDecoration: "plum" };
        static POWDERBLUE: Sheet = { textDecoration: "powderblue" };
        static PURPLE: Sheet = { textDecoration: "purple" };
        static REBECCAPURPLE: Sheet = { textDecoration: "rebeccapurple" };
        static RED: Sheet = { textDecoration: "red" };
        static ROSYBROWN: Sheet = { textDecoration: "rosybrown" };
        static ROYALBLUE: Sheet = { textDecoration: "royalblue" };
        static SADDLEBROWN: Sheet = { textDecoration: "saddlebrown" };
        static SALMON: Sheet = { textDecoration: "salmon" };
        static SANDYBROWN: Sheet = { textDecoration: "sandybrown" };
        static SEAGREEN: Sheet = { textDecoration: "seagreen" };
        static SEASHELL: Sheet = { textDecoration: "seashell" };
        static SIENNA: Sheet = { textDecoration: "sienna" };
        static SILVER: Sheet = { textDecoration: "silver" };
        static SKYBLUE: Sheet = { textDecoration: "skyblue" };
        static SLATEBLUE: Sheet = { textDecoration: "slateblue" };
        static SLATEGRAY: Sheet = { textDecoration: "slategray" };
        static SLATEGREY: Sheet = { textDecoration: "slategrey" };
        static SNOW: Sheet = { textDecoration: "snow" };
        static SPRINGGREEN: Sheet = { textDecoration: "springgreen" };
        static STEELBLUE: Sheet = { textDecoration: "steelblue" };
        static TAN: Sheet = { textDecoration: "tan" };
        static TEAL: Sheet = { textDecoration: "teal" };
        static THISTLE: Sheet = { textDecoration: "thistle" };
        static TOMATO: Sheet = { textDecoration: "tomato" };
        static TURQUOISE: Sheet = { textDecoration: "turquoise" };
        static VIOLET: Sheet = { textDecoration: "violet" };
        static WHEAT: Sheet = { textDecoration: "wheat" };
        static WHITE: Sheet = { textDecoration: "white" };
        static WHITESMOKE: Sheet = { textDecoration: "whitesmoke" };
        static YELLOW: Sheet = { textDecoration: "yellow" };
        static YELLOWGREEN: Sheet = { textDecoration: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { textDecoration: "currentcolor" };
        static ACTIVEBORDER: Sheet = { textDecoration: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { textDecoration: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { textDecoration: "AppWorkspace" };
        static BACKGROUND: Sheet = { textDecoration: "Background" };
        static BUTTONFACE: Sheet = { textDecoration: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { textDecoration: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { textDecoration: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { textDecoration: "ButtonText" };
        static CAPTIONTEXT: Sheet = { textDecoration: "CaptionText" };
        static GRAYTEXT: Sheet = { textDecoration: "GrayText" };
        static HIGHLIGHT: Sheet = { textDecoration: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { textDecoration: "HighlightText" };
        static INACTIVEBORDER: Sheet = { textDecoration: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { textDecoration: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { textDecoration: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { textDecoration: "InfoBackground" };
        static INFOTEXT: Sheet = { textDecoration: "InfoText" };
        static MENU: Sheet = { textDecoration: "Menu" };
        static MENUTEXT: Sheet = { textDecoration: "MenuText" };
        static SCROLLBAR: Sheet = { textDecoration: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { textDecoration: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { textDecoration: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { textDecoration: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { textDecoration: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { textDecoration: "ThreeDShadow" };
        static WINDOW: Sheet = { textDecoration: "Window" };
        static WINDOWFRAME: Sheet = { textDecoration: "WindowFrame" };
        static WINDOWTEXT: Sheet = { textDecoration: "WindowText" };
    }
    export class TextDecorationColor {
        static set = (...params: Param[]): Sheet => ({ textDecorationColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ textDecorationColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ textDecorationColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ textDecorationColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ textDecorationColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ textDecorationColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { textDecorationColor: "transparent" };
        static ALICEBLUE: Sheet = { textDecorationColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { textDecorationColor: "antiquewhite" };
        static AQUA: Sheet = { textDecorationColor: "aqua" };
        static AQUAMARINE: Sheet = { textDecorationColor: "aquamarine" };
        static AZURE: Sheet = { textDecorationColor: "azure" };
        static BEIGE: Sheet = { textDecorationColor: "beige" };
        static BISQUE: Sheet = { textDecorationColor: "bisque" };
        static BLACK: Sheet = { textDecorationColor: "black" };
        static BLANCHEDALMOND: Sheet = { textDecorationColor: "blanchedalmond" };
        static BLUE: Sheet = { textDecorationColor: "blue" };
        static BLUEVIOLET: Sheet = { textDecorationColor: "blueviolet" };
        static BROWN: Sheet = { textDecorationColor: "brown" };
        static BURLYWOOD: Sheet = { textDecorationColor: "burlywood" };
        static CADETBLUE: Sheet = { textDecorationColor: "cadetblue" };
        static CHARTREUSE: Sheet = { textDecorationColor: "chartreuse" };
        static CHOCOLATE: Sheet = { textDecorationColor: "chocolate" };
        static CORAL: Sheet = { textDecorationColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { textDecorationColor: "cornflowerblue" };
        static CORNSILK: Sheet = { textDecorationColor: "cornsilk" };
        static CRIMSON: Sheet = { textDecorationColor: "crimson" };
        static CYAN: Sheet = { textDecorationColor: "cyan" };
        static DARKBLUE: Sheet = { textDecorationColor: "darkblue" };
        static DARKCYAN: Sheet = { textDecorationColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { textDecorationColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { textDecorationColor: "darkgray" };
        static DARKGREEN: Sheet = { textDecorationColor: "darkgreen" };
        static DARKGREY: Sheet = { textDecorationColor: "darkgrey" };
        static DARKKHAKI: Sheet = { textDecorationColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { textDecorationColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { textDecorationColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { textDecorationColor: "darkorange" };
        static DARKORCHID: Sheet = { textDecorationColor: "darkorchid" };
        static DARKRED: Sheet = { textDecorationColor: "darkred" };
        static DARKSALMON: Sheet = { textDecorationColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { textDecorationColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { textDecorationColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { textDecorationColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { textDecorationColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { textDecorationColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { textDecorationColor: "darkviolet" };
        static DEEPPINK: Sheet = { textDecorationColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { textDecorationColor: "deepskyblue" };
        static DIMGRAY: Sheet = { textDecorationColor: "dimgray" };
        static DIMGREY: Sheet = { textDecorationColor: "dimgrey" };
        static DODGERBLUE: Sheet = { textDecorationColor: "dodgerblue" };
        static FIREBRICK: Sheet = { textDecorationColor: "firebrick" };
        static FLORALWHITE: Sheet = { textDecorationColor: "floralwhite" };
        static FORESTGREEN: Sheet = { textDecorationColor: "forestgreen" };
        static FUCHSIA: Sheet = { textDecorationColor: "fuchsia" };
        static GAINSBORO: Sheet = { textDecorationColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { textDecorationColor: "ghostwhite" };
        static GOLD: Sheet = { textDecorationColor: "gold" };
        static GOLDENROD: Sheet = { textDecorationColor: "goldenrod" };
        static GRAY: Sheet = { textDecorationColor: "gray" };
        static GREEN: Sheet = { textDecorationColor: "green" };
        static GREENYELLOW: Sheet = { textDecorationColor: "greenyellow" };
        static GREY: Sheet = { textDecorationColor: "grey" };
        static HONEYDEW: Sheet = { textDecorationColor: "honeydew" };
        static HOTPINK: Sheet = { textDecorationColor: "hotpink" };
        static INDIANRED: Sheet = { textDecorationColor: "indianred" };
        static INDIGO: Sheet = { textDecorationColor: "indigo" };
        static IVORY: Sheet = { textDecorationColor: "ivory" };
        static KHAKI: Sheet = { textDecorationColor: "khaki" };
        static LAVENDER: Sheet = { textDecorationColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { textDecorationColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { textDecorationColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { textDecorationColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { textDecorationColor: "lightblue" };
        static LIGHTCORAL: Sheet = { textDecorationColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { textDecorationColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { textDecorationColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { textDecorationColor: "lightgray" };
        static LIGHTGREEN: Sheet = { textDecorationColor: "lightgreen" };
        static LIGHTGREY: Sheet = { textDecorationColor: "lightgrey" };
        static LIGHTPINK: Sheet = { textDecorationColor: "lightpink" };
        static LIGHTSALMON: Sheet = { textDecorationColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { textDecorationColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { textDecorationColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { textDecorationColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { textDecorationColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { textDecorationColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { textDecorationColor: "lightyellow" };
        static LIME: Sheet = { textDecorationColor: "lime" };
        static LIMEGREEN: Sheet = { textDecorationColor: "limegreen" };
        static LINEN: Sheet = { textDecorationColor: "linen" };
        static MAGENTA: Sheet = { textDecorationColor: "magenta" };
        static MAROON: Sheet = { textDecorationColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { textDecorationColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { textDecorationColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { textDecorationColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { textDecorationColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { textDecorationColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { textDecorationColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { textDecorationColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { textDecorationColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { textDecorationColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { textDecorationColor: "midnightblue" };
        static MINTCREAM: Sheet = { textDecorationColor: "mintcream" };
        static MISTYROSE: Sheet = { textDecorationColor: "mistyrose" };
        static MOCCASIN: Sheet = { textDecorationColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { textDecorationColor: "navajowhite" };
        static NAVY: Sheet = { textDecorationColor: "navy" };
        static OLDLACE: Sheet = { textDecorationColor: "oldlace" };
        static OLIVE: Sheet = { textDecorationColor: "olive" };
        static OLIVEDRAB: Sheet = { textDecorationColor: "olivedrab" };
        static ORANGE: Sheet = { textDecorationColor: "orange" };
        static ORANGERED: Sheet = { textDecorationColor: "orangered" };
        static ORCHID: Sheet = { textDecorationColor: "orchid" };
        static PALEGOLDENROD: Sheet = { textDecorationColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { textDecorationColor: "palegreen" };
        static PALETURQUOISE: Sheet = { textDecorationColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { textDecorationColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { textDecorationColor: "papayawhip" };
        static PEACHPUFF: Sheet = { textDecorationColor: "peachpuff" };
        static PERU: Sheet = { textDecorationColor: "peru" };
        static PINK: Sheet = { textDecorationColor: "pink" };
        static PLUM: Sheet = { textDecorationColor: "plum" };
        static POWDERBLUE: Sheet = { textDecorationColor: "powderblue" };
        static PURPLE: Sheet = { textDecorationColor: "purple" };
        static REBECCAPURPLE: Sheet = { textDecorationColor: "rebeccapurple" };
        static RED: Sheet = { textDecorationColor: "red" };
        static ROSYBROWN: Sheet = { textDecorationColor: "rosybrown" };
        static ROYALBLUE: Sheet = { textDecorationColor: "royalblue" };
        static SADDLEBROWN: Sheet = { textDecorationColor: "saddlebrown" };
        static SALMON: Sheet = { textDecorationColor: "salmon" };
        static SANDYBROWN: Sheet = { textDecorationColor: "sandybrown" };
        static SEAGREEN: Sheet = { textDecorationColor: "seagreen" };
        static SEASHELL: Sheet = { textDecorationColor: "seashell" };
        static SIENNA: Sheet = { textDecorationColor: "sienna" };
        static SILVER: Sheet = { textDecorationColor: "silver" };
        static SKYBLUE: Sheet = { textDecorationColor: "skyblue" };
        static SLATEBLUE: Sheet = { textDecorationColor: "slateblue" };
        static SLATEGRAY: Sheet = { textDecorationColor: "slategray" };
        static SLATEGREY: Sheet = { textDecorationColor: "slategrey" };
        static SNOW: Sheet = { textDecorationColor: "snow" };
        static SPRINGGREEN: Sheet = { textDecorationColor: "springgreen" };
        static STEELBLUE: Sheet = { textDecorationColor: "steelblue" };
        static TAN: Sheet = { textDecorationColor: "tan" };
        static TEAL: Sheet = { textDecorationColor: "teal" };
        static THISTLE: Sheet = { textDecorationColor: "thistle" };
        static TOMATO: Sheet = { textDecorationColor: "tomato" };
        static TURQUOISE: Sheet = { textDecorationColor: "turquoise" };
        static VIOLET: Sheet = { textDecorationColor: "violet" };
        static WHEAT: Sheet = { textDecorationColor: "wheat" };
        static WHITE: Sheet = { textDecorationColor: "white" };
        static WHITESMOKE: Sheet = { textDecorationColor: "whitesmoke" };
        static YELLOW: Sheet = { textDecorationColor: "yellow" };
        static YELLOWGREEN: Sheet = { textDecorationColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { textDecorationColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { textDecorationColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { textDecorationColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { textDecorationColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { textDecorationColor: "Background" };
        static BUTTONFACE: Sheet = { textDecorationColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { textDecorationColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { textDecorationColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { textDecorationColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { textDecorationColor: "CaptionText" };
        static GRAYTEXT: Sheet = { textDecorationColor: "GrayText" };
        static HIGHLIGHT: Sheet = { textDecorationColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { textDecorationColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { textDecorationColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { textDecorationColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { textDecorationColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { textDecorationColor: "InfoBackground" };
        static INFOTEXT: Sheet = { textDecorationColor: "InfoText" };
        static MENU: Sheet = { textDecorationColor: "Menu" };
        static MENUTEXT: Sheet = { textDecorationColor: "MenuText" };
        static SCROLLBAR: Sheet = { textDecorationColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { textDecorationColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { textDecorationColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { textDecorationColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { textDecorationColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { textDecorationColor: "ThreeDShadow" };
        static WINDOW: Sheet = { textDecorationColor: "Window" };
        static WINDOWFRAME: Sheet = { textDecorationColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { textDecorationColor: "WindowText" };
    }
    export class TextDecorationLine {
        static set = (...params: Param[]): Sheet => ({ textDecorationLine: buildProperty(params) });
        static NONE: Sheet = { textDecorationLine: "none" };
        static UNDERLINE: Sheet = { textDecorationLine: "underline" };
        static OVERLINE: Sheet = { textDecorationLine: "overline" };
        static LINE_THROUGH: Sheet = { textDecorationLine: "line-through" };
        static BLINK: Sheet = { textDecorationLine: "blink" };
    }
    export class TextDecorationSkip {
        static set = (...params: Param[]): Sheet => ({ textDecorationSkip: buildProperty(params) });
        static NONE: Sheet = { textDecorationSkip: "none" };
        static OBJECTS: Sheet = { textDecorationSkip: "objects" };
        static SPACES: Sheet = { textDecorationSkip: "spaces" };
        static LEADING_SPACES: Sheet = { textDecorationSkip: "leading-spaces" };
        static TRAILING_SPACES: Sheet = { textDecorationSkip: "trailing-spaces" };
        static EDGES: Sheet = { textDecorationSkip: "edges" };
        static BOX_DECORATION: Sheet = { textDecorationSkip: "box-decoration" };
    }
    export class TextDecorationSkipInk {
        static set = (...params: Param[]): Sheet => ({ textDecorationSkipInk: buildProperty(params) });
        static AUTO: Sheet = { textDecorationSkipInk: "auto" };
        static NONE: Sheet = { textDecorationSkipInk: "none" };
    }
    export class TextDecorationStyle {
        static set = (...params: Param[]): Sheet => ({ textDecorationStyle: buildProperty(params) });
        static SOLID: Sheet = { textDecorationStyle: "solid" };
        static DOUBLE: Sheet = { textDecorationStyle: "double" };
        static DOTTED: Sheet = { textDecorationStyle: "dotted" };
        static DASHED: Sheet = { textDecorationStyle: "dashed" };
        static WAVY: Sheet = { textDecorationStyle: "wavy" };
    }
    export class TextEmphasis {
        static set = (...params: Param[]): Sheet => ({ textEmphasis: buildProperty(params) });
        static NONE: Sheet = { textEmphasis: "none" };
        static FILLED: Sheet = { textEmphasis: "filled" };
        static OPEN: Sheet = { textEmphasis: "open" };
        static DOT: Sheet = { textEmphasis: "dot" };
        static CIRCLE: Sheet = { textEmphasis: "circle" };
        static DOUBLE_CIRCLE: Sheet = { textEmphasis: "double-circle" };
        static TRIANGLE: Sheet = { textEmphasis: "triangle" };
        static SESAME: Sheet = { textEmphasis: "sesame" };
        static X = (...params: number[]): Sheet => ({ textEmphasis: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ textEmphasis: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ textEmphasis: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ textEmphasis: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ textEmphasis: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { textEmphasis: "transparent" };
        static ALICEBLUE: Sheet = { textEmphasis: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { textEmphasis: "antiquewhite" };
        static AQUA: Sheet = { textEmphasis: "aqua" };
        static AQUAMARINE: Sheet = { textEmphasis: "aquamarine" };
        static AZURE: Sheet = { textEmphasis: "azure" };
        static BEIGE: Sheet = { textEmphasis: "beige" };
        static BISQUE: Sheet = { textEmphasis: "bisque" };
        static BLACK: Sheet = { textEmphasis: "black" };
        static BLANCHEDALMOND: Sheet = { textEmphasis: "blanchedalmond" };
        static BLUE: Sheet = { textEmphasis: "blue" };
        static BLUEVIOLET: Sheet = { textEmphasis: "blueviolet" };
        static BROWN: Sheet = { textEmphasis: "brown" };
        static BURLYWOOD: Sheet = { textEmphasis: "burlywood" };
        static CADETBLUE: Sheet = { textEmphasis: "cadetblue" };
        static CHARTREUSE: Sheet = { textEmphasis: "chartreuse" };
        static CHOCOLATE: Sheet = { textEmphasis: "chocolate" };
        static CORAL: Sheet = { textEmphasis: "coral" };
        static CORNFLOWERBLUE: Sheet = { textEmphasis: "cornflowerblue" };
        static CORNSILK: Sheet = { textEmphasis: "cornsilk" };
        static CRIMSON: Sheet = { textEmphasis: "crimson" };
        static CYAN: Sheet = { textEmphasis: "cyan" };
        static DARKBLUE: Sheet = { textEmphasis: "darkblue" };
        static DARKCYAN: Sheet = { textEmphasis: "darkcyan" };
        static DARKGOLDENROD: Sheet = { textEmphasis: "darkgoldenrod" };
        static DARKGRAY: Sheet = { textEmphasis: "darkgray" };
        static DARKGREEN: Sheet = { textEmphasis: "darkgreen" };
        static DARKGREY: Sheet = { textEmphasis: "darkgrey" };
        static DARKKHAKI: Sheet = { textEmphasis: "darkkhaki" };
        static DARKMAGENTA: Sheet = { textEmphasis: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { textEmphasis: "darkolivegreen" };
        static DARKORANGE: Sheet = { textEmphasis: "darkorange" };
        static DARKORCHID: Sheet = { textEmphasis: "darkorchid" };
        static DARKRED: Sheet = { textEmphasis: "darkred" };
        static DARKSALMON: Sheet = { textEmphasis: "darksalmon" };
        static DARKSEAGREEN: Sheet = { textEmphasis: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { textEmphasis: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { textEmphasis: "darkslategray" };
        static DARKSLATEGREY: Sheet = { textEmphasis: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { textEmphasis: "darkturquoise" };
        static DARKVIOLET: Sheet = { textEmphasis: "darkviolet" };
        static DEEPPINK: Sheet = { textEmphasis: "deeppink" };
        static DEEPSKYBLUE: Sheet = { textEmphasis: "deepskyblue" };
        static DIMGRAY: Sheet = { textEmphasis: "dimgray" };
        static DIMGREY: Sheet = { textEmphasis: "dimgrey" };
        static DODGERBLUE: Sheet = { textEmphasis: "dodgerblue" };
        static FIREBRICK: Sheet = { textEmphasis: "firebrick" };
        static FLORALWHITE: Sheet = { textEmphasis: "floralwhite" };
        static FORESTGREEN: Sheet = { textEmphasis: "forestgreen" };
        static FUCHSIA: Sheet = { textEmphasis: "fuchsia" };
        static GAINSBORO: Sheet = { textEmphasis: "gainsboro" };
        static GHOSTWHITE: Sheet = { textEmphasis: "ghostwhite" };
        static GOLD: Sheet = { textEmphasis: "gold" };
        static GOLDENROD: Sheet = { textEmphasis: "goldenrod" };
        static GRAY: Sheet = { textEmphasis: "gray" };
        static GREEN: Sheet = { textEmphasis: "green" };
        static GREENYELLOW: Sheet = { textEmphasis: "greenyellow" };
        static GREY: Sheet = { textEmphasis: "grey" };
        static HONEYDEW: Sheet = { textEmphasis: "honeydew" };
        static HOTPINK: Sheet = { textEmphasis: "hotpink" };
        static INDIANRED: Sheet = { textEmphasis: "indianred" };
        static INDIGO: Sheet = { textEmphasis: "indigo" };
        static IVORY: Sheet = { textEmphasis: "ivory" };
        static KHAKI: Sheet = { textEmphasis: "khaki" };
        static LAVENDER: Sheet = { textEmphasis: "lavender" };
        static LAVENDERBLUSH: Sheet = { textEmphasis: "lavenderblush" };
        static LAWNGREEN: Sheet = { textEmphasis: "lawngreen" };
        static LEMONCHIFFON: Sheet = { textEmphasis: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { textEmphasis: "lightblue" };
        static LIGHTCORAL: Sheet = { textEmphasis: "lightcoral" };
        static LIGHTCYAN: Sheet = { textEmphasis: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { textEmphasis: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { textEmphasis: "lightgray" };
        static LIGHTGREEN: Sheet = { textEmphasis: "lightgreen" };
        static LIGHTGREY: Sheet = { textEmphasis: "lightgrey" };
        static LIGHTPINK: Sheet = { textEmphasis: "lightpink" };
        static LIGHTSALMON: Sheet = { textEmphasis: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { textEmphasis: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { textEmphasis: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { textEmphasis: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { textEmphasis: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { textEmphasis: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { textEmphasis: "lightyellow" };
        static LIME: Sheet = { textEmphasis: "lime" };
        static LIMEGREEN: Sheet = { textEmphasis: "limegreen" };
        static LINEN: Sheet = { textEmphasis: "linen" };
        static MAGENTA: Sheet = { textEmphasis: "magenta" };
        static MAROON: Sheet = { textEmphasis: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { textEmphasis: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { textEmphasis: "mediumblue" };
        static MEDIUMORCHID: Sheet = { textEmphasis: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { textEmphasis: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { textEmphasis: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { textEmphasis: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { textEmphasis: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { textEmphasis: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { textEmphasis: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { textEmphasis: "midnightblue" };
        static MINTCREAM: Sheet = { textEmphasis: "mintcream" };
        static MISTYROSE: Sheet = { textEmphasis: "mistyrose" };
        static MOCCASIN: Sheet = { textEmphasis: "moccasin" };
        static NAVAJOWHITE: Sheet = { textEmphasis: "navajowhite" };
        static NAVY: Sheet = { textEmphasis: "navy" };
        static OLDLACE: Sheet = { textEmphasis: "oldlace" };
        static OLIVE: Sheet = { textEmphasis: "olive" };
        static OLIVEDRAB: Sheet = { textEmphasis: "olivedrab" };
        static ORANGE: Sheet = { textEmphasis: "orange" };
        static ORANGERED: Sheet = { textEmphasis: "orangered" };
        static ORCHID: Sheet = { textEmphasis: "orchid" };
        static PALEGOLDENROD: Sheet = { textEmphasis: "palegoldenrod" };
        static PALEGREEN: Sheet = { textEmphasis: "palegreen" };
        static PALETURQUOISE: Sheet = { textEmphasis: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { textEmphasis: "palevioletred" };
        static PAPAYAWHIP: Sheet = { textEmphasis: "papayawhip" };
        static PEACHPUFF: Sheet = { textEmphasis: "peachpuff" };
        static PERU: Sheet = { textEmphasis: "peru" };
        static PINK: Sheet = { textEmphasis: "pink" };
        static PLUM: Sheet = { textEmphasis: "plum" };
        static POWDERBLUE: Sheet = { textEmphasis: "powderblue" };
        static PURPLE: Sheet = { textEmphasis: "purple" };
        static REBECCAPURPLE: Sheet = { textEmphasis: "rebeccapurple" };
        static RED: Sheet = { textEmphasis: "red" };
        static ROSYBROWN: Sheet = { textEmphasis: "rosybrown" };
        static ROYALBLUE: Sheet = { textEmphasis: "royalblue" };
        static SADDLEBROWN: Sheet = { textEmphasis: "saddlebrown" };
        static SALMON: Sheet = { textEmphasis: "salmon" };
        static SANDYBROWN: Sheet = { textEmphasis: "sandybrown" };
        static SEAGREEN: Sheet = { textEmphasis: "seagreen" };
        static SEASHELL: Sheet = { textEmphasis: "seashell" };
        static SIENNA: Sheet = { textEmphasis: "sienna" };
        static SILVER: Sheet = { textEmphasis: "silver" };
        static SKYBLUE: Sheet = { textEmphasis: "skyblue" };
        static SLATEBLUE: Sheet = { textEmphasis: "slateblue" };
        static SLATEGRAY: Sheet = { textEmphasis: "slategray" };
        static SLATEGREY: Sheet = { textEmphasis: "slategrey" };
        static SNOW: Sheet = { textEmphasis: "snow" };
        static SPRINGGREEN: Sheet = { textEmphasis: "springgreen" };
        static STEELBLUE: Sheet = { textEmphasis: "steelblue" };
        static TAN: Sheet = { textEmphasis: "tan" };
        static TEAL: Sheet = { textEmphasis: "teal" };
        static THISTLE: Sheet = { textEmphasis: "thistle" };
        static TOMATO: Sheet = { textEmphasis: "tomato" };
        static TURQUOISE: Sheet = { textEmphasis: "turquoise" };
        static VIOLET: Sheet = { textEmphasis: "violet" };
        static WHEAT: Sheet = { textEmphasis: "wheat" };
        static WHITE: Sheet = { textEmphasis: "white" };
        static WHITESMOKE: Sheet = { textEmphasis: "whitesmoke" };
        static YELLOW: Sheet = { textEmphasis: "yellow" };
        static YELLOWGREEN: Sheet = { textEmphasis: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { textEmphasis: "currentcolor" };
        static ACTIVEBORDER: Sheet = { textEmphasis: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { textEmphasis: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { textEmphasis: "AppWorkspace" };
        static BACKGROUND: Sheet = { textEmphasis: "Background" };
        static BUTTONFACE: Sheet = { textEmphasis: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { textEmphasis: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { textEmphasis: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { textEmphasis: "ButtonText" };
        static CAPTIONTEXT: Sheet = { textEmphasis: "CaptionText" };
        static GRAYTEXT: Sheet = { textEmphasis: "GrayText" };
        static HIGHLIGHT: Sheet = { textEmphasis: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { textEmphasis: "HighlightText" };
        static INACTIVEBORDER: Sheet = { textEmphasis: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { textEmphasis: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { textEmphasis: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { textEmphasis: "InfoBackground" };
        static INFOTEXT: Sheet = { textEmphasis: "InfoText" };
        static MENU: Sheet = { textEmphasis: "Menu" };
        static MENUTEXT: Sheet = { textEmphasis: "MenuText" };
        static SCROLLBAR: Sheet = { textEmphasis: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { textEmphasis: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { textEmphasis: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { textEmphasis: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { textEmphasis: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { textEmphasis: "ThreeDShadow" };
        static WINDOW: Sheet = { textEmphasis: "Window" };
        static WINDOWFRAME: Sheet = { textEmphasis: "WindowFrame" };
        static WINDOWTEXT: Sheet = { textEmphasis: "WindowText" };
    }
    export class TextEmphasisColor {
        static set = (...params: Param[]): Sheet => ({ textEmphasisColor: buildProperty(params) });
        static X = (...params: number[]): Sheet => ({ textEmphasisColor: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ textEmphasisColor: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ textEmphasisColor: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ textEmphasisColor: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ textEmphasisColor: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { textEmphasisColor: "transparent" };
        static ALICEBLUE: Sheet = { textEmphasisColor: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { textEmphasisColor: "antiquewhite" };
        static AQUA: Sheet = { textEmphasisColor: "aqua" };
        static AQUAMARINE: Sheet = { textEmphasisColor: "aquamarine" };
        static AZURE: Sheet = { textEmphasisColor: "azure" };
        static BEIGE: Sheet = { textEmphasisColor: "beige" };
        static BISQUE: Sheet = { textEmphasisColor: "bisque" };
        static BLACK: Sheet = { textEmphasisColor: "black" };
        static BLANCHEDALMOND: Sheet = { textEmphasisColor: "blanchedalmond" };
        static BLUE: Sheet = { textEmphasisColor: "blue" };
        static BLUEVIOLET: Sheet = { textEmphasisColor: "blueviolet" };
        static BROWN: Sheet = { textEmphasisColor: "brown" };
        static BURLYWOOD: Sheet = { textEmphasisColor: "burlywood" };
        static CADETBLUE: Sheet = { textEmphasisColor: "cadetblue" };
        static CHARTREUSE: Sheet = { textEmphasisColor: "chartreuse" };
        static CHOCOLATE: Sheet = { textEmphasisColor: "chocolate" };
        static CORAL: Sheet = { textEmphasisColor: "coral" };
        static CORNFLOWERBLUE: Sheet = { textEmphasisColor: "cornflowerblue" };
        static CORNSILK: Sheet = { textEmphasisColor: "cornsilk" };
        static CRIMSON: Sheet = { textEmphasisColor: "crimson" };
        static CYAN: Sheet = { textEmphasisColor: "cyan" };
        static DARKBLUE: Sheet = { textEmphasisColor: "darkblue" };
        static DARKCYAN: Sheet = { textEmphasisColor: "darkcyan" };
        static DARKGOLDENROD: Sheet = { textEmphasisColor: "darkgoldenrod" };
        static DARKGRAY: Sheet = { textEmphasisColor: "darkgray" };
        static DARKGREEN: Sheet = { textEmphasisColor: "darkgreen" };
        static DARKGREY: Sheet = { textEmphasisColor: "darkgrey" };
        static DARKKHAKI: Sheet = { textEmphasisColor: "darkkhaki" };
        static DARKMAGENTA: Sheet = { textEmphasisColor: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { textEmphasisColor: "darkolivegreen" };
        static DARKORANGE: Sheet = { textEmphasisColor: "darkorange" };
        static DARKORCHID: Sheet = { textEmphasisColor: "darkorchid" };
        static DARKRED: Sheet = { textEmphasisColor: "darkred" };
        static DARKSALMON: Sheet = { textEmphasisColor: "darksalmon" };
        static DARKSEAGREEN: Sheet = { textEmphasisColor: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { textEmphasisColor: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { textEmphasisColor: "darkslategray" };
        static DARKSLATEGREY: Sheet = { textEmphasisColor: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { textEmphasisColor: "darkturquoise" };
        static DARKVIOLET: Sheet = { textEmphasisColor: "darkviolet" };
        static DEEPPINK: Sheet = { textEmphasisColor: "deeppink" };
        static DEEPSKYBLUE: Sheet = { textEmphasisColor: "deepskyblue" };
        static DIMGRAY: Sheet = { textEmphasisColor: "dimgray" };
        static DIMGREY: Sheet = { textEmphasisColor: "dimgrey" };
        static DODGERBLUE: Sheet = { textEmphasisColor: "dodgerblue" };
        static FIREBRICK: Sheet = { textEmphasisColor: "firebrick" };
        static FLORALWHITE: Sheet = { textEmphasisColor: "floralwhite" };
        static FORESTGREEN: Sheet = { textEmphasisColor: "forestgreen" };
        static FUCHSIA: Sheet = { textEmphasisColor: "fuchsia" };
        static GAINSBORO: Sheet = { textEmphasisColor: "gainsboro" };
        static GHOSTWHITE: Sheet = { textEmphasisColor: "ghostwhite" };
        static GOLD: Sheet = { textEmphasisColor: "gold" };
        static GOLDENROD: Sheet = { textEmphasisColor: "goldenrod" };
        static GRAY: Sheet = { textEmphasisColor: "gray" };
        static GREEN: Sheet = { textEmphasisColor: "green" };
        static GREENYELLOW: Sheet = { textEmphasisColor: "greenyellow" };
        static GREY: Sheet = { textEmphasisColor: "grey" };
        static HONEYDEW: Sheet = { textEmphasisColor: "honeydew" };
        static HOTPINK: Sheet = { textEmphasisColor: "hotpink" };
        static INDIANRED: Sheet = { textEmphasisColor: "indianred" };
        static INDIGO: Sheet = { textEmphasisColor: "indigo" };
        static IVORY: Sheet = { textEmphasisColor: "ivory" };
        static KHAKI: Sheet = { textEmphasisColor: "khaki" };
        static LAVENDER: Sheet = { textEmphasisColor: "lavender" };
        static LAVENDERBLUSH: Sheet = { textEmphasisColor: "lavenderblush" };
        static LAWNGREEN: Sheet = { textEmphasisColor: "lawngreen" };
        static LEMONCHIFFON: Sheet = { textEmphasisColor: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { textEmphasisColor: "lightblue" };
        static LIGHTCORAL: Sheet = { textEmphasisColor: "lightcoral" };
        static LIGHTCYAN: Sheet = { textEmphasisColor: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { textEmphasisColor: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { textEmphasisColor: "lightgray" };
        static LIGHTGREEN: Sheet = { textEmphasisColor: "lightgreen" };
        static LIGHTGREY: Sheet = { textEmphasisColor: "lightgrey" };
        static LIGHTPINK: Sheet = { textEmphasisColor: "lightpink" };
        static LIGHTSALMON: Sheet = { textEmphasisColor: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { textEmphasisColor: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { textEmphasisColor: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { textEmphasisColor: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { textEmphasisColor: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { textEmphasisColor: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { textEmphasisColor: "lightyellow" };
        static LIME: Sheet = { textEmphasisColor: "lime" };
        static LIMEGREEN: Sheet = { textEmphasisColor: "limegreen" };
        static LINEN: Sheet = { textEmphasisColor: "linen" };
        static MAGENTA: Sheet = { textEmphasisColor: "magenta" };
        static MAROON: Sheet = { textEmphasisColor: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { textEmphasisColor: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { textEmphasisColor: "mediumblue" };
        static MEDIUMORCHID: Sheet = { textEmphasisColor: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { textEmphasisColor: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { textEmphasisColor: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { textEmphasisColor: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { textEmphasisColor: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { textEmphasisColor: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { textEmphasisColor: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { textEmphasisColor: "midnightblue" };
        static MINTCREAM: Sheet = { textEmphasisColor: "mintcream" };
        static MISTYROSE: Sheet = { textEmphasisColor: "mistyrose" };
        static MOCCASIN: Sheet = { textEmphasisColor: "moccasin" };
        static NAVAJOWHITE: Sheet = { textEmphasisColor: "navajowhite" };
        static NAVY: Sheet = { textEmphasisColor: "navy" };
        static OLDLACE: Sheet = { textEmphasisColor: "oldlace" };
        static OLIVE: Sheet = { textEmphasisColor: "olive" };
        static OLIVEDRAB: Sheet = { textEmphasisColor: "olivedrab" };
        static ORANGE: Sheet = { textEmphasisColor: "orange" };
        static ORANGERED: Sheet = { textEmphasisColor: "orangered" };
        static ORCHID: Sheet = { textEmphasisColor: "orchid" };
        static PALEGOLDENROD: Sheet = { textEmphasisColor: "palegoldenrod" };
        static PALEGREEN: Sheet = { textEmphasisColor: "palegreen" };
        static PALETURQUOISE: Sheet = { textEmphasisColor: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { textEmphasisColor: "palevioletred" };
        static PAPAYAWHIP: Sheet = { textEmphasisColor: "papayawhip" };
        static PEACHPUFF: Sheet = { textEmphasisColor: "peachpuff" };
        static PERU: Sheet = { textEmphasisColor: "peru" };
        static PINK: Sheet = { textEmphasisColor: "pink" };
        static PLUM: Sheet = { textEmphasisColor: "plum" };
        static POWDERBLUE: Sheet = { textEmphasisColor: "powderblue" };
        static PURPLE: Sheet = { textEmphasisColor: "purple" };
        static REBECCAPURPLE: Sheet = { textEmphasisColor: "rebeccapurple" };
        static RED: Sheet = { textEmphasisColor: "red" };
        static ROSYBROWN: Sheet = { textEmphasisColor: "rosybrown" };
        static ROYALBLUE: Sheet = { textEmphasisColor: "royalblue" };
        static SADDLEBROWN: Sheet = { textEmphasisColor: "saddlebrown" };
        static SALMON: Sheet = { textEmphasisColor: "salmon" };
        static SANDYBROWN: Sheet = { textEmphasisColor: "sandybrown" };
        static SEAGREEN: Sheet = { textEmphasisColor: "seagreen" };
        static SEASHELL: Sheet = { textEmphasisColor: "seashell" };
        static SIENNA: Sheet = { textEmphasisColor: "sienna" };
        static SILVER: Sheet = { textEmphasisColor: "silver" };
        static SKYBLUE: Sheet = { textEmphasisColor: "skyblue" };
        static SLATEBLUE: Sheet = { textEmphasisColor: "slateblue" };
        static SLATEGRAY: Sheet = { textEmphasisColor: "slategray" };
        static SLATEGREY: Sheet = { textEmphasisColor: "slategrey" };
        static SNOW: Sheet = { textEmphasisColor: "snow" };
        static SPRINGGREEN: Sheet = { textEmphasisColor: "springgreen" };
        static STEELBLUE: Sheet = { textEmphasisColor: "steelblue" };
        static TAN: Sheet = { textEmphasisColor: "tan" };
        static TEAL: Sheet = { textEmphasisColor: "teal" };
        static THISTLE: Sheet = { textEmphasisColor: "thistle" };
        static TOMATO: Sheet = { textEmphasisColor: "tomato" };
        static TURQUOISE: Sheet = { textEmphasisColor: "turquoise" };
        static VIOLET: Sheet = { textEmphasisColor: "violet" };
        static WHEAT: Sheet = { textEmphasisColor: "wheat" };
        static WHITE: Sheet = { textEmphasisColor: "white" };
        static WHITESMOKE: Sheet = { textEmphasisColor: "whitesmoke" };
        static YELLOW: Sheet = { textEmphasisColor: "yellow" };
        static YELLOWGREEN: Sheet = { textEmphasisColor: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { textEmphasisColor: "currentcolor" };
        static ACTIVEBORDER: Sheet = { textEmphasisColor: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { textEmphasisColor: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { textEmphasisColor: "AppWorkspace" };
        static BACKGROUND: Sheet = { textEmphasisColor: "Background" };
        static BUTTONFACE: Sheet = { textEmphasisColor: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { textEmphasisColor: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { textEmphasisColor: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { textEmphasisColor: "ButtonText" };
        static CAPTIONTEXT: Sheet = { textEmphasisColor: "CaptionText" };
        static GRAYTEXT: Sheet = { textEmphasisColor: "GrayText" };
        static HIGHLIGHT: Sheet = { textEmphasisColor: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { textEmphasisColor: "HighlightText" };
        static INACTIVEBORDER: Sheet = { textEmphasisColor: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { textEmphasisColor: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { textEmphasisColor: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { textEmphasisColor: "InfoBackground" };
        static INFOTEXT: Sheet = { textEmphasisColor: "InfoText" };
        static MENU: Sheet = { textEmphasisColor: "Menu" };
        static MENUTEXT: Sheet = { textEmphasisColor: "MenuText" };
        static SCROLLBAR: Sheet = { textEmphasisColor: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { textEmphasisColor: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { textEmphasisColor: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { textEmphasisColor: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { textEmphasisColor: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { textEmphasisColor: "ThreeDShadow" };
        static WINDOW: Sheet = { textEmphasisColor: "Window" };
        static WINDOWFRAME: Sheet = { textEmphasisColor: "WindowFrame" };
        static WINDOWTEXT: Sheet = { textEmphasisColor: "WindowText" };
    }
    export class TextEmphasisPosition {
        static set = (...params: Param[]): Sheet => ({ textEmphasisPosition: buildProperty(params) });
        static OVER: Sheet = { textEmphasisPosition: "over" };
        static UNDER: Sheet = { textEmphasisPosition: "under" };
        static RIGHT: Sheet = { textEmphasisPosition: "right" };
        static LEFT: Sheet = { textEmphasisPosition: "left" };
    }
    export class TextEmphasisStyle {
        static set = (...params: Param[]): Sheet => ({ textEmphasisStyle: buildProperty(params) });
        static NONE: Sheet = { textEmphasisStyle: "none" };
        static FILLED: Sheet = { textEmphasisStyle: "filled" };
        static OPEN: Sheet = { textEmphasisStyle: "open" };
        static DOT: Sheet = { textEmphasisStyle: "dot" };
        static CIRCLE: Sheet = { textEmphasisStyle: "circle" };
        static DOUBLE_CIRCLE: Sheet = { textEmphasisStyle: "double-circle" };
        static TRIANGLE: Sheet = { textEmphasisStyle: "triangle" };
        static SESAME: Sheet = { textEmphasisStyle: "sesame" };
    }
    export class TextIndent {
        static set = (...params: Param[]): Sheet => ({ textIndent: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ textIndent: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ textIndent: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ textIndent: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ textIndent: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ textIndent: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ textIndent: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ textIndent: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ textIndent: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ textIndent: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ textIndent: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ textIndent: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ textIndent: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ textIndent: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ textIndent: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ textIndent: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ textIndent: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ textIndent: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ textIndent: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ textIndent: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ textIndent: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ textIndent: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ textIndent: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ textIndent: Length.X(...params) });
        static HANGING: Sheet = { textIndent: "hanging" };
        static EACH_LINE: Sheet = { textIndent: "each-line" };
    }
    export class TextJustify {
        static set = (...params: Param[]): Sheet => ({ textJustify: buildProperty(params) });
        static AUTO: Sheet = { textJustify: "auto" };
        static INTER_CHARACTER: Sheet = { textJustify: "inter-character" };
        static INTER_WORD: Sheet = { textJustify: "inter-word" };
        static NONE: Sheet = { textJustify: "none" };
    }
    export class TextOrientation {
        static set = (...params: Param[]): Sheet => ({ textOrientation: buildProperty(params) });
        static MIXED: Sheet = { textOrientation: "mixed" };
        static UPRIGHT: Sheet = { textOrientation: "upright" };
        static SIDEWAYS: Sheet = { textOrientation: "sideways" };
    }
    export class TextOverflow {
        static set = (...params: Param[]): Sheet => ({ textOverflow: buildProperty(params) });
        static CLIP: Sheet = { textOverflow: "clip" };
        static ELLIPSIS: Sheet = { textOverflow: "ellipsis" };
    }
    export class TextRendering {
        static set = (...params: Param[]): Sheet => ({ textRendering: buildProperty(params) });
        static AUTO: Sheet = { textRendering: "auto" };
        static OPTIMIZESPEED: Sheet = { textRendering: "optimizeSpeed" };
        static OPTIMIZELEGIBILITY: Sheet = { textRendering: "optimizeLegibility" };
        static GEOMETRICPRECISION: Sheet = { textRendering: "geometricPrecision" };
    }
    export class TextShadow {
        static set = (...params: Param[]): Sheet => ({ textShadow: buildProperty(params) });
        static NONE: Sheet = { textShadow: "none" };
        static cap = (...params: number[]): Sheet => ({ textShadow: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ textShadow: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ textShadow: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ textShadow: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ textShadow: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ textShadow: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ textShadow: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ textShadow: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ textShadow: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ textShadow: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ textShadow: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ textShadow: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ textShadow: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ textShadow: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ textShadow: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ textShadow: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ textShadow: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ textShadow: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ textShadow: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ textShadow: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ textShadow: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ textShadow: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ textShadow: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ textShadow: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ textShadow: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ textShadow: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ textShadow: Angle.turn(...params) });
        static TRANSPARENT: Sheet = { textShadow: "transparent" };
        static ALICEBLUE: Sheet = { textShadow: "aliceblue" };
        static ANTIQUEWHITE: Sheet = { textShadow: "antiquewhite" };
        static AQUA: Sheet = { textShadow: "aqua" };
        static AQUAMARINE: Sheet = { textShadow: "aquamarine" };
        static AZURE: Sheet = { textShadow: "azure" };
        static BEIGE: Sheet = { textShadow: "beige" };
        static BISQUE: Sheet = { textShadow: "bisque" };
        static BLACK: Sheet = { textShadow: "black" };
        static BLANCHEDALMOND: Sheet = { textShadow: "blanchedalmond" };
        static BLUE: Sheet = { textShadow: "blue" };
        static BLUEVIOLET: Sheet = { textShadow: "blueviolet" };
        static BROWN: Sheet = { textShadow: "brown" };
        static BURLYWOOD: Sheet = { textShadow: "burlywood" };
        static CADETBLUE: Sheet = { textShadow: "cadetblue" };
        static CHARTREUSE: Sheet = { textShadow: "chartreuse" };
        static CHOCOLATE: Sheet = { textShadow: "chocolate" };
        static CORAL: Sheet = { textShadow: "coral" };
        static CORNFLOWERBLUE: Sheet = { textShadow: "cornflowerblue" };
        static CORNSILK: Sheet = { textShadow: "cornsilk" };
        static CRIMSON: Sheet = { textShadow: "crimson" };
        static CYAN: Sheet = { textShadow: "cyan" };
        static DARKBLUE: Sheet = { textShadow: "darkblue" };
        static DARKCYAN: Sheet = { textShadow: "darkcyan" };
        static DARKGOLDENROD: Sheet = { textShadow: "darkgoldenrod" };
        static DARKGRAY: Sheet = { textShadow: "darkgray" };
        static DARKGREEN: Sheet = { textShadow: "darkgreen" };
        static DARKGREY: Sheet = { textShadow: "darkgrey" };
        static DARKKHAKI: Sheet = { textShadow: "darkkhaki" };
        static DARKMAGENTA: Sheet = { textShadow: "darkmagenta" };
        static DARKOLIVEGREEN: Sheet = { textShadow: "darkolivegreen" };
        static DARKORANGE: Sheet = { textShadow: "darkorange" };
        static DARKORCHID: Sheet = { textShadow: "darkorchid" };
        static DARKRED: Sheet = { textShadow: "darkred" };
        static DARKSALMON: Sheet = { textShadow: "darksalmon" };
        static DARKSEAGREEN: Sheet = { textShadow: "darkseagreen" };
        static DARKSLATEBLUE: Sheet = { textShadow: "darkslateblue" };
        static DARKSLATEGRAY: Sheet = { textShadow: "darkslategray" };
        static DARKSLATEGREY: Sheet = { textShadow: "darkslategrey" };
        static DARKTURQUOISE: Sheet = { textShadow: "darkturquoise" };
        static DARKVIOLET: Sheet = { textShadow: "darkviolet" };
        static DEEPPINK: Sheet = { textShadow: "deeppink" };
        static DEEPSKYBLUE: Sheet = { textShadow: "deepskyblue" };
        static DIMGRAY: Sheet = { textShadow: "dimgray" };
        static DIMGREY: Sheet = { textShadow: "dimgrey" };
        static DODGERBLUE: Sheet = { textShadow: "dodgerblue" };
        static FIREBRICK: Sheet = { textShadow: "firebrick" };
        static FLORALWHITE: Sheet = { textShadow: "floralwhite" };
        static FORESTGREEN: Sheet = { textShadow: "forestgreen" };
        static FUCHSIA: Sheet = { textShadow: "fuchsia" };
        static GAINSBORO: Sheet = { textShadow: "gainsboro" };
        static GHOSTWHITE: Sheet = { textShadow: "ghostwhite" };
        static GOLD: Sheet = { textShadow: "gold" };
        static GOLDENROD: Sheet = { textShadow: "goldenrod" };
        static GRAY: Sheet = { textShadow: "gray" };
        static GREEN: Sheet = { textShadow: "green" };
        static GREENYELLOW: Sheet = { textShadow: "greenyellow" };
        static GREY: Sheet = { textShadow: "grey" };
        static HONEYDEW: Sheet = { textShadow: "honeydew" };
        static HOTPINK: Sheet = { textShadow: "hotpink" };
        static INDIANRED: Sheet = { textShadow: "indianred" };
        static INDIGO: Sheet = { textShadow: "indigo" };
        static IVORY: Sheet = { textShadow: "ivory" };
        static KHAKI: Sheet = { textShadow: "khaki" };
        static LAVENDER: Sheet = { textShadow: "lavender" };
        static LAVENDERBLUSH: Sheet = { textShadow: "lavenderblush" };
        static LAWNGREEN: Sheet = { textShadow: "lawngreen" };
        static LEMONCHIFFON: Sheet = { textShadow: "lemonchiffon" };
        static LIGHTBLUE: Sheet = { textShadow: "lightblue" };
        static LIGHTCORAL: Sheet = { textShadow: "lightcoral" };
        static LIGHTCYAN: Sheet = { textShadow: "lightcyan" };
        static LIGHTGOLDENRODYELLOW: Sheet = { textShadow: "lightgoldenrodyellow" };
        static LIGHTGRAY: Sheet = { textShadow: "lightgray" };
        static LIGHTGREEN: Sheet = { textShadow: "lightgreen" };
        static LIGHTGREY: Sheet = { textShadow: "lightgrey" };
        static LIGHTPINK: Sheet = { textShadow: "lightpink" };
        static LIGHTSALMON: Sheet = { textShadow: "lightsalmon" };
        static LIGHTSEAGREEN: Sheet = { textShadow: "lightseagreen" };
        static LIGHTSKYBLUE: Sheet = { textShadow: "lightskyblue" };
        static LIGHTSLATEGRAY: Sheet = { textShadow: "lightslategray" };
        static LIGHTSLATEGREY: Sheet = { textShadow: "lightslategrey" };
        static LIGHTSTEELBLUE: Sheet = { textShadow: "lightsteelblue" };
        static LIGHTYELLOW: Sheet = { textShadow: "lightyellow" };
        static LIME: Sheet = { textShadow: "lime" };
        static LIMEGREEN: Sheet = { textShadow: "limegreen" };
        static LINEN: Sheet = { textShadow: "linen" };
        static MAGENTA: Sheet = { textShadow: "magenta" };
        static MAROON: Sheet = { textShadow: "maroon" };
        static MEDIUMAQUAMARINE: Sheet = { textShadow: "mediumaquamarine" };
        static MEDIUMBLUE: Sheet = { textShadow: "mediumblue" };
        static MEDIUMORCHID: Sheet = { textShadow: "mediumorchid" };
        static MEDIUMPURPLE: Sheet = { textShadow: "mediumpurple" };
        static MEDIUMSEAGREEN: Sheet = { textShadow: "mediumseagreen" };
        static MEDIUMSLATEBLUE: Sheet = { textShadow: "mediumslateblue" };
        static MEDIUMSPRINGGREEN: Sheet = { textShadow: "mediumspringgreen" };
        static MEDIUMTURQUOISE: Sheet = { textShadow: "mediumturquoise" };
        static MEDIUMVIOLETRED: Sheet = { textShadow: "mediumvioletred" };
        static MIDNIGHTBLUE: Sheet = { textShadow: "midnightblue" };
        static MINTCREAM: Sheet = { textShadow: "mintcream" };
        static MISTYROSE: Sheet = { textShadow: "mistyrose" };
        static MOCCASIN: Sheet = { textShadow: "moccasin" };
        static NAVAJOWHITE: Sheet = { textShadow: "navajowhite" };
        static NAVY: Sheet = { textShadow: "navy" };
        static OLDLACE: Sheet = { textShadow: "oldlace" };
        static OLIVE: Sheet = { textShadow: "olive" };
        static OLIVEDRAB: Sheet = { textShadow: "olivedrab" };
        static ORANGE: Sheet = { textShadow: "orange" };
        static ORANGERED: Sheet = { textShadow: "orangered" };
        static ORCHID: Sheet = { textShadow: "orchid" };
        static PALEGOLDENROD: Sheet = { textShadow: "palegoldenrod" };
        static PALEGREEN: Sheet = { textShadow: "palegreen" };
        static PALETURQUOISE: Sheet = { textShadow: "paleturquoise" };
        static PALEVIOLETRED: Sheet = { textShadow: "palevioletred" };
        static PAPAYAWHIP: Sheet = { textShadow: "papayawhip" };
        static PEACHPUFF: Sheet = { textShadow: "peachpuff" };
        static PERU: Sheet = { textShadow: "peru" };
        static PINK: Sheet = { textShadow: "pink" };
        static PLUM: Sheet = { textShadow: "plum" };
        static POWDERBLUE: Sheet = { textShadow: "powderblue" };
        static PURPLE: Sheet = { textShadow: "purple" };
        static REBECCAPURPLE: Sheet = { textShadow: "rebeccapurple" };
        static RED: Sheet = { textShadow: "red" };
        static ROSYBROWN: Sheet = { textShadow: "rosybrown" };
        static ROYALBLUE: Sheet = { textShadow: "royalblue" };
        static SADDLEBROWN: Sheet = { textShadow: "saddlebrown" };
        static SALMON: Sheet = { textShadow: "salmon" };
        static SANDYBROWN: Sheet = { textShadow: "sandybrown" };
        static SEAGREEN: Sheet = { textShadow: "seagreen" };
        static SEASHELL: Sheet = { textShadow: "seashell" };
        static SIENNA: Sheet = { textShadow: "sienna" };
        static SILVER: Sheet = { textShadow: "silver" };
        static SKYBLUE: Sheet = { textShadow: "skyblue" };
        static SLATEBLUE: Sheet = { textShadow: "slateblue" };
        static SLATEGRAY: Sheet = { textShadow: "slategray" };
        static SLATEGREY: Sheet = { textShadow: "slategrey" };
        static SNOW: Sheet = { textShadow: "snow" };
        static SPRINGGREEN: Sheet = { textShadow: "springgreen" };
        static STEELBLUE: Sheet = { textShadow: "steelblue" };
        static TAN: Sheet = { textShadow: "tan" };
        static TEAL: Sheet = { textShadow: "teal" };
        static THISTLE: Sheet = { textShadow: "thistle" };
        static TOMATO: Sheet = { textShadow: "tomato" };
        static TURQUOISE: Sheet = { textShadow: "turquoise" };
        static VIOLET: Sheet = { textShadow: "violet" };
        static WHEAT: Sheet = { textShadow: "wheat" };
        static WHITE: Sheet = { textShadow: "white" };
        static WHITESMOKE: Sheet = { textShadow: "whitesmoke" };
        static YELLOW: Sheet = { textShadow: "yellow" };
        static YELLOWGREEN: Sheet = { textShadow: "yellowgreen" };
        static CURRENTCOLOR: Sheet = { textShadow: "currentcolor" };
        static ACTIVEBORDER: Sheet = { textShadow: "ActiveBorder" };
        static ACTIVECAPTION: Sheet = { textShadow: "ActiveCaption" };
        static APPWORKSPACE: Sheet = { textShadow: "AppWorkspace" };
        static BACKGROUND: Sheet = { textShadow: "Background" };
        static BUTTONFACE: Sheet = { textShadow: "ButtonFace" };
        static BUTTONHIGHLIGHT: Sheet = { textShadow: "ButtonHighlight" };
        static BUTTONSHADOW: Sheet = { textShadow: "ButtonShadow" };
        static BUTTONTEXT: Sheet = { textShadow: "ButtonText" };
        static CAPTIONTEXT: Sheet = { textShadow: "CaptionText" };
        static GRAYTEXT: Sheet = { textShadow: "GrayText" };
        static HIGHLIGHT: Sheet = { textShadow: "Highlight" };
        static HIGHLIGHTTEXT: Sheet = { textShadow: "HighlightText" };
        static INACTIVEBORDER: Sheet = { textShadow: "InactiveBorder" };
        static INACTIVECAPTION: Sheet = { textShadow: "InactiveCaption" };
        static INACTIVECAPTIONTEXT: Sheet = { textShadow: "InactiveCaptionText" };
        static INFOBACKGROUND: Sheet = { textShadow: "InfoBackground" };
        static INFOTEXT: Sheet = { textShadow: "InfoText" };
        static MENU: Sheet = { textShadow: "Menu" };
        static MENUTEXT: Sheet = { textShadow: "MenuText" };
        static SCROLLBAR: Sheet = { textShadow: "Scrollbar" };
        static THREEDDARKSHADOW: Sheet = { textShadow: "ThreeDDarkShadow" };
        static THREEDFACE: Sheet = { textShadow: "ThreeDFace" };
        static THREEDHIGHLIGHT: Sheet = { textShadow: "ThreeDHighlight" };
        static THREEDLIGHTSHADOW: Sheet = { textShadow: "ThreeDLightShadow" };
        static THREEDSHADOW: Sheet = { textShadow: "ThreeDShadow" };
        static WINDOW: Sheet = { textShadow: "Window" };
        static WINDOWFRAME: Sheet = { textShadow: "WindowFrame" };
        static WINDOWTEXT: Sheet = { textShadow: "WindowText" };
    }
    export class TextSizeAdjust {
        static set = (...params: Param[]): Sheet => ({ textSizeAdjust: buildProperty(params) });
        static NONE: Sheet = { textSizeAdjust: "none" };
        static AUTO: Sheet = { textSizeAdjust: "auto" };
        static X = (...params: number[]): Sheet => ({ textSizeAdjust: Length.X(...params) });
    }
    export class TextTransform {
        static set = (...params: Param[]): Sheet => ({ textTransform: buildProperty(params) });
        static NONE: Sheet = { textTransform: "none" };
        static CAPITALIZE: Sheet = { textTransform: "capitalize" };
        static UPPERCASE: Sheet = { textTransform: "uppercase" };
        static LOWERCASE: Sheet = { textTransform: "lowercase" };
        static FULL_WIDTH: Sheet = { textTransform: "full-width" };
    }
    export class TextUnderlinePosition {
        static set = (...params: Param[]): Sheet => ({ textUnderlinePosition: buildProperty(params) });
        static AUTO: Sheet = { textUnderlinePosition: "auto" };
        static UNDER: Sheet = { textUnderlinePosition: "under" };
        static LEFT: Sheet = { textUnderlinePosition: "left" };
        static RIGHT: Sheet = { textUnderlinePosition: "right" };
    }
    export class Top {
        static set = (...params: Param[]): Sheet => ({ top: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ top: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ top: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ top: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ top: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ top: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ top: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ top: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ top: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ top: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ top: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ top: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ top: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ top: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ top: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ top: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ top: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ top: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ top: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ top: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ top: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ top: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ top: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ top: Length.X(...params) });
        static AUTO: Sheet = { top: "auto" };
    }
    export class TouchAction {
        static set = (...params: Param[]): Sheet => ({ touchAction: buildProperty(params) });
        static AUTO: Sheet = { touchAction: "auto" };
        static NONE: Sheet = { touchAction: "none" };
        static PAN_X: Sheet = { touchAction: "pan-x" };
        static PAN_LEFT: Sheet = { touchAction: "pan-left" };
        static PAN_RIGHT: Sheet = { touchAction: "pan-right" };
        static PAN_Y: Sheet = { touchAction: "pan-y" };
        static PAN_UP: Sheet = { touchAction: "pan-up" };
        static PAN_DOWN: Sheet = { touchAction: "pan-down" };
        static PINCH_ZOOM: Sheet = { touchAction: "pinch-zoom" };
        static MANIPULATION: Sheet = { touchAction: "manipulation" };
    }
    export class Transform {
        static set = (...params: Param[]): Sheet => ({ transform: buildProperty(params) });
        static NONE: Sheet = { transform: "none" };
        static cap = (...params: number[]): Sheet => ({ transform: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ transform: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ transform: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ transform: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ transform: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ transform: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ transform: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ transform: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ transform: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ transform: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ transform: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ transform: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ transform: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ transform: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ transform: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ transform: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ transform: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ transform: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ transform: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ transform: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ transform: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ transform: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ transform: Length.X(...params) });
        static deg = (...params: number[]): Sheet => ({ transform: Angle.deg(...params) });
        static rad = (...params: number[]): Sheet => ({ transform: Angle.rad(...params) });
        static grad = (...params: number[]): Sheet => ({ transform: Angle.grad(...params) });
        static turn = (...params: number[]): Sheet => ({ transform: Angle.turn(...params) });
    }
    export class TransformBox {
        static set = (...params: Param[]): Sheet => ({ transformBox: buildProperty(params) });
        static BORDER_BOX: Sheet = { transformBox: "border-box" };
        static FILL_BOX: Sheet = { transformBox: "fill-box" };
        static VIEW_BOX: Sheet = { transformBox: "view-box" };
    }
    export class TransformOrigin {
        static set = (...params: Param[]): Sheet => ({ transformOrigin: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ transformOrigin: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ transformOrigin: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ transformOrigin: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ transformOrigin: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ transformOrigin: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ transformOrigin: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ transformOrigin: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ transformOrigin: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ transformOrigin: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ transformOrigin: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ transformOrigin: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ transformOrigin: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ transformOrigin: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ transformOrigin: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ transformOrigin: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ transformOrigin: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ transformOrigin: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ transformOrigin: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ transformOrigin: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ transformOrigin: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ transformOrigin: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ transformOrigin: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ transformOrigin: Length.X(...params) });
        static LEFT: Sheet = { transformOrigin: "left" };
        static CENTER: Sheet = { transformOrigin: "center" };
        static RIGHT: Sheet = { transformOrigin: "right" };
        static TOP: Sheet = { transformOrigin: "top" };
        static BOTTOM: Sheet = { transformOrigin: "bottom" };
    }
    export class TransformStyle {
        static set = (...params: Param[]): Sheet => ({ transformStyle: buildProperty(params) });
        static FLAT: Sheet = { transformStyle: "flat" };
        static PRESERVE_3D: Sheet = { transformStyle: "preserve-3d" };
    }
    export class Transition {
        static set = (...params: Param[]): Sheet => ({ transition: buildProperty(params) });
        static NONE: Sheet = { transition: "none" };
        static ALL: Sheet = { transition: "all" };
        static s = (...params: number[]): Sheet => ({ transition: Time.s(...params) });
        static ms = (...params: number[]): Sheet => ({ transition: Time.ms(...params) });
        static LINEAR: Sheet = { transition: "linear" };
        static EASE: Sheet = { transition: "ease" };
        static EASE_IN: Sheet = { transition: "ease-in" };
        static EASE_OUT: Sheet = { transition: "ease-out" };
        static EASE_IN_OUT: Sheet = { transition: "ease-in-out" };
        static STEP_START: Sheet = { transition: "step-start" };
        static STEP_END: Sheet = { transition: "step-end" };
        static START: Sheet = { transition: "start" };
        static END: Sheet = { transition: "end" };
    }
    export class TransitionDelay {
        static set = (...params: Param[]): Sheet => ({ transitionDelay: buildProperty(params) });
        static s = (...params: number[]): Sheet => ({ transitionDelay: Time.s(...params) });
        static ms = (...params: number[]): Sheet => ({ transitionDelay: Time.ms(...params) });
    }
    export class TransitionDuration {
        static set = (...params: Param[]): Sheet => ({ transitionDuration: buildProperty(params) });
        static s = (...params: number[]): Sheet => ({ transitionDuration: Time.s(...params) });
        static ms = (...params: number[]): Sheet => ({ transitionDuration: Time.ms(...params) });
    }
    export class TransitionProperty {
        static set = (...params: Param[]): Sheet => ({ transitionProperty: buildProperty(params) });
        static NONE: Sheet = { transitionProperty: "none" };
        static ALL: Sheet = { transitionProperty: "all" };
    }
    export class TransitionTimingFunction {
        static set = (...params: Param[]): Sheet => ({ transitionTimingFunction: buildProperty(params) });
        static LINEAR: Sheet = { transitionTimingFunction: "linear" };
        static EASE: Sheet = { transitionTimingFunction: "ease" };
        static EASE_IN: Sheet = { transitionTimingFunction: "ease-in" };
        static EASE_OUT: Sheet = { transitionTimingFunction: "ease-out" };
        static EASE_IN_OUT: Sheet = { transitionTimingFunction: "ease-in-out" };
        static STEP_START: Sheet = { transitionTimingFunction: "step-start" };
        static STEP_END: Sheet = { transitionTimingFunction: "step-end" };
        static START: Sheet = { transitionTimingFunction: "start" };
        static END: Sheet = { transitionTimingFunction: "end" };
    }
    export class Translate {
        static set = (...params: Param[]): Sheet => ({ translate: buildProperty(params) });
        static NONE: Sheet = { translate: "none" };
        static cap = (...params: number[]): Sheet => ({ translate: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ translate: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ translate: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ translate: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ translate: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ translate: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ translate: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ translate: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ translate: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ translate: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ translate: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ translate: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ translate: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ translate: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ translate: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ translate: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ translate: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ translate: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ translate: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ translate: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ translate: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ translate: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ translate: Length.X(...params) });
    }
    export class UnicodeBidi {
        static set = (...params: Param[]): Sheet => ({ unicodeBidi: buildProperty(params) });
        static NORMAL: Sheet = { unicodeBidi: "normal" };
        static EMBED: Sheet = { unicodeBidi: "embed" };
        static ISOLATE: Sheet = { unicodeBidi: "isolate" };
        static BIDI_OVERRIDE: Sheet = { unicodeBidi: "bidi-override" };
        static ISOLATE_OVERRIDE: Sheet = { unicodeBidi: "isolate-override" };
        static PLAINTEXT: Sheet = { unicodeBidi: "plaintext" };
    }
    export class UserSelect {
        static set = (...params: Param[]): Sheet => ({ userSelect: buildProperty(params) });
        static AUTO: Sheet = { userSelect: "auto" };
        static TEXT: Sheet = { userSelect: "text" };
        static NONE: Sheet = { userSelect: "none" };
        static CONTAIN: Sheet = { userSelect: "contain" };
        static ALL: Sheet = { userSelect: "all" };
    }
    export class VerticalAlign {
        static set = (...params: Param[]): Sheet => ({ verticalAlign: buildProperty(params) });
        static BASELINE: Sheet = { verticalAlign: "baseline" };
        static SUB: Sheet = { verticalAlign: "sub" };
        static SUPER: Sheet = { verticalAlign: "super" };
        static TEXT_TOP: Sheet = { verticalAlign: "text-top" };
        static TEXT_BOTTOM: Sheet = { verticalAlign: "text-bottom" };
        static MIDDLE: Sheet = { verticalAlign: "middle" };
        static TOP: Sheet = { verticalAlign: "top" };
        static BOTTOM: Sheet = { verticalAlign: "bottom" };
        static X = (...params: number[]): Sheet => ({ verticalAlign: Length.X(...params) });
        static cap = (...params: number[]): Sheet => ({ verticalAlign: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ verticalAlign: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ verticalAlign: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ verticalAlign: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ verticalAlign: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ verticalAlign: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ verticalAlign: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ verticalAlign: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ verticalAlign: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ verticalAlign: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ verticalAlign: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ verticalAlign: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ verticalAlign: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ verticalAlign: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ verticalAlign: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ verticalAlign: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ verticalAlign: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ verticalAlign: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ verticalAlign: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ verticalAlign: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ verticalAlign: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ verticalAlign: Length.fr(...params) });
    }
    export class Visibility {
        static set = (...params: Param[]): Sheet => ({ visibility: buildProperty(params) });
        static VISIBLE: Sheet = { visibility: "visible" };
        static HIDDEN: Sheet = { visibility: "hidden" };
        static COLLAPSE: Sheet = { visibility: "collapse" };
    }
    export class WhiteSpace {
        static set = (...params: Param[]): Sheet => ({ whiteSpace: buildProperty(params) });
        static NORMAL: Sheet = { whiteSpace: "normal" };
        static PRE: Sheet = { whiteSpace: "pre" };
        static NOWRAP: Sheet = { whiteSpace: "nowrap" };
        static PRE_WRAP: Sheet = { whiteSpace: "pre-wrap" };
        static PRE_LINE: Sheet = { whiteSpace: "pre-line" };
    }
    export class Widows {
        static set = (...params: Param[]): Sheet => ({ widows: buildProperty(params) });
    }
    export class Width {
        static set = (...params: Param[]): Sheet => ({ width: buildProperty(params) });
        static cap = (...params: number[]): Sheet => ({ width: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ width: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ width: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ width: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ width: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ width: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ width: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ width: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ width: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ width: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ width: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ width: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ width: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ width: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ width: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ width: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ width: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ width: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ width: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ width: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ width: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ width: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ width: Length.X(...params) });
        static BORDER_BOX: Sheet = { width: "border-box" };
        static CONTENT_BOX: Sheet = { width: "content-box" };
        static AVAILABLE: Sheet = { width: "available" };
        static MIN_CONTENT: Sheet = { width: "min-content" };
        static MAX_CONTENT: Sheet = { width: "max-content" };
        static FIT_CONTENT: Sheet = { width: "fit-content" };
        static AUTO: Sheet = { width: "auto" };
    }
    export class WillChange {
        static set = (...params: Param[]): Sheet => ({ willChange: buildProperty(params) });
        static AUTO: Sheet = { willChange: "auto" };
        static SCROLL_POSITION: Sheet = { willChange: "scroll-position" };
        static CONTENTS: Sheet = { willChange: "contents" };
    }
    export class WordBreak {
        static set = (...params: Param[]): Sheet => ({ wordBreak: buildProperty(params) });
        static NORMAL: Sheet = { wordBreak: "normal" };
        static BREAK_ALL: Sheet = { wordBreak: "break-all" };
        static KEEP_ALL: Sheet = { wordBreak: "keep-all" };
        static BREAK_WORD: Sheet = { wordBreak: "break-word" };
    }
    export class WordSpacing {
        static set = (...params: Param[]): Sheet => ({ wordSpacing: buildProperty(params) });
        static NORMAL: Sheet = { wordSpacing: "normal" };
        static cap = (...params: number[]): Sheet => ({ wordSpacing: Length.cap(...params) });
        static ch = (...params: number[]): Sheet => ({ wordSpacing: Length.ch(...params) });
        static em = (...params: number[]): Sheet => ({ wordSpacing: Length.em(...params) });
        static ex = (...params: number[]): Sheet => ({ wordSpacing: Length.ex(...params) });
        static ic = (...params: number[]): Sheet => ({ wordSpacing: Length.ic(...params) });
        static lh = (...params: number[]): Sheet => ({ wordSpacing: Length.lh(...params) });
        static rem = (...params: number[]): Sheet => ({ wordSpacing: Length.rem(...params) });
        static rlh = (...params: number[]): Sheet => ({ wordSpacing: Length.rlh(...params) });
        static vh = (...params: number[]): Sheet => ({ wordSpacing: Length.vh(...params) });
        static vw = (...params: number[]): Sheet => ({ wordSpacing: Length.vw(...params) });
        static vi = (...params: number[]): Sheet => ({ wordSpacing: Length.vi(...params) });
        static vb = (...params: number[]): Sheet => ({ wordSpacing: Length.vb(...params) });
        static vmin = (...params: number[]): Sheet => ({ wordSpacing: Length.vmin(...params) });
        static vmax = (...params: number[]): Sheet => ({ wordSpacing: Length.vmax(...params) });
        static px = (...params: number[]): Sheet => ({ wordSpacing: Length.px(...params) });
        static cm = (...params: number[]): Sheet => ({ wordSpacing: Length.cm(...params) });
        static mm = (...params: number[]): Sheet => ({ wordSpacing: Length.mm(...params) });
        static Q = (...params: number[]): Sheet => ({ wordSpacing: Length.Q(...params) });
        static in = (...params: number[]): Sheet => ({ wordSpacing: Length.in(...params) });
        static pc = (...params: number[]): Sheet => ({ wordSpacing: Length.pc(...params) });
        static pt = (...params: number[]): Sheet => ({ wordSpacing: Length.pt(...params) });
        static fr = (...params: number[]): Sheet => ({ wordSpacing: Length.fr(...params) });
        static X = (...params: number[]): Sheet => ({ wordSpacing: Length.X(...params) });
    }
    export class WordWrap {
        static set = (...params: Param[]): Sheet => ({ wordWrap: buildProperty(params) });
        static NORMAL: Sheet = { wordWrap: "normal" };
        static BREAK_WORD: Sheet = { wordWrap: "break-word" };
    }
    export class WritingMode {
        static set = (...params: Param[]): Sheet => ({ writingMode: buildProperty(params) });
        static HORIZONTAL_TB: Sheet = { writingMode: "horizontal-tb" };
        static VERTICAL_RL: Sheet = { writingMode: "vertical-rl" };
        static VERTICAL_LR: Sheet = { writingMode: "vertical-lr" };
        static SIDEWAYS_RL: Sheet = { writingMode: "sideways-rl" };
        static SIDEWAYS_LR: Sheet = { writingMode: "sideways-lr" };
    }
    export class ZIndex {
        static set = (...params: Param[]): Sheet => ({ zIndex: buildProperty(params) });
        static AUTO: Sheet = { zIndex: "auto" };
    }
    export class Zoom {
        static set = (...params: Param[]): Sheet => ({ zoom: buildProperty(params) });
        static NORMAL: Sheet = { zoom: "normal" };
        static RESET: Sheet = { zoom: "reset" };
        static X = (...params: number[]): Sheet => ({ zoom: Length.X(...params) });
    }
}
